[{"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js":"1","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js":"2","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js":"3","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js":"4","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js":"5","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js":"6","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js":"7","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js":"8","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js":"9","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js":"10","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js":"11","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js":"12","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js":"13","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js":"14","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js":"15","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js":"16","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js":"17","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js":"18","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js":"19","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js":"20","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js":"21","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js":"22","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js":"23","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js":"24"},{"size":546,"mtime":1622572768672,"results":"25","hashOfConfig":"26"},{"size":8638,"mtime":1623173278819,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1615291765866,"results":"28","hashOfConfig":"26"},{"size":6840,"mtime":1623277703296,"results":"29","hashOfConfig":"26"},{"size":6422,"mtime":1620869763159,"results":"30","hashOfConfig":"26"},{"size":2288,"mtime":1615291765854,"results":"31","hashOfConfig":"26"},{"size":2638,"mtime":1617233353191,"results":"32","hashOfConfig":"26"},{"size":1824,"mtime":1615291765851,"results":"33","hashOfConfig":"26"},{"size":835,"mtime":1615291765852,"results":"34","hashOfConfig":"26"},{"size":1596,"mtime":1615395366826,"results":"35","hashOfConfig":"26"},{"size":580,"mtime":1615928953591,"results":"36","hashOfConfig":"26"},{"size":197,"mtime":1615928953593,"results":"37","hashOfConfig":"26"},{"size":376,"mtime":1615928953599,"results":"38","hashOfConfig":"26"},{"size":34970,"mtime":1618196804244,"results":"39","hashOfConfig":"26"},{"size":191,"mtime":1617233194718,"results":"40","hashOfConfig":"26"},{"size":188,"mtime":1617233204450,"results":"41","hashOfConfig":"26"},{"size":419240,"mtime":1623367751778,"results":"42","hashOfConfig":"26"},{"size":0,"mtime":1623103764544,"results":"43","hashOfConfig":"26"},{"size":769,"mtime":1623202333182,"results":"44","hashOfConfig":"26"},{"size":9914,"mtime":1623173278878,"results":"45","hashOfConfig":"26"},{"size":9658,"mtime":1623173278848,"results":"46","hashOfConfig":"26"},{"size":5521,"mtime":1623173278887,"results":"47","hashOfConfig":"26"},{"size":1567,"mtime":1623202211370,"results":"48","hashOfConfig":"26"},{"size":55056,"mtime":1623345057880,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18gn22y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":255,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js",[],["107","108"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js",["109","110","111","112","113"],"import React, { Suspense, lazy } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// Grab components out of the ReactRouterDOM that we will be using\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport UserApi from './api/loginApi'\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './index.css';\r\nimport './css/sidebar-desktop.css';\r\nimport './css/login.css';\r\nimport './css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport NavbarMobile from './components/navbarMobile';\r\nimport NavbarDesktop from './components/navbarDesktop';\r\nimport SidebarDesktop from './components/sidebarDesktop';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ContactUs = lazy(() => import(\"./views/contactUs\"));\r\nconst NotFoundPage = lazy(() => import(\"./views/notFoundPage\"));\r\nconst DashViewAbsorcao = lazy(() => import(\"./views/dashViewAbsorcao\"));\r\nconst DashViewNNCLog = lazy(() => import(\"./views/dashViewNNCLog\"));\r\nconst DashViewNNCMP = lazy(() => import(\"./views/dashViewNNCMP\"));\r\nconst DashViewRac = lazy(() => import(\"./views/rac\"));\r\nconst Home = lazy(() => import(\"./views/home\"));\r\nconst CreateUser = lazy(() => import(\"./views/createUser\"));\r\nconst ListUsers = lazy(() => import(\"./views/listUsers\"));\r\nconst EditUser = lazy(() => import(\"./views/editUser\"));\r\n\r\nfunction App() {\r\n    const userKpiDigitalTemp = { name: 'admin', pass: 'admin' }\r\n    const [state, setState] = React.useState({ username: \"\", password: \"\" });\r\n    // const [password, setPassword] = React.useState(\"\");\r\n    const [user, setUser] = React.useState();\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n    const toast = React.useRef(null);\r\n\r\n    const handleLogin = (e) => {\r\n       \r\n        const user = state;\r\n        \r\n        if(user.username.length < 1 || user.password.length < 1)\r\n        {\r\n            showInfo(\"Dados inválidos\", \"Os campos Usuário e Senha são obrigatórios\",  6000)\r\n            return;   \r\n        }\r\n\r\n        UserApi.post(user)\r\n            .then(r => {\r\n                if (r.status === 200) {\r\n                    localStorage.setItem('user', JSON.stringify({ name: user.username, token: r.data }));\r\n                    setIsAuthenticated(true);\r\n                    window.location.reload(false);\r\n                }\r\n            }).catch((e,ex) => {\r\n                if (e.response &&  e.response.status === 404) {\r\n                    showInfo(\"Usuário não encontrado\", \"Por favor verifique usuário e senha e tente novamente.\", 6000)\r\n                }else {\r\n                    showInfo(\"Nao foi possivel compeltar esta ação\", \"No momento não é possível completar esta ação.\", 6000)\r\n                }\r\n                setIsAuthenticated(false);\r\n            }).finally(() => {\r\n            })\r\n    }\r\n\r\n    const showInfo = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'info', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n    \r\n    const showError = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'error', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n        setUser({});\r\n        setState({ username: \"\", password: \"\" })\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n        if (loggedInUser) {\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            setUser(foundUser);\r\n        }\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault()\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let statetemp = { ...state };\r\n        statetemp[name] = value\r\n        setState({ ...statetemp });\r\n    }\r\n\r\n    /* Local Componentes */\r\n\r\n    const Layout = ({ children }) => {\r\n        return (\r\n            <div className=\"pdfsize\">\r\n                <NavbarMobile username={user.name} handleLogout={handleLogout} />\r\n                <NavbarDesktop username={user.name} handleLogout={handleLogout} />\r\n                <SidebarDesktop />\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"main-content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const ChangePageLoader = () => {\r\n        return (\r\n            <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\r\n        )\r\n    }\r\n\r\n    const loginfooter = <span>\r\n        <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n    </span>;\r\n\r\n    /* Se nao esta logado exibe tela de login: */\r\n    if (!user) {\r\n        return (\r\n            <div className=\"global-container\" >\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"card login-form\">\r\n                    <Card\r\n                        title=\"Bem vindo\"\r\n                        subTitle=\"faça o login para acessar o sistema\"\r\n                        className=\"card-body\"\r\n                        footer={<span>\r\n                            <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n                        </span>} >\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"name1\"\r\n                                    name=\"username\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.username}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                />\r\n                                <label htmlFor=\"name1\">Usuário</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <Password\r\n                                    id=\"pass\"\r\n                                    name=\"password\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.password}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                    feedback={false}\r\n                                    toggleMask />\r\n                                <label htmlFor=\"pass\">Senha</label>\r\n                            </span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    /*Exibe paginas no Router*/\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<ChangePageLoader />}>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route path='/contact' component={ContactUs} />\r\n                        <Route path='/absorcao' component={DashViewAbsorcao} />\r\n                        <Route path='/cadastro' component={CreateUser} />\r\n                        <Route path='/usuarios' component={ListUsers} />\r\n                        <Route exact path='/usuario/:id' component={EditUser} />\r\n                        <Route path='/nnclog' component={DashViewNNCLog} />\r\n                        <Route path='/nncmp' component={DashViewNNCMP} />\r\n                        <Route path='/rac' component={DashViewRac} />\r\n                        <Route path='404' component={NotFoundPage} />\r\n                        <Route path='*' component={NotFoundPage} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Suspense>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js",["114","115","116","117","118","119","120","121"],"import axios from 'axios'\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators,\r\n    AddItensToJsonArray,\r\n} from '../domain/kpiservice'\r\nimport { months } from '../domain/constants'\r\n\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n   //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\n\r\n\r\nexport default {\r\n\r\n    getSearaBaseRac: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseSQLNINJA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/SQLNINJA`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n        \r\n    getSearaBaseRacIndicadores: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadores`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRacIndicadores_: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadoresSemFiltro`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseNNCMPTotalCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRACTotalCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RACTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n    getSearaBaseRacCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n    getSearaBaseRacME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacFinal: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacFinal`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n            \r\n        }),\r\n\r\n    getSearaBaseNCCMP: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCMPCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCLOG: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/NNCLogTotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/CETotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacAberturaME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRacAberturaME2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME2`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n  \r\n}\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js",["122","123"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst NavbarDesktop = (props) => {\r\n\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"navbar-desk\" >\r\n            <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"https://logodownload.org/wp-content/uploads/2014/12/seara-logo-1-1.png\"\r\n                    //width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                Painel de KPIs\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Bem-vindo: <a href=\"#\" style={{ textDecoration: 'none' }}>{capitalize(props.username)}</a>\r\n                </Navbar.Text>\r\n                &nbsp;\r\n                &nbsp;\r\n                <Navbar.Text>\r\n                    <a href=\"#\" style={{ textDecoration: 'none' }} onClick={(e) => props.handleLogout(e)}>\r\n                        <span style={{ cursor: 'pointer', color: 'rgb(255 255 255 / 50%)' }}>\r\n                            Sair &nbsp;\r\n                            <i style={{ cursor: 'pointer', color: '#fff' }} className=\"pi pi-sign-out\"></i>\r\n                        </span>\r\n                    </a>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarDesktop;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions } from '../domain/constants';\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [970,4000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done “npm i cors --save-dev”\r\n\r\nfunction Home() {\r\n\r\n    \r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n\r\n    //chamadas\r\n    const [TableRacME, setTableRacME] = React.useState()  \r\n\r\n    const [GraficoRAC_Total, setGraficoRAC_Total] = React.useState()   \r\n    const [GraficoRAC_Aves, setGraficoRAC_Aves] = React.useState() \r\n    const [GraficoRAC_Suinos, setGraficoRAC_Suinos] = React.useState() \r\n    const [GraficoRAC_Preparados, setGraficoRAC_Preparados] = React.useState() \r\n    const [GraficoRAC_Outros, setGraficoRAC_Outros] = React.useState() \r\n    const [GraficoNNCMP_Total, setGraficoNNCMP_Total] = React.useState() \r\n    const [GraficoNNCLog_Total, setGraficoNNCLog_Total] = React.useState() \r\n    const [GraficoCE_Total, setGraficoCE_Total] = React.useState() \r\n    \r\n    let [responseGraficoRAC_Total, setresponseGraficoRAC_Total] = React.useState({})\r\n    let [responseGraficoRAC_Aves, setresponseGraficoRAC_Aves] = React.useState({})\r\n    let [responseGraficoRAC_Suinos, setresponseGraficoRAC_Suinos] = React.useState({})\r\n    let [responseGraficoRAC_Preparados, setresponseGraficoRAC_Preparados] = React.useState({})\r\n    let [responseGraficoRAC_Outros, setresponseGraficoRAC_Outros] = React.useState({})\r\n    let [responseGraficoNNCMP_Total, setresponseGraficoNNCMP_Total] = React.useState({})\r\n    let [responseGraficoNNCLog_Total, setresponseGraficoNNCLog_Total] = React.useState({})\r\n    let [responseGraficoCE_Total, setresponseGraficoCE_Total] = React.useState({})\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        //debugger\r\n        fetchData(GraficoRAC_Total, \"GraficoRAC_Total\");\r\n        fetchData(GraficoRAC_Aves, \"GraficoRAC_Aves\");\r\n        fetchData(GraficoRAC_Suinos, \"GraficoRAC_Suinos\");\r\n        fetchData(GraficoRAC_Preparados, \"GraficoRAC_Preparados\");\r\n        fetchData(GraficoRAC_Outros, \"GraficoRAC_Outros\");\r\n        fetchData(GraficoNNCMP_Total, \"GraficoNNCMP_Total\");\r\n        fetchData(GraficoNNCLog_Total, \"GraficoNNCLog_Total\");\r\n        fetchData(GraficoCE_Total, \"GraficoCE_Total\");\r\n    }, []);\r\n\r\n    const GerarGrafico = (objeto, numGrafico) => {\r\n        ////debugger\r\n        //if (selectedIndicator1 !== \"\" && selectedIndicator2 !== \"\" && selectedIndicator3 !== \"\") {\r\n            ////debugger\r\n            setIsUpdatingData(true)\r\n            let json = objeto; //GraficoRAC_Total , 2, 3.....\r\n            let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n            let groupBy = function groupBy(list, keyGetter) {\r\n                const map = new Map();\r\n                list.forEach((item) => {\r\n                    const key = keyGetter(item);\r\n                    const collection = map.get(key);\r\n                    if (!collection) {\r\n                        map.set(key, [item]);\r\n                    } else {\r\n                        collection.push(item);\r\n                    }\r\n                });\r\n                return map;\r\n            }\r\n\r\n            // let xaxis = Array.from(groupBy(json, x => x[selectedIndicator1]), ([name, value]) => ({ name, value }));\r\n            // let yaxis = Array.from(groupBy(json, x => x[selectedIndicator2]), ([name, value]) => ({ name }));\r\n\r\n            let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n            let yaxis = [{name:'Evolutivo 2020'},{name:'Evolutivo 2021'},{name:'Evolutivo Meta'},{name:'Meta'},{name:'2019'},{name:'2020'},{name: '2021'}];\r\n\r\n            // xaxis.sort(function (a, b) {\r\n            //     return parseFloat(a.name) - parseFloat(b.name);\r\n            // });\r\n\r\n            xaxis.forEach(x => {\r\n                // x['yaxis'] = Array.from(groupBy(x.value, x => x[selectedIndicator2]), ([name, value]) => ({ name, quantidade: somaX(x, name, selectedIndicator2, \"Quant\") }));\r\n                if (x.name == \"2019\"){\r\n                    x['yaxis'] = [{name: \"2019\", value: x.value[0].Valor}]\r\n                }else if (x.name == \"2020\"){\r\n                    x['yaxis'] = [{name: \"2020\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"Meta\"){\r\n                    x['yaxis'] = [{name: \"Meta\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"2021\"){\r\n                    x['yaxis'] = [{name: \"2021\", value: x.value[0].Valor}]\r\n                }else{\r\n                    x['yaxis'] = [\r\n                                    {name: \"Evolutivo 2020\", value: x.value[0].a2020},\r\n                                    {name: \"Evolutivo Meta\", value: x.value[0].aMeta},\r\n                                    {name: \"Evolutivo 2021\", value: x.value[0].a2021}\r\n                                ]\r\n                }\r\n            })\r\n\r\n            let series = []\r\n            yaxis.forEach((y, index) => {\r\n                let dataset = xaxis.map(xx => {\r\n                    let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                    if (yaxysvalue.length)\r\n                        return yaxysvalue[0].value\r\n\r\n                    return null\r\n                })\r\n\r\n                //let cor = colorsBars[Math.floor(Math.random() * colorsBars.length)]\r\n\r\n                let tipo = 'line'\r\n                let cor = '#bfbfbf'\r\n                let corLabel = '#bfbfbf'\r\n                let yAx = \"B\"\r\n                let varborderDash = [0,0]\r\n\r\n                switch (y.name){\r\n\r\n                    case \"2019\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2020\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Meta\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2021\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#cccccc\"\r\n                                    corLabel = \"#cccccc\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Evolutivo 2020\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(166, 166, 166)\"\r\n                                    corLabel = \"rgb(166, 166, 166)\"\r\n                                    varborderDash = [10,5]\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo Meta\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo 2021\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(89,89,89)\"\r\n                                    corLabel = \"rgb(89,89,89)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                                 \r\n                    default:\r\n                                    break\r\n\r\n\r\n                }\r\n\r\n                let serie = {\r\n                    type: tipo,\r\n                    yAxisID: yAx,\r\n                    label: y.name,\r\n                    backgroundColor: cor,\r\n                    fill: false,\r\n                    borderColor: cor,\r\n                    borderWidth: 2,\r\n                    pointRadius: 5,\r\n                    pointBackgroundColor: \"transparent\",\r\n                    pointBorderColor: \"transparent\",\r\n                    borderDash: varborderDash, \r\n                    data: dataset,\r\n                    datalabels: {\r\n                    \r\n                        align: \"top\",\r\n                        anchor: \"end\",\r\n                        offset: 10,\r\n                        padding: -2,\r\n                        color: corLabel,\r\n                        //clip: true,\r\n                        font: {\r\n                            size: \"10\",\r\n                        },\r\n                        \r\n                    }\r\n                     \r\n                }\r\n                series.push(serie)\r\n            })\r\n\r\n            let seriesAdd = []\r\n            \r\n                series.filter(s => s.label != null).forEach(element => {\r\n                    seriesAdd.push(element)\r\n                });\r\n           \r\n\r\n            const dashboardData = {\r\n                labels: xaxis.map(r => r.name),\r\n                datasets: seriesAdd,\r\n                indicators\r\n                \r\n            };\r\n            //debugger\r\n            switch (numGrafico){\r\n                case \"GraficoRAC_Total\":\r\n                    setresponseGraficoRAC_Total(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Aves\":\r\n                    setresponseGraficoRAC_Aves(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Suinos\":\r\n                    setresponseGraficoRAC_Suinos(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Preparados\":\r\n                    setresponseGraficoRAC_Preparados(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Outros\":\r\n                    setresponseGraficoRAC_Outros(dashboardData)\r\n                    break\r\n                case \"GraficoNNCMP_Total\":\r\n                    setresponseGraficoNNCMP_Total(dashboardData)\r\n                    break\r\n                case \"GraficoNNCLog_Total\":\r\n                    setresponseGraficoNNCLog_Total(dashboardData)\r\n                    break\r\n                case \"GraficoCE_Total\":\r\n                    setresponseGraficoCE_Total(dashboardData)\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n\r\n            setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableColGroupDemo = () => {\r\n\r\n        if (!GraficoRAC_Total) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < GraficoRAC_Total.length; i++) {\r\n            json.push(GraficoRAC_Total[i])\r\n        }\r\n\r\n        const sales = json\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={sales} sortMode=\"multiple\">\r\n                        <Column field=\"Periodo\" header=\"Período\" sortable></Column>\r\n                        <Column field=\"Valor\" header=\"Nº RAC Histórico\" sortable ></Column>\r\n                        <Column field=\"a2020\" header=\"Nº RAC 2020 Mensal\" sortable></Column>\r\n                        <Column field=\"aMeta\" header=\"Nº RAC Meta Mensal\" sortable></Column>\r\n                        <Column field=\"a2021\" header=\"Nº RAC 2021 Mensal\" sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    function aplicar() {\r\n        //debugger\r\n        GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n        GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n        GerarGrafico(GraficoRAC_Suinos, \"GraficoRAC_Suinos\")\r\n        GerarGrafico(GraficoRAC_Preparados, \"GraficoRAC_Preparados\")\r\n        GerarGrafico(GraficoRAC_Outros, \"GraficoRAC_Outros\")\r\n        GerarGrafico(GraficoNNCMP_Total, \"GraficoNNCMP_Total\")\r\n        GerarGrafico(GraficoNNCLog_Total, \"GraficoNNCLog_Total\")\r\n        GerarGrafico(GraficoCE_Total, \"GraficoCE_Total\")\r\n    }\r\n\r\n    const fetchData = (objeto, numGrafico) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n            let json = JSON.parse(response.data)\r\n            setTableRacME(json)\r\n        })\r\n\r\n        if(numGrafico == \"GraficoRAC_Total\"){\r\n            //debugger\r\n            let parametros = ['where 1=1']\r\n            api.getSearaBaseRacCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Total(json)\r\n\r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n        }else if (numGrafico == \"GraficoRAC_Aves\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'AVES\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Aves(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Aves(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Suinos\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'SUÍ\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Suinos(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Suinos(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Preparados\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'Preparados\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Preparados(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Preparados(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Outros\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'OUTROS\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Outros(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Outros(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCMP_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCMP_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCMP_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCLog_Total\"){\r\n            \r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCLog_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCLog_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoCE_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE    Negócio =\\'AVES LEVELS\\' ']\r\n            api.getSearaBaseCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoCE_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoCE_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Puxando dados da RAC</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div> \r\n            <Row>\r\n                <Col lg={12}>\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                KPI - RCA\r\n                                    <br />\r\n                                <small>Descrição do KPI</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={fetchData}>Atualizar</button>\r\n                                </div>  \r\n\r\n                                <Pdf targetRef={ref} filename=\"rac.pdf\" options={options} x={1} scale={0.8}>\r\n                                    {({toPdf}) => (\r\n                                        <button onClick={toPdf}>Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* Botão aplicar */}\r\n            {isUpdatingData ? (<div> </div>) : (\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px' }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar}>Aplicar</button>\r\n                </Row>\r\n            )}\r\n\r\n            \r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-5 col-12 \">\r\n                        <h1>Relatório de Atendimento ao Consumidor (RAC)</h1>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total Habilitador\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total RAC\" subTitle=\"RA\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Total} options={lightOptions}/>\r\n                            </Card>\r\n                        )}\r\n  \r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                                \r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total NNC Matéria-Prima\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Aves\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Aves} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Suínos\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Suinos} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Preparados\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Preparados} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Outros\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Outros} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {/* mercado externo */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Corpos estranhos\" subTitle=\"Corpo Estranho\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            \r\n                                DataTableRACME()\r\n                            \r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                {/* mercado interno */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Matérial Prima\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                    </Col>\r\n\r\n                </Row>   \r\n\r\n                {/* atendimento comercial */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Log\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCLog_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        \r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                        \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js",["411"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n     //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n//    baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/login`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js",["412","413","414"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    SelectRole: \"Select a role\",\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    EditPassword: \"Edit password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    EditAccount: \"Edit Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Edit Account\"\r\n}\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass EditUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: false,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        const user = this.fetchData(id);\r\n    }\r\n\r\n    fetchData = id => {\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        Api.getOne(id).then(r => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n\r\n            if (r.data === \"null\")\r\n                window.location.href = `${window.location.origin}/404`;\r\n\r\n            return JSON.parse(r.data);\r\n        }).then(user => {\r\n            this.setState({\r\n                id: user.Id,\r\n                username: user.Username,\r\n                email: user.Email,\r\n                arr: [ //claims\r\n                    { id: 1, value: \"Read\", isChecked: true },\r\n                    { id: 2, value: \"Write\", isChecked: false },\r\n                ],\r\n                enableSubmit: true,\r\n                showProgressbar: false\r\n            })\r\n\r\n            const userRoles = JSON.parse(user.Roles)\r\n\r\n            if (userRoles.length)\r\n                this.setState({ Role: userRoles[0].Role })\r\n\r\n            userRoles.forEach(role => {\r\n                role.Claims.forEach(claim => {\r\n\r\n                    let arrCopy = this.state.arr\r\n                    arrCopy.forEach(item => {\r\n                        if (item.value.toLowerCase() === claim.toLowerCase())\r\n                            item.isChecked = true\r\n                    })\r\n                    this.setState({ arr: arrCopy })\r\n\r\n                });\r\n            });\r\n\r\n        }).catch(e => {\r\n            if (e?.response?.status === 401 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, e.response.Message)\r\n\r\n            } if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message, \"\")\r\n            } else {\r\n\r\n            }\r\n        }).finally(() => {\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"Id\"] = this.state.id\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.put(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.EditAccount}\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(EditUserJxs);\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js",["415"],"import React from 'react';\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Password } from 'primereact/password';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    CreatePassword: \"Create password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    CreateAccount: \"Create Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Create Account\"\r\n}\r\n\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass CreateUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: true,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"password\"] = this.state.password\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.post(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const passwordOk = this.state.password.length > 0;\r\n        const passwordConfirmOk = this.state.passwordConfirm.length > 0 && (this.state.password === this.state.passwordConfirm);\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && passwordOk\r\n            && passwordConfirmOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {/* SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"password\"\r\n                            placeholder={registerTexts.CreatePassword}\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    {/* CONFIRMAR SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordConfirmOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"passwordConfirm\"\r\n                            placeholder={registerTexts.RepeatPassword}\r\n                            value={this.state.passwordConfirm}\r\n                            onChange={this.handleInputChange}\r\n                            feedback={false}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.CreateAccount}\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center\">{registerTexts.HaveAnAccount} <a href=\"\">{registerTexts.LogIn}</a> </p>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst CreateUser = () => {\r\n    return <CreateUserJxs />\r\n};\r\n\r\nexport default CreateUser;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js",["416"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n    //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n    baseURL: \"http://localhost/SearaDashboard\"\r\n    //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n    //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    getOne: (id) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users?userId=${id}`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    get: () =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/create-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    put: (user) =>\r\n        instance({\r\n            method: \"PUT\",\r\n            url: `/edit-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js",["417"],{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","severity":1,"message":"423","line":6,"column":8,"nodeType":"424","messageId":"425","endLine":6,"endColumn":17},{"ruleId":"422","severity":1,"message":"426","line":40,"column":11,"nodeType":"424","messageId":"425","endLine":40,"endColumn":29},{"ruleId":"422","severity":1,"message":"427","line":44,"column":12,"nodeType":"424","messageId":"425","endLine":44,"endColumn":27},{"ruleId":"422","severity":1,"message":"428","line":80,"column":11,"nodeType":"424","messageId":"425","endLine":80,"endColumn":20},{"ruleId":"422","severity":1,"message":"429","line":134,"column":11,"nodeType":"424","messageId":"425","endLine":134,"endColumn":22},{"ruleId":"422","severity":1,"message":"430","line":3,"column":5,"nodeType":"424","messageId":"425","endLine":3,"endColumn":41},{"ruleId":"422","severity":1,"message":"431","line":4,"column":5,"nodeType":"424","messageId":"425","endLine":4,"endColumn":21},{"ruleId":"422","severity":1,"message":"432","line":5,"column":5,"nodeType":"424","messageId":"425","endLine":5,"endColumn":20},{"ruleId":"422","severity":1,"message":"433","line":6,"column":5,"nodeType":"424","messageId":"425","endLine":6,"endColumn":21},{"ruleId":"422","severity":1,"message":"434","line":7,"column":5,"nodeType":"424","messageId":"425","endLine":7,"endColumn":18},{"ruleId":"422","severity":1,"message":"435","line":8,"column":5,"nodeType":"424","messageId":"425","endLine":8,"endColumn":24},{"ruleId":"422","severity":1,"message":"436","line":10,"column":10,"nodeType":"424","messageId":"425","endLine":10,"endColumn":16},{"ruleId":"437","severity":1,"message":"438","line":21,"column":1,"nodeType":"439","endLine":261,"endColumn":2},{"ruleId":"440","severity":1,"message":"441","line":25,"column":32,"nodeType":"442","endLine":25,"endColumn":79},{"ruleId":"440","severity":1,"message":"441","line":30,"column":21,"nodeType":"442","endLine":30,"endColumn":107},{"ruleId":"422","severity":1,"message":"443","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"444","line":1,"column":27,"nodeType":"424","messageId":"425","endLine":1,"endColumn":36},{"ruleId":"422","severity":1,"message":"445","line":1,"column":38,"nodeType":"424","messageId":"425","endLine":1,"endColumn":44},{"ruleId":"422","severity":1,"message":"446","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":23},{"ruleId":"422","severity":1,"message":"447","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":16},{"ruleId":"422","severity":1,"message":"448","line":7,"column":10,"nodeType":"424","messageId":"425","endLine":7,"endColumn":19},{"ruleId":"422","severity":1,"message":"449","line":8,"column":10,"nodeType":"424","messageId":"425","endLine":8,"endColumn":18},{"ruleId":"422","severity":1,"message":"450","line":10,"column":8,"nodeType":"424","messageId":"425","endLine":10,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":11,"column":8,"nodeType":"424","messageId":"425","endLine":11,"endColumn":17},{"ruleId":"422","severity":1,"message":"451","line":17,"column":10,"nodeType":"424","messageId":"425","endLine":17,"endColumn":21},{"ruleId":"422","severity":1,"message":"452","line":19,"column":10,"nodeType":"424","messageId":"425","endLine":19,"endColumn":16},{"ruleId":"422","severity":1,"message":"453","line":20,"column":10,"nodeType":"424","messageId":"425","endLine":20,"endColumn":18},{"ruleId":"422","severity":1,"message":"454","line":22,"column":8,"nodeType":"424","messageId":"425","endLine":22,"endColumn":18},{"ruleId":"422","severity":1,"message":"455","line":35,"column":18,"nodeType":"424","messageId":"425","endLine":35,"endColumn":28},{"ruleId":"422","severity":1,"message":"456","line":45,"column":10,"nodeType":"424","messageId":"425","endLine":45,"endColumn":31},{"ruleId":"422","severity":1,"message":"457","line":55,"column":5,"nodeType":"424","messageId":"425","endLine":55,"endColumn":9},{"ruleId":"458","severity":1,"message":"459","line":95,"column":8,"nodeType":"460","endLine":95,"endColumn":10,"suggestions":"461"},{"ruleId":"462","severity":1,"message":"463","line":131,"column":28,"nodeType":"464","messageId":"465","endLine":131,"endColumn":30},{"ruleId":"462","severity":1,"message":"463","line":133,"column":34,"nodeType":"464","messageId":"465","endLine":133,"endColumn":36},{"ruleId":"462","severity":1,"message":"463","line":135,"column":33,"nodeType":"464","messageId":"465","endLine":135,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":137,"column":33,"nodeType":"464","messageId":"465","endLine":137,"endColumn":35},{"ruleId":"422","severity":1,"message":"466","line":296,"column":11,"nodeType":"424","messageId":"425","endLine":296,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":381,"column":23,"nodeType":"464","messageId":"465","endLine":381,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":422,"column":30,"nodeType":"464","messageId":"465","endLine":422,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":464,"column":30,"nodeType":"464","messageId":"465","endLine":464,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":506,"column":30,"nodeType":"464","messageId":"465","endLine":506,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":548,"column":30,"nodeType":"464","messageId":"465","endLine":548,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":590,"column":30,"nodeType":"464","messageId":"465","endLine":590,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":632,"column":30,"nodeType":"464","messageId":"465","endLine":632,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":674,"column":30,"nodeType":"464","messageId":"465","endLine":674,"endColumn":32},{"ruleId":"422","severity":1,"message":"467","line":721,"column":11,"nodeType":"424","messageId":"425","endLine":721,"endColumn":22},{"ruleId":"422","severity":1,"message":"428","line":725,"column":11,"nodeType":"424","messageId":"425","endLine":725,"endColumn":20},{"ruleId":"422","severity":1,"message":"443","line":2,"column":17,"nodeType":"424","messageId":"425","endLine":2,"endColumn":25},{"ruleId":"422","severity":1,"message":"444","line":2,"column":27,"nodeType":"424","messageId":"425","endLine":2,"endColumn":36},{"ruleId":"422","severity":1,"message":"445","line":2,"column":38,"nodeType":"424","messageId":"425","endLine":2,"endColumn":44},{"ruleId":"422","severity":1,"message":"468","line":3,"column":8,"nodeType":"424","messageId":"425","endLine":3,"endColumn":23},{"ruleId":"422","severity":1,"message":"469","line":3,"column":27,"nodeType":"424","messageId":"425","endLine":3,"endColumn":39},{"ruleId":"422","severity":1,"message":"470","line":3,"column":41,"nodeType":"424","messageId":"425","endLine":3,"endColumn":61},{"ruleId":"422","severity":1,"message":"471","line":3,"column":63,"nodeType":"424","messageId":"425","endLine":3,"endColumn":74},{"ruleId":"422","severity":1,"message":"472","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":16},{"ruleId":"422","severity":1,"message":"446","line":7,"column":8,"nodeType":"424","messageId":"425","endLine":7,"endColumn":23},{"ruleId":"422","severity":1,"message":"447","line":8,"column":10,"nodeType":"424","messageId":"425","endLine":8,"endColumn":16},{"ruleId":"422","severity":1,"message":"448","line":10,"column":10,"nodeType":"424","messageId":"425","endLine":10,"endColumn":19},{"ruleId":"422","severity":1,"message":"449","line":11,"column":10,"nodeType":"424","messageId":"425","endLine":11,"endColumn":18},{"ruleId":"422","severity":1,"message":"450","line":13,"column":8,"nodeType":"424","messageId":"425","endLine":13,"endColumn":13},{"ruleId":"422","severity":1,"message":"423","line":14,"column":8,"nodeType":"424","messageId":"425","endLine":14,"endColumn":17},{"ruleId":"422","severity":1,"message":"451","line":20,"column":10,"nodeType":"424","messageId":"425","endLine":20,"endColumn":21},{"ruleId":"422","severity":1,"message":"452","line":22,"column":10,"nodeType":"424","messageId":"425","endLine":22,"endColumn":16},{"ruleId":"422","severity":1,"message":"453","line":23,"column":10,"nodeType":"424","messageId":"425","endLine":23,"endColumn":18},{"ruleId":"422","severity":1,"message":"454","line":25,"column":8,"nodeType":"424","messageId":"425","endLine":25,"endColumn":18},{"ruleId":"422","severity":1,"message":"436","line":38,"column":10,"nodeType":"424","messageId":"425","endLine":38,"endColumn":16},{"ruleId":"422","severity":1,"message":"455","line":38,"column":18,"nodeType":"424","messageId":"425","endLine":38,"endColumn":28},{"ruleId":"422","severity":1,"message":"473","line":40,"column":9,"nodeType":"424","messageId":"425","endLine":40,"endColumn":28},{"ruleId":"422","severity":1,"message":"430","line":43,"column":5,"nodeType":"424","messageId":"425","endLine":43,"endColumn":41},{"ruleId":"422","severity":1,"message":"431","line":44,"column":5,"nodeType":"424","messageId":"425","endLine":44,"endColumn":21},{"ruleId":"422","severity":1,"message":"432","line":45,"column":5,"nodeType":"424","messageId":"425","endLine":45,"endColumn":20},{"ruleId":"422","severity":1,"message":"433","line":46,"column":5,"nodeType":"424","messageId":"425","endLine":46,"endColumn":21},{"ruleId":"422","severity":1,"message":"434","line":47,"column":5,"nodeType":"424","messageId":"425","endLine":47,"endColumn":18},{"ruleId":"422","severity":1,"message":"456","line":51,"column":10,"nodeType":"424","messageId":"425","endLine":51,"endColumn":31},{"ruleId":"422","severity":1,"message":"474","line":54,"column":10,"nodeType":"424","messageId":"425","endLine":54,"endColumn":20},{"ruleId":"422","severity":1,"message":"475","line":56,"column":8,"nodeType":"424","messageId":"425","endLine":56,"endColumn":14},{"ruleId":"422","severity":1,"message":"457","line":65,"column":5,"nodeType":"424","messageId":"425","endLine":65,"endColumn":9},{"ruleId":"462","severity":1,"message":"463","line":117,"column":109,"nodeType":"464","messageId":"465","endLine":117,"endColumn":111},{"ruleId":"462","severity":1,"message":"463","line":133,"column":35,"nodeType":"464","messageId":"465","endLine":133,"endColumn":37},{"ruleId":"422","severity":1,"message":"476","line":334,"column":10,"nodeType":"424","messageId":"425","endLine":334,"endColumn":23},{"ruleId":"422","severity":1,"message":"477","line":334,"column":25,"nodeType":"424","messageId":"425","endLine":334,"endColumn":41},{"ruleId":"422","severity":1,"message":"478","line":400,"column":10,"nodeType":"424","messageId":"425","endLine":400,"endColumn":41},{"ruleId":"422","severity":1,"message":"479","line":400,"column":43,"nodeType":"424","messageId":"425","endLine":400,"endColumn":77},{"ruleId":"422","severity":1,"message":"480","line":412,"column":10,"nodeType":"424","messageId":"425","endLine":412,"endColumn":47},{"ruleId":"422","severity":1,"message":"481","line":412,"column":49,"nodeType":"424","messageId":"425","endLine":412,"endColumn":89},{"ruleId":"422","severity":1,"message":"482","line":418,"column":10,"nodeType":"424","messageId":"425","endLine":418,"endColumn":43},{"ruleId":"422","severity":1,"message":"483","line":418,"column":45,"nodeType":"424","messageId":"425","endLine":418,"endColumn":81},{"ruleId":"422","severity":1,"message":"484","line":424,"column":10,"nodeType":"424","messageId":"425","endLine":424,"endColumn":45},{"ruleId":"422","severity":1,"message":"485","line":424,"column":47,"nodeType":"424","messageId":"425","endLine":424,"endColumn":85},{"ruleId":"422","severity":1,"message":"486","line":425,"column":10,"nodeType":"424","messageId":"425","endLine":425,"endColumn":47},{"ruleId":"422","severity":1,"message":"487","line":425,"column":49,"nodeType":"424","messageId":"425","endLine":425,"endColumn":89},{"ruleId":"422","severity":1,"message":"488","line":447,"column":10,"nodeType":"424","messageId":"425","endLine":447,"endColumn":35},{"ruleId":"422","severity":1,"message":"489","line":447,"column":37,"nodeType":"424","messageId":"425","endLine":447,"endColumn":65},{"ruleId":"422","severity":1,"message":"490","line":453,"column":10,"nodeType":"424","messageId":"425","endLine":453,"endColumn":35},{"ruleId":"422","severity":1,"message":"491","line":453,"column":37,"nodeType":"424","messageId":"425","endLine":453,"endColumn":65},{"ruleId":"422","severity":1,"message":"492","line":459,"column":10,"nodeType":"424","messageId":"425","endLine":459,"endColumn":37},{"ruleId":"422","severity":1,"message":"493","line":459,"column":39,"nodeType":"424","messageId":"425","endLine":459,"endColumn":69},{"ruleId":"422","severity":1,"message":"494","line":465,"column":10,"nodeType":"424","messageId":"425","endLine":465,"endColumn":34},{"ruleId":"422","severity":1,"message":"495","line":465,"column":36,"nodeType":"424","messageId":"425","endLine":465,"endColumn":63},{"ruleId":"422","severity":1,"message":"496","line":471,"column":10,"nodeType":"424","messageId":"425","endLine":471,"endColumn":40},{"ruleId":"422","severity":1,"message":"497","line":471,"column":42,"nodeType":"424","messageId":"425","endLine":471,"endColumn":75},{"ruleId":"422","severity":1,"message":"498","line":477,"column":10,"nodeType":"424","messageId":"425","endLine":477,"endColumn":34},{"ruleId":"422","severity":1,"message":"499","line":477,"column":36,"nodeType":"424","messageId":"425","endLine":477,"endColumn":63},{"ruleId":"422","severity":1,"message":"500","line":480,"column":10,"nodeType":"424","messageId":"425","endLine":480,"endColumn":31},{"ruleId":"422","severity":1,"message":"501","line":480,"column":33,"nodeType":"424","messageId":"425","endLine":480,"endColumn":57},{"ruleId":"422","severity":1,"message":"502","line":483,"column":10,"nodeType":"424","messageId":"425","endLine":483,"endColumn":39},{"ruleId":"422","severity":1,"message":"503","line":483,"column":41,"nodeType":"424","messageId":"425","endLine":483,"endColumn":73},{"ruleId":"422","severity":1,"message":"504","line":486,"column":10,"nodeType":"424","messageId":"425","endLine":486,"endColumn":42},{"ruleId":"422","severity":1,"message":"505","line":486,"column":44,"nodeType":"424","messageId":"425","endLine":486,"endColumn":79},{"ruleId":"422","severity":1,"message":"506","line":489,"column":10,"nodeType":"424","messageId":"425","endLine":489,"endColumn":50},{"ruleId":"422","severity":1,"message":"507","line":489,"column":52,"nodeType":"424","messageId":"425","endLine":489,"endColumn":95},{"ruleId":"422","severity":1,"message":"508","line":492,"column":10,"nodeType":"424","messageId":"425","endLine":492,"endColumn":44},{"ruleId":"422","severity":1,"message":"509","line":492,"column":46,"nodeType":"424","messageId":"425","endLine":492,"endColumn":83},{"ruleId":"422","severity":1,"message":"510","line":495,"column":10,"nodeType":"424","messageId":"425","endLine":495,"endColumn":31},{"ruleId":"422","severity":1,"message":"511","line":495,"column":33,"nodeType":"424","messageId":"425","endLine":495,"endColumn":57},{"ruleId":"422","severity":1,"message":"512","line":498,"column":10,"nodeType":"424","messageId":"425","endLine":498,"endColumn":33},{"ruleId":"422","severity":1,"message":"513","line":498,"column":35,"nodeType":"424","messageId":"425","endLine":498,"endColumn":61},{"ruleId":"422","severity":1,"message":"514","line":501,"column":10,"nodeType":"424","messageId":"425","endLine":501,"endColumn":31},{"ruleId":"422","severity":1,"message":"515","line":501,"column":33,"nodeType":"424","messageId":"425","endLine":501,"endColumn":57},{"ruleId":"422","severity":1,"message":"516","line":504,"column":10,"nodeType":"424","messageId":"425","endLine":504,"endColumn":33},{"ruleId":"422","severity":1,"message":"517","line":504,"column":35,"nodeType":"424","messageId":"425","endLine":504,"endColumn":61},{"ruleId":"422","severity":1,"message":"518","line":507,"column":46,"nodeType":"424","messageId":"425","endLine":507,"endColumn":83},{"ruleId":"422","severity":1,"message":"519","line":508,"column":10,"nodeType":"424","messageId":"425","endLine":508,"endColumn":36},{"ruleId":"422","severity":1,"message":"520","line":508,"column":38,"nodeType":"424","messageId":"425","endLine":508,"endColumn":67},{"ruleId":"422","severity":1,"message":"521","line":511,"column":45,"nodeType":"424","messageId":"425","endLine":511,"endColumn":81},{"ruleId":"422","severity":1,"message":"522","line":512,"column":10,"nodeType":"424","messageId":"425","endLine":512,"endColumn":35},{"ruleId":"422","severity":1,"message":"523","line":512,"column":37,"nodeType":"424","messageId":"425","endLine":512,"endColumn":65},{"ruleId":"422","severity":1,"message":"524","line":515,"column":51,"nodeType":"424","messageId":"425","endLine":515,"endColumn":93},{"ruleId":"422","severity":1,"message":"525","line":516,"column":10,"nodeType":"424","messageId":"425","endLine":516,"endColumn":41},{"ruleId":"422","severity":1,"message":"526","line":516,"column":43,"nodeType":"424","messageId":"425","endLine":516,"endColumn":77},{"ruleId":"422","severity":1,"message":"527","line":519,"column":47,"nodeType":"424","messageId":"425","endLine":519,"endColumn":85},{"ruleId":"422","severity":1,"message":"528","line":520,"column":10,"nodeType":"424","messageId":"425","endLine":520,"endColumn":37},{"ruleId":"422","severity":1,"message":"529","line":520,"column":39,"nodeType":"424","messageId":"425","endLine":520,"endColumn":69},{"ruleId":"422","severity":1,"message":"530","line":523,"column":10,"nodeType":"424","messageId":"425","endLine":523,"endColumn":29},{"ruleId":"422","severity":1,"message":"531","line":523,"column":31,"nodeType":"424","messageId":"425","endLine":523,"endColumn":53},{"ruleId":"422","severity":1,"message":"532","line":526,"column":10,"nodeType":"424","messageId":"425","endLine":526,"endColumn":20},{"ruleId":"422","severity":1,"message":"533","line":526,"column":22,"nodeType":"424","messageId":"425","endLine":526,"endColumn":35},{"ruleId":"422","severity":1,"message":"534","line":528,"column":10,"nodeType":"424","messageId":"425","endLine":528,"endColumn":20},{"ruleId":"422","severity":1,"message":"535","line":528,"column":22,"nodeType":"424","messageId":"425","endLine":528,"endColumn":35},{"ruleId":"422","severity":1,"message":"536","line":531,"column":10,"nodeType":"424","messageId":"425","endLine":531,"endColumn":24},{"ruleId":"422","severity":1,"message":"537","line":531,"column":26,"nodeType":"424","messageId":"425","endLine":531,"endColumn":43},{"ruleId":"422","severity":1,"message":"538","line":534,"column":10,"nodeType":"424","messageId":"425","endLine":534,"endColumn":29},{"ruleId":"422","severity":1,"message":"539","line":534,"column":31,"nodeType":"424","messageId":"425","endLine":534,"endColumn":53},{"ruleId":"422","severity":1,"message":"540","line":537,"column":41,"nodeType":"424","messageId":"425","endLine":537,"endColumn":73},{"ruleId":"422","severity":1,"message":"541","line":538,"column":10,"nodeType":"424","messageId":"425","endLine":538,"endColumn":31},{"ruleId":"422","severity":1,"message":"542","line":538,"column":33,"nodeType":"424","messageId":"425","endLine":538,"endColumn":57},{"ruleId":"422","severity":1,"message":"543","line":539,"column":49,"nodeType":"424","messageId":"425","endLine":539,"endColumn":89},{"ruleId":"422","severity":1,"message":"544","line":540,"column":10,"nodeType":"424","messageId":"425","endLine":540,"endColumn":39},{"ruleId":"422","severity":1,"message":"545","line":540,"column":41,"nodeType":"424","messageId":"425","endLine":540,"endColumn":73},{"ruleId":"422","severity":1,"message":"546","line":541,"column":50,"nodeType":"424","messageId":"425","endLine":541,"endColumn":91},{"ruleId":"422","severity":1,"message":"547","line":542,"column":10,"nodeType":"424","messageId":"425","endLine":542,"endColumn":40},{"ruleId":"422","severity":1,"message":"548","line":542,"column":42,"nodeType":"424","messageId":"425","endLine":542,"endColumn":75},{"ruleId":"422","severity":1,"message":"549","line":544,"column":36,"nodeType":"424","messageId":"425","endLine":544,"endColumn":63},{"ruleId":"422","severity":1,"message":"550","line":545,"column":10,"nodeType":"424","messageId":"425","endLine":545,"endColumn":26},{"ruleId":"422","severity":1,"message":"551","line":545,"column":28,"nodeType":"424","messageId":"425","endLine":545,"endColumn":47},{"ruleId":"422","severity":1,"message":"552","line":546,"column":44,"nodeType":"424","messageId":"425","endLine":546,"endColumn":79},{"ruleId":"422","severity":1,"message":"553","line":547,"column":10,"nodeType":"424","messageId":"425","endLine":547,"endColumn":34},{"ruleId":"422","severity":1,"message":"554","line":547,"column":36,"nodeType":"424","messageId":"425","endLine":547,"endColumn":63},{"ruleId":"422","severity":1,"message":"555","line":548,"column":45,"nodeType":"424","messageId":"425","endLine":548,"endColumn":81},{"ruleId":"422","severity":1,"message":"556","line":549,"column":10,"nodeType":"424","messageId":"425","endLine":549,"endColumn":35},{"ruleId":"422","severity":1,"message":"557","line":549,"column":37,"nodeType":"424","messageId":"425","endLine":549,"endColumn":65},{"ruleId":"422","severity":1,"message":"558","line":551,"column":36,"nodeType":"424","messageId":"425","endLine":551,"endColumn":63},{"ruleId":"422","severity":1,"message":"559","line":552,"column":10,"nodeType":"424","messageId":"425","endLine":552,"endColumn":26},{"ruleId":"422","severity":1,"message":"560","line":552,"column":28,"nodeType":"424","messageId":"425","endLine":552,"endColumn":47},{"ruleId":"422","severity":1,"message":"561","line":553,"column":44,"nodeType":"424","messageId":"425","endLine":553,"endColumn":79},{"ruleId":"422","severity":1,"message":"562","line":554,"column":10,"nodeType":"424","messageId":"425","endLine":554,"endColumn":34},{"ruleId":"422","severity":1,"message":"563","line":554,"column":36,"nodeType":"424","messageId":"425","endLine":554,"endColumn":63},{"ruleId":"422","severity":1,"message":"564","line":555,"column":45,"nodeType":"424","messageId":"425","endLine":555,"endColumn":81},{"ruleId":"422","severity":1,"message":"565","line":556,"column":10,"nodeType":"424","messageId":"425","endLine":556,"endColumn":35},{"ruleId":"422","severity":1,"message":"566","line":556,"column":37,"nodeType":"424","messageId":"425","endLine":556,"endColumn":65},{"ruleId":"422","severity":1,"message":"567","line":558,"column":36,"nodeType":"424","messageId":"425","endLine":558,"endColumn":63},{"ruleId":"422","severity":1,"message":"568","line":559,"column":10,"nodeType":"424","messageId":"425","endLine":559,"endColumn":26},{"ruleId":"422","severity":1,"message":"569","line":559,"column":28,"nodeType":"424","messageId":"425","endLine":559,"endColumn":47},{"ruleId":"422","severity":1,"message":"570","line":560,"column":44,"nodeType":"424","messageId":"425","endLine":560,"endColumn":79},{"ruleId":"422","severity":1,"message":"571","line":561,"column":10,"nodeType":"424","messageId":"425","endLine":561,"endColumn":34},{"ruleId":"422","severity":1,"message":"572","line":561,"column":36,"nodeType":"424","messageId":"425","endLine":561,"endColumn":63},{"ruleId":"422","severity":1,"message":"573","line":562,"column":45,"nodeType":"424","messageId":"425","endLine":562,"endColumn":81},{"ruleId":"422","severity":1,"message":"574","line":563,"column":10,"nodeType":"424","messageId":"425","endLine":563,"endColumn":35},{"ruleId":"422","severity":1,"message":"575","line":563,"column":37,"nodeType":"424","messageId":"425","endLine":563,"endColumn":65},{"ruleId":"422","severity":1,"message":"576","line":565,"column":39,"nodeType":"424","messageId":"425","endLine":565,"endColumn":69},{"ruleId":"422","severity":1,"message":"577","line":566,"column":10,"nodeType":"424","messageId":"425","endLine":566,"endColumn":29},{"ruleId":"422","severity":1,"message":"578","line":566,"column":31,"nodeType":"424","messageId":"425","endLine":566,"endColumn":53},{"ruleId":"422","severity":1,"message":"579","line":567,"column":47,"nodeType":"424","messageId":"425","endLine":567,"endColumn":85},{"ruleId":"422","severity":1,"message":"580","line":568,"column":10,"nodeType":"424","messageId":"425","endLine":568,"endColumn":37},{"ruleId":"422","severity":1,"message":"581","line":568,"column":39,"nodeType":"424","messageId":"425","endLine":568,"endColumn":69},{"ruleId":"422","severity":1,"message":"582","line":569,"column":48,"nodeType":"424","messageId":"425","endLine":569,"endColumn":87},{"ruleId":"422","severity":1,"message":"583","line":570,"column":10,"nodeType":"424","messageId":"425","endLine":570,"endColumn":38},{"ruleId":"422","severity":1,"message":"584","line":570,"column":40,"nodeType":"424","messageId":"425","endLine":570,"endColumn":71},{"ruleId":"422","severity":1,"message":"585","line":572,"column":36,"nodeType":"424","messageId":"425","endLine":572,"endColumn":63},{"ruleId":"422","severity":1,"message":"586","line":573,"column":10,"nodeType":"424","messageId":"425","endLine":573,"endColumn":26},{"ruleId":"422","severity":1,"message":"587","line":573,"column":28,"nodeType":"424","messageId":"425","endLine":573,"endColumn":47},{"ruleId":"422","severity":1,"message":"588","line":574,"column":44,"nodeType":"424","messageId":"425","endLine":574,"endColumn":79},{"ruleId":"422","severity":1,"message":"589","line":575,"column":10,"nodeType":"424","messageId":"425","endLine":575,"endColumn":34},{"ruleId":"422","severity":1,"message":"590","line":575,"column":36,"nodeType":"424","messageId":"425","endLine":575,"endColumn":63},{"ruleId":"422","severity":1,"message":"591","line":576,"column":45,"nodeType":"424","messageId":"425","endLine":576,"endColumn":81},{"ruleId":"422","severity":1,"message":"592","line":577,"column":10,"nodeType":"424","messageId":"425","endLine":577,"endColumn":35},{"ruleId":"422","severity":1,"message":"593","line":577,"column":37,"nodeType":"424","messageId":"425","endLine":577,"endColumn":65},{"ruleId":"422","severity":1,"message":"594","line":579,"column":40,"nodeType":"424","messageId":"425","endLine":579,"endColumn":71},{"ruleId":"422","severity":1,"message":"595","line":580,"column":10,"nodeType":"424","messageId":"425","endLine":580,"endColumn":30},{"ruleId":"422","severity":1,"message":"596","line":580,"column":32,"nodeType":"424","messageId":"425","endLine":580,"endColumn":55},{"ruleId":"422","severity":1,"message":"597","line":581,"column":48,"nodeType":"424","messageId":"425","endLine":581,"endColumn":87},{"ruleId":"422","severity":1,"message":"598","line":582,"column":10,"nodeType":"424","messageId":"425","endLine":582,"endColumn":38},{"ruleId":"422","severity":1,"message":"599","line":582,"column":40,"nodeType":"424","messageId":"425","endLine":582,"endColumn":71},{"ruleId":"422","severity":1,"message":"600","line":583,"column":49,"nodeType":"424","messageId":"425","endLine":583,"endColumn":89},{"ruleId":"422","severity":1,"message":"601","line":584,"column":10,"nodeType":"424","messageId":"425","endLine":584,"endColumn":39},{"ruleId":"422","severity":1,"message":"602","line":584,"column":41,"nodeType":"424","messageId":"425","endLine":584,"endColumn":73},{"ruleId":"422","severity":1,"message":"603","line":587,"column":37,"nodeType":"424","messageId":"425","endLine":587,"endColumn":65},{"ruleId":"422","severity":1,"message":"604","line":588,"column":10,"nodeType":"424","messageId":"425","endLine":588,"endColumn":27},{"ruleId":"422","severity":1,"message":"605","line":588,"column":29,"nodeType":"424","messageId":"425","endLine":588,"endColumn":49},{"ruleId":"422","severity":1,"message":"606","line":590,"column":40,"nodeType":"424","messageId":"425","endLine":590,"endColumn":71},{"ruleId":"422","severity":1,"message":"607","line":591,"column":10,"nodeType":"424","messageId":"425","endLine":591,"endColumn":30},{"ruleId":"422","severity":1,"message":"608","line":591,"column":32,"nodeType":"424","messageId":"425","endLine":591,"endColumn":55},{"ruleId":"422","severity":1,"message":"609","line":593,"column":43,"nodeType":"424","messageId":"425","endLine":593,"endColumn":77},{"ruleId":"422","severity":1,"message":"610","line":594,"column":10,"nodeType":"424","messageId":"425","endLine":594,"endColumn":33},{"ruleId":"422","severity":1,"message":"611","line":594,"column":35,"nodeType":"424","messageId":"425","endLine":594,"endColumn":61},{"ruleId":"422","severity":1,"message":"612","line":596,"column":37,"nodeType":"424","messageId":"425","endLine":596,"endColumn":65},{"ruleId":"422","severity":1,"message":"613","line":597,"column":10,"nodeType":"424","messageId":"425","endLine":597,"endColumn":27},{"ruleId":"422","severity":1,"message":"614","line":597,"column":29,"nodeType":"424","messageId":"425","endLine":597,"endColumn":49},{"ruleId":"422","severity":1,"message":"615","line":599,"column":40,"nodeType":"424","messageId":"425","endLine":599,"endColumn":71},{"ruleId":"422","severity":1,"message":"616","line":600,"column":10,"nodeType":"424","messageId":"425","endLine":600,"endColumn":30},{"ruleId":"422","severity":1,"message":"617","line":600,"column":32,"nodeType":"424","messageId":"425","endLine":600,"endColumn":55},{"ruleId":"422","severity":1,"message":"618","line":602,"column":37,"nodeType":"424","messageId":"425","endLine":602,"endColumn":65},{"ruleId":"422","severity":1,"message":"619","line":603,"column":10,"nodeType":"424","messageId":"425","endLine":603,"endColumn":27},{"ruleId":"422","severity":1,"message":"620","line":603,"column":29,"nodeType":"424","messageId":"425","endLine":603,"endColumn":49},{"ruleId":"621","severity":1,"message":"622","line":663,"column":14,"nodeType":"424","messageId":"623","endLine":663,"endColumn":26},{"ruleId":"462","severity":1,"message":"463","line":682,"column":109,"nodeType":"464","messageId":"465","endLine":682,"endColumn":111},{"ruleId":"422","severity":1,"message":"624","line":689,"column":14,"nodeType":"424","messageId":"425","endLine":689,"endColumn":17},{"ruleId":"462","severity":1,"message":"463","line":701,"column":109,"nodeType":"464","messageId":"465","endLine":701,"endColumn":111},{"ruleId":"422","severity":1,"message":"625","line":707,"column":14,"nodeType":"424","messageId":"425","endLine":707,"endColumn":32},{"ruleId":"422","severity":1,"message":"626","line":709,"column":13,"nodeType":"424","messageId":"425","endLine":709,"endColumn":23},{"ruleId":"627","severity":1,"message":"628","line":752,"column":223,"nodeType":"629","messageId":"630","endLine":752,"endColumn":224,"suggestions":"631"},{"ruleId":"627","severity":1,"message":"628","line":752,"column":245,"nodeType":"629","messageId":"630","endLine":752,"endColumn":246,"suggestions":"632"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":320,"nodeType":"629","messageId":"630","endLine":791,"endColumn":321,"suggestions":"633"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":342,"nodeType":"629","messageId":"630","endLine":791,"endColumn":343,"suggestions":"634"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":346,"nodeType":"629","messageId":"630","endLine":791,"endColumn":347,"suggestions":"635"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":365,"nodeType":"629","messageId":"630","endLine":791,"endColumn":366,"suggestions":"636"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":369,"nodeType":"629","messageId":"630","endLine":791,"endColumn":370,"suggestions":"637"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":387,"nodeType":"629","messageId":"630","endLine":791,"endColumn":388,"suggestions":"638"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":391,"nodeType":"629","messageId":"630","endLine":791,"endColumn":392,"suggestions":"639"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":413,"nodeType":"629","messageId":"630","endLine":791,"endColumn":414,"suggestions":"640"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":417,"nodeType":"629","messageId":"630","endLine":791,"endColumn":418,"suggestions":"641"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":437,"nodeType":"629","messageId":"630","endLine":791,"endColumn":438,"suggestions":"642"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":441,"nodeType":"629","messageId":"630","endLine":791,"endColumn":442,"suggestions":"643"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":463,"nodeType":"629","messageId":"630","endLine":791,"endColumn":464,"suggestions":"644"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":467,"nodeType":"629","messageId":"630","endLine":791,"endColumn":468,"suggestions":"645"},{"ruleId":"627","severity":1,"message":"628","line":791,"column":490,"nodeType":"629","messageId":"630","endLine":791,"endColumn":491,"suggestions":"646"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":125,"nodeType":"629","messageId":"630","endLine":795,"endColumn":126,"suggestions":"647"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":131,"nodeType":"629","messageId":"630","endLine":795,"endColumn":132,"suggestions":"648"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":413,"nodeType":"629","messageId":"630","endLine":795,"endColumn":414,"suggestions":"649"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":435,"nodeType":"629","messageId":"630","endLine":795,"endColumn":436,"suggestions":"650"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":439,"nodeType":"629","messageId":"630","endLine":795,"endColumn":440,"suggestions":"651"},{"ruleId":"627","severity":1,"message":"628","line":795,"column":462,"nodeType":"629","messageId":"630","endLine":795,"endColumn":463,"suggestions":"652"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":125,"nodeType":"629","messageId":"630","endLine":798,"endColumn":126,"suggestions":"653"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":131,"nodeType":"629","messageId":"630","endLine":798,"endColumn":132,"suggestions":"654"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":420,"nodeType":"629","messageId":"630","endLine":798,"endColumn":421,"suggestions":"655"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":442,"nodeType":"629","messageId":"630","endLine":798,"endColumn":443,"suggestions":"656"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":446,"nodeType":"629","messageId":"630","endLine":798,"endColumn":447,"suggestions":"657"},{"ruleId":"627","severity":1,"message":"628","line":798,"column":469,"nodeType":"629","messageId":"630","endLine":798,"endColumn":470,"suggestions":"658"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":125,"nodeType":"629","messageId":"630","endLine":801,"endColumn":126,"suggestions":"659"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":131,"nodeType":"629","messageId":"630","endLine":801,"endColumn":132,"suggestions":"660"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":420,"nodeType":"629","messageId":"630","endLine":801,"endColumn":421,"suggestions":"661"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":442,"nodeType":"629","messageId":"630","endLine":801,"endColumn":443,"suggestions":"662"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":446,"nodeType":"629","messageId":"630","endLine":801,"endColumn":447,"suggestions":"663"},{"ruleId":"627","severity":1,"message":"628","line":801,"column":469,"nodeType":"629","messageId":"630","endLine":801,"endColumn":470,"suggestions":"664"},{"ruleId":"458","severity":1,"message":"665","line":945,"column":8,"nodeType":"460","endLine":945,"endColumn":10,"suggestions":"666"},{"ruleId":"462","severity":1,"message":"463","line":1092,"column":32,"nodeType":"464","messageId":"465","endLine":1092,"endColumn":34},{"ruleId":"462","severity":1,"message":"463","line":1312,"column":24,"nodeType":"464","messageId":"465","endLine":1312,"endColumn":26},{"ruleId":"462","severity":1,"message":"463","line":1313,"column":71,"nodeType":"464","messageId":"465","endLine":1313,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1314,"column":31,"nodeType":"464","messageId":"465","endLine":1314,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1315,"column":71,"nodeType":"464","messageId":"465","endLine":1315,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1316,"column":31,"nodeType":"464","messageId":"465","endLine":1316,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1317,"column":71,"nodeType":"464","messageId":"465","endLine":1317,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1318,"column":31,"nodeType":"464","messageId":"465","endLine":1318,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1319,"column":71,"nodeType":"464","messageId":"465","endLine":1319,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1421,"column":32,"nodeType":"464","messageId":"465","endLine":1421,"endColumn":34},{"ruleId":"462","severity":1,"message":"463","line":1422,"column":69,"nodeType":"464","messageId":"465","endLine":1422,"endColumn":71},{"ruleId":"462","severity":1,"message":"463","line":1423,"column":69,"nodeType":"464","messageId":"465","endLine":1423,"endColumn":71},{"ruleId":"462","severity":1,"message":"463","line":1556,"column":24,"nodeType":"464","messageId":"465","endLine":1556,"endColumn":26},{"ruleId":"462","severity":1,"message":"463","line":1557,"column":71,"nodeType":"464","messageId":"465","endLine":1557,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1558,"column":31,"nodeType":"464","messageId":"465","endLine":1558,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1559,"column":71,"nodeType":"464","messageId":"465","endLine":1559,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1560,"column":31,"nodeType":"464","messageId":"465","endLine":1560,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1561,"column":71,"nodeType":"464","messageId":"465","endLine":1561,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1562,"column":31,"nodeType":"464","messageId":"465","endLine":1562,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":1563,"column":71,"nodeType":"464","messageId":"465","endLine":1563,"endColumn":73},{"ruleId":"462","severity":1,"message":"463","line":1661,"column":32,"nodeType":"464","messageId":"465","endLine":1661,"endColumn":34},{"ruleId":"462","severity":1,"message":"463","line":1662,"column":69,"nodeType":"464","messageId":"465","endLine":1662,"endColumn":71},{"ruleId":"462","severity":1,"message":"463","line":1663,"column":69,"nodeType":"464","messageId":"465","endLine":1663,"endColumn":71},{"ruleId":"462","severity":1,"message":"463","line":1696,"column":24,"nodeType":"464","messageId":"465","endLine":1696,"endColumn":26},{"ruleId":"462","severity":1,"message":"463","line":1696,"column":44,"nodeType":"464","messageId":"465","endLine":1696,"endColumn":46},{"ruleId":"422","severity":1,"message":"667","line":1779,"column":13,"nodeType":"424","messageId":"425","endLine":1779,"endColumn":20},{"ruleId":"668","severity":1,"message":"669","line":1803,"column":55,"nodeType":"464","messageId":"670","endLine":1803,"endColumn":62},{"ruleId":"422","severity":1,"message":"671","line":1869,"column":11,"nodeType":"424","messageId":"425","endLine":1869,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":2302,"column":23,"nodeType":"464","messageId":"465","endLine":2302,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":2316,"column":27,"nodeType":"464","messageId":"465","endLine":2316,"endColumn":29},{"ruleId":"422","severity":1,"message":"672","line":2560,"column":11,"nodeType":"424","messageId":"425","endLine":2560,"endColumn":39},{"ruleId":"422","severity":1,"message":"673","line":4288,"column":13,"nodeType":"424","messageId":"425","endLine":4288,"endColumn":17},{"ruleId":"462","severity":1,"message":"463","line":4292,"column":25,"nodeType":"464","messageId":"465","endLine":4292,"endColumn":27},{"ruleId":"422","severity":1,"message":"674","line":4294,"column":13,"nodeType":"424","messageId":"425","endLine":4294,"endColumn":21},{"ruleId":"422","severity":1,"message":"675","line":4295,"column":13,"nodeType":"424","messageId":"425","endLine":4295,"endColumn":23},{"ruleId":"422","severity":1,"message":"467","line":4305,"column":11,"nodeType":"424","messageId":"425","endLine":4305,"endColumn":22},{"ruleId":"422","severity":1,"message":"428","line":4309,"column":11,"nodeType":"424","messageId":"425","endLine":4309,"endColumn":20},{"ruleId":"437","severity":1,"message":"438","line":13,"column":1,"nodeType":"439","endLine":25,"endColumn":2},{"ruleId":"676","severity":1,"message":"677","line":18,"column":5,"nodeType":"678","messageId":"465","endLine":18,"endColumn":15},{"ruleId":"422","severity":1,"message":"679","line":53,"column":15,"nodeType":"424","messageId":"425","endLine":53,"endColumn":19},{"ruleId":"422","severity":1,"message":"680","line":99,"column":23,"nodeType":"424","messageId":"425","endLine":99,"endColumn":31},{"ruleId":"440","severity":1,"message":"441","line":216,"column":78,"nodeType":"442","endLine":216,"endColumn":89},{"ruleId":"437","severity":1,"message":"438","line":13,"column":1,"nodeType":"439","endLine":59,"endColumn":2},{"ruleId":"422","severity":1,"message":"681","line":1,"column":7,"nodeType":"424","messageId":"425","endLine":1,"endColumn":26},"no-native-reassign",["682"],"no-negated-in-lhs",["683"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'userKpiDigitalTemp' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'showError' is assigned a value but never used.","'loginfooter' is assigned a value but never used.","'SetDateInJsonArrayToQueryOverObjects' is defined but never used.","'SetParamsToQuery' is defined but never used.","'AddLineMockData' is defined but never used.","'AddDataByFilters' is defined but never used.","'GetIndicators' is defined but never used.","'AddItensToJsonArray' is defined but never used.","'months' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ChartDataLabels' is defined but never used.","'Button' is defined but never used.","'InputText' is defined but never used.","'Password' is defined but never used.","'axios' is defined but never used.","'ColumnGroup' is defined but never used.","'Ripple' is defined but never used.","'Dropdown' is defined but never used.","'classNames' is defined but never used.","'colorsBars' is defined but never used.","'LoadingSkeletonSquare' is defined but never used.","'cors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'GraficoCE_Total', 'GraficoNNCLog_Total', 'GraficoNNCMP_Total', 'GraficoRAC_Aves', 'GraficoRAC_Outros', 'GraficoRAC_Preparados', 'GraficoRAC_Suinos', and 'GraficoRAC_Total'. Either include them or remove the dependency array.","ArrayExpression",["684"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DataTableColGroupDemo' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'ReactDOM' is defined but never used.","'testeSQLPivotRollup' is defined but never used.","'LineWeight' is defined but never used.","'Funcao' is defined but never used.","'responseTable' is assigned a value but never used.","'setresponseTable' is assigned a value but never used.","'TableRacRACDetalhesMetaRealAves' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealAves' is assigned a value but never used.","'TableRacRACDetalhesMetaRealPreparados' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealPreparados' is assigned a value but never used.","'TableRacRACDetalhesMetaRealSuinos' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealSuinos' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'TableRacRACDetalhesInseto' is assigned a value but never used.","'setTableRacRACDetalhesInseto' is assigned a value but never used.","'TableRacRACDetalhesCabelo' is assigned a value but never used.","'setTableRacRACDetalhesCabelo' is assigned a value but never used.","'TableRacRACDetalhesPlastico' is assigned a value but never used.","'setTableRacRACDetalhesPlastico' is assigned a value but never used.","'TableRacRACDetalhesMetal' is assigned a value but never used.","'setTableRacRACDetalhesMetal' is assigned a value but never used.","'TableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'setTableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'TableRacRACDetalhesLarva' is assigned a value but never used.","'setTableRacRACDetalhesLarva' is assigned a value but never used.","'TableRacRACDetalhesCE' is assigned a value but never used.","'setTableRacRACDetalhesCE' is assigned a value but never used.","'TableRacRACDetalhesCEInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerente' is assigned a value but never used.","'TableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'TableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'TableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'TableRacRACD3InNatura' is assigned a value but never used.","'setTableRacRACD3InNatura' is assigned a value but never used.","'TableRacRACD3Preparados' is assigned a value but never used.","'setTableRacRACD3Preparados' is assigned a value but never used.","'TableRacRACD0InNatura' is assigned a value but never used.","'setTableRacRACD0InNatura' is assigned a value but never used.","'TableRacRACD0Preparados' is assigned a value but never used.","'setTableRacRACD0Preparados' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesTotal' is assigned a value but never used.","'GraficoNNCLogDetalhesTotal' is assigned a value but never used.","'setGraficoNNCLogDetalhesTotal' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesAves' is assigned a value but never used.","'GraficoNNCLogDetalhesAves' is assigned a value but never used.","'setGraficoNNCLogDetalhesAves' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'GraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'setGraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'GraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'setGraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'TableNNCLogEvolucao' is assigned a value but never used.","'setTableNNCLogEvolucao' is assigned a value but never used.","'TableNNCD3' is assigned a value but never used.","'setTableNNCD3' is assigned a value but never used.","'TableNNCD0' is assigned a value but never used.","'setTableNNCD0' is assigned a value but never used.","'TableNNCTotais' is assigned a value but never used.","'setTableNNCTotais' is assigned a value but never used.","'TableNNCEvolucaoDia' is assigned a value but never used.","'setTableNNCEvolucaoDia' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadas' is assigned a value but never used.","'GraficoNNCAvesPesadas' is assigned a value but never used.","'setGraficoNNCAvesPesadas' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'GraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'setGraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'GraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'setGraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesRS' is assigned a value but never used.","'GraficoNNCAvesRS' is assigned a value but never used.","'setGraficoNNCAvesRS' is assigned a value but never used.","'setresponseGraficoNNCAvesRSUnidades' is assigned a value but never used.","'GraficoNNCAvesRSUnidades' is assigned a value but never used.","'setGraficoNNCAvesRSUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesRSProblemas' is assigned a value but never used.","'GraficoNNCAvesRSProblemas' is assigned a value but never used.","'setGraficoNNCAvesRSProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesSP' is assigned a value but never used.","'GraficoNNCAvesSP' is assigned a value but never used.","'setGraficoNNCAvesSP' is assigned a value but never used.","'setresponseGraficoNNCAvesSPUnidades' is assigned a value but never used.","'GraficoNNCAvesSPUnidades' is assigned a value but never used.","'setGraficoNNCAvesSPUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesSPProblemas' is assigned a value but never used.","'GraficoNNCAvesSPProblemas' is assigned a value but never used.","'setGraficoNNCAvesSPProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesPR' is assigned a value but never used.","'GraficoNNCAvesPR' is assigned a value but never used.","'setGraficoNNCAvesPR' is assigned a value but never used.","'setresponseGraficoNNCAvesPRUnidades' is assigned a value but never used.","'GraficoNNCAvesPRUnidades' is assigned a value but never used.","'setGraficoNNCAvesPRUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesPRProblemas' is assigned a value but never used.","'GraficoNNCAvesPRProblemas' is assigned a value but never used.","'setGraficoNNCAvesPRProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesLeves' is assigned a value but never used.","'GraficoNNCAvesLeves' is assigned a value but never used.","'setGraficoNNCAvesLeves' is assigned a value but never used.","'setresponseGraficoNNCAvesLevesUnidades' is assigned a value but never used.","'GraficoNNCAvesLevesUnidades' is assigned a value but never used.","'setGraficoNNCAvesLevesUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesLevesProblemas' is assigned a value but never used.","'GraficoNNCAvesLevesProblemas' is assigned a value but never used.","'setGraficoNNCAvesLevesProblemas' is assigned a value but never used.","'setresponseGraficoNNCSuinos' is assigned a value but never used.","'GraficoNNCSuinos' is assigned a value but never used.","'setGraficoNNCSuinos' is assigned a value but never used.","'setresponseGraficoNNCSuinosUnidades' is assigned a value but never used.","'GraficoNNCSuinosUnidades' is assigned a value but never used.","'setGraficoNNCSuinosUnidades' is assigned a value but never used.","'setresponseGraficoNNCSuinosProblemas' is assigned a value but never used.","'GraficoNNCSuinosProblemas' is assigned a value but never used.","'setGraficoNNCSuinosProblemas' is assigned a value but never used.","'setresponseGraficoNNCPreparados' is assigned a value but never used.","'GraficoNNCPreparados' is assigned a value but never used.","'setGraficoNNCPreparados' is assigned a value but never used.","'setresponseGraficoNNCPreparadosUnidades' is assigned a value but never used.","'GraficoNNCPreparadosUnidades' is assigned a value but never used.","'setGraficoNNCPreparadosUnidades' is assigned a value but never used.","'setresponseGraficoNNCPreparadosProblemas' is assigned a value but never used.","'GraficoNNCPreparadosProblemas' is assigned a value but never used.","'setGraficoNNCPreparadosProblemas' is assigned a value but never used.","'setresponseGraficoNNCCETotal' is assigned a value but never used.","'GraficoNNCCETotal' is assigned a value but never used.","'setGraficoNNCCETotal' is assigned a value but never used.","'setresponseGraficoNNCCEInerente' is assigned a value but never used.","'GraficoNNCCEInerente' is assigned a value but never used.","'setGraficoNNCCEInerente' is assigned a value but never used.","'setresponseGraficoNNCCENaoInerente' is assigned a value but never used.","'GraficoNNCCENaoInerente' is assigned a value but never used.","'setGraficoNNCCENaoInerente' is assigned a value but never used.","'setresponseGraficoNNCCEOssos' is assigned a value but never used.","'GraficoNNCCEOssos' is assigned a value but never used.","'setGraficoNNCCEOssos' is assigned a value but never used.","'setresponseGraficoNNCCEPlastico' is assigned a value but never used.","'GraficoNNCCEPlastico' is assigned a value but never used.","'setGraficoNNCCEPlastico' is assigned a value but never used.","'setresponseGraficoNNCCEMetal' is assigned a value but never used.","'GraficoNNCCEMetal' is assigned a value but never used.","'setGraficoNNCCEMetal' is assigned a value but never used.","no-redeclare","'arrumaTabela' is already defined.","redeclared","'ttt' is defined but never used.","'chamararrumaTabela' is defined but never used.","'funcaoNova' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["685","686"],["687","688"],["689","690"],["691","692"],["693","694"],["695","696"],["697","698"],["699","700"],["701","702"],["703","704"],["705","706"],["707","708"],["709","710"],["711","712"],["713","714"],["715","716"],["717","718"],["719","720"],["721","722"],["723","724"],["725","726"],["727","728"],["729","730"],["731","732"],["733","734"],["735","736"],["737","738"],["739","740"],["741","742"],["743","744"],["745","746"],["747","748"],["749","750"],["751","752"],"React Hook React.useEffect has missing dependencies: 'GraficoCETotal', 'GraficoCETotalAvesLeves', 'GraficoCETotalAvesPesadas', 'GraficoCETotalAvesPesadasPR', 'GraficoCETotalAvesPesadasRS', 'GraficoCETotalAvesPesadasSP', 'GraficoCETotalPreparados', 'GraficoCETotalSuinos', 'GraficoNCCMP', 'GraficoNCCMPAvesLeves', 'GraficoNCCMPAvesPesadas', 'GraficoNCCMPAvesPesadasPR', 'GraficoNCCMPAvesPesadasRS', 'GraficoNCCMPAvesPesadasSP', 'GraficoNCCMPPreparados', 'GraficoNCCMPSuinos', 'GraficoNNCMPTotalCE', 'GraficoNNCMPTotalCEAvesLeves', 'GraficoNNCMPTotalCEAvesPesadas', 'GraficoNNCMPTotalCEAvesPesadasPR', 'GraficoNNCMPTotalCEAvesPesadasRS', 'GraficoNNCMPTotalCEAvesPesadasSP', 'GraficoNNCMPTotalCEPreparados', 'GraficoNNCMPTotalCESuinos', 'GraficoRAC', 'GraficoRACAvesLeves', 'GraficoRACAvesPesadas', 'GraficoRACAvesPesadasPR', 'GraficoRACAvesPesadasRS', 'GraficoRACAvesPesadasSP', 'GraficoRACDetalhesAC', 'GraficoRACDetalhesAberturaPDV', 'GraficoRACDetalhesCE', 'GraficoRACDetalhesCEInerente', 'GraficoRACDetalhesCENaoInerente', 'GraficoRACDetalhesCEPlastico', 'GraficoRACDetalhesCabelo', 'GraficoRACDetalhesCritica', 'GraficoRACDetalhesDoc', 'GraficoRACDetalhesEspeciais', 'GraficoRACDetalhesFFO', 'GraficoRACDetalhesInseto', 'GraficoRACDetalhesIntoxicacao', 'GraficoRACDetalhesLarva', 'GraficoRACDetalhesLogME', 'GraficoRACDetalhesLogMI', 'GraficoRACDetalhesMassatake', 'GraficoRACDetalhesMetal', 'GraficoRACDetalhesPDV', 'GraficoRACDetalhesPlastico', 'GraficoRACDetalhesTT', 'GraficoRACDetalhesTerceiro', 'GraficoRACME', 'GraficoRACMI', 'GraficoRACPreparados', 'GraficoRACProblemasAvesLeves', 'GraficoRACProblemasAvesPesadas', 'GraficoRACProblemasAvesPesadasPR', 'GraficoRACProblemasAvesPesadasRS', 'GraficoRACProblemasAvesPesadasSP', 'GraficoRACProblemasPreparados', 'GraficoRACProblemasSuinos', 'GraficoRACSuinos', 'GraficoRACTotalCE', 'GraficoRACTotalCEAvesLeves', 'GraficoRACTotalCEAvesPesadas', 'GraficoRACTotalCEAvesPesadasPR', 'GraficoRACTotalCEAvesPesadasRS', 'GraficoRACTotalCEAvesPesadasSP', 'GraficoRACTotalCEPreparados', 'GraficoRACTotalCESuinos', 'GraficoRACUnidadesAvesLeves', 'GraficoRACUnidadesAvesPesadas', 'GraficoRACUnidadesAvesPesadasPR', 'GraficoRACUnidadesAvesPesadasRS', 'GraficoRACUnidadesAvesPesadasSP', 'GraficoRACUnidadesPreparados', 'GraficoRACUnidadesSuinos', 'buscarDadosTable', 'chamarAPI', 'whereNNCMP', 'whereRACCE', and 'whereRACPreparados'. Either include them or remove the dependency array.",["753"],"'groupBy' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'DataTableRACME' is assigned a value but never used.","'buscarTabelaRACUnicoProblema' is assigned a value but never used.","'parm' is assigned a value but never used.","'datasets' is assigned a value but never used.","'indicators' is assigned a value but never used.","no-dupe-keys","Duplicate key 'SelectRole'.","ObjectExpression","'user' is assigned a value but never used.","'response' is assigned a value but never used.","'testeSQLPivotRollup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"754","fix":"755"},{"messageId":"756","fix":"757","desc":"758"},{"messageId":"759","fix":"760","desc":"761"},{"messageId":"756","fix":"762","desc":"758"},{"messageId":"759","fix":"763","desc":"761"},{"messageId":"756","fix":"764","desc":"758"},{"messageId":"759","fix":"765","desc":"761"},{"messageId":"756","fix":"766","desc":"758"},{"messageId":"759","fix":"767","desc":"761"},{"messageId":"756","fix":"768","desc":"758"},{"messageId":"759","fix":"769","desc":"761"},{"messageId":"756","fix":"770","desc":"758"},{"messageId":"759","fix":"771","desc":"761"},{"messageId":"756","fix":"772","desc":"758"},{"messageId":"759","fix":"773","desc":"761"},{"messageId":"756","fix":"774","desc":"758"},{"messageId":"759","fix":"775","desc":"761"},{"messageId":"756","fix":"776","desc":"758"},{"messageId":"759","fix":"777","desc":"761"},{"messageId":"756","fix":"778","desc":"758"},{"messageId":"759","fix":"779","desc":"761"},{"messageId":"756","fix":"780","desc":"758"},{"messageId":"759","fix":"781","desc":"761"},{"messageId":"756","fix":"782","desc":"758"},{"messageId":"759","fix":"783","desc":"761"},{"messageId":"756","fix":"784","desc":"758"},{"messageId":"759","fix":"785","desc":"761"},{"messageId":"756","fix":"786","desc":"758"},{"messageId":"759","fix":"787","desc":"761"},{"messageId":"756","fix":"788","desc":"758"},{"messageId":"759","fix":"789","desc":"761"},{"messageId":"756","fix":"790","desc":"758"},{"messageId":"759","fix":"791","desc":"761"},{"messageId":"756","fix":"792","desc":"758"},{"messageId":"759","fix":"793","desc":"761"},{"messageId":"756","fix":"794","desc":"758"},{"messageId":"759","fix":"795","desc":"761"},{"messageId":"756","fix":"796","desc":"758"},{"messageId":"759","fix":"797","desc":"761"},{"messageId":"756","fix":"798","desc":"758"},{"messageId":"759","fix":"799","desc":"761"},{"messageId":"756","fix":"800","desc":"758"},{"messageId":"759","fix":"801","desc":"761"},{"messageId":"756","fix":"802","desc":"758"},{"messageId":"759","fix":"803","desc":"761"},{"messageId":"756","fix":"804","desc":"758"},{"messageId":"759","fix":"805","desc":"761"},{"messageId":"756","fix":"806","desc":"758"},{"messageId":"759","fix":"807","desc":"761"},{"messageId":"756","fix":"808","desc":"758"},{"messageId":"759","fix":"809","desc":"761"},{"messageId":"756","fix":"810","desc":"758"},{"messageId":"759","fix":"811","desc":"761"},{"messageId":"756","fix":"812","desc":"758"},{"messageId":"759","fix":"813","desc":"761"},{"messageId":"756","fix":"814","desc":"758"},{"messageId":"759","fix":"815","desc":"761"},{"messageId":"756","fix":"816","desc":"758"},{"messageId":"759","fix":"817","desc":"761"},{"messageId":"756","fix":"818","desc":"758"},{"messageId":"759","fix":"819","desc":"761"},{"messageId":"756","fix":"820","desc":"758"},{"messageId":"759","fix":"821","desc":"761"},{"messageId":"756","fix":"822","desc":"758"},{"messageId":"759","fix":"823","desc":"761"},{"messageId":"756","fix":"824","desc":"758"},{"messageId":"759","fix":"825","desc":"761"},{"messageId":"756","fix":"826","desc":"758"},{"messageId":"759","fix":"827","desc":"761"},{"desc":"828","fix":"829"},"Update the dependencies array to be: [GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",{"range":"830","text":"831"},"removeEscape",{"range":"832","text":"833"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"834","text":"835"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"836","text":"833"},{"range":"837","text":"835"},{"range":"838","text":"833"},{"range":"839","text":"835"},{"range":"840","text":"833"},{"range":"841","text":"835"},{"range":"842","text":"833"},{"range":"843","text":"835"},{"range":"844","text":"833"},{"range":"845","text":"835"},{"range":"846","text":"833"},{"range":"847","text":"835"},{"range":"848","text":"833"},{"range":"849","text":"835"},{"range":"850","text":"833"},{"range":"851","text":"835"},{"range":"852","text":"833"},{"range":"853","text":"835"},{"range":"854","text":"833"},{"range":"855","text":"835"},{"range":"856","text":"833"},{"range":"857","text":"835"},{"range":"858","text":"833"},{"range":"859","text":"835"},{"range":"860","text":"833"},{"range":"861","text":"835"},{"range":"862","text":"833"},{"range":"863","text":"835"},{"range":"864","text":"833"},{"range":"865","text":"835"},{"range":"866","text":"833"},{"range":"867","text":"835"},{"range":"868","text":"833"},{"range":"869","text":"835"},{"range":"870","text":"833"},{"range":"871","text":"835"},{"range":"872","text":"833"},{"range":"873","text":"835"},{"range":"874","text":"833"},{"range":"875","text":"835"},{"range":"876","text":"833"},{"range":"877","text":"835"},{"range":"878","text":"833"},{"range":"879","text":"835"},{"range":"880","text":"833"},{"range":"881","text":"835"},{"range":"882","text":"833"},{"range":"883","text":"835"},{"range":"884","text":"833"},{"range":"885","text":"835"},{"range":"886","text":"833"},{"range":"887","text":"835"},{"range":"888","text":"833"},{"range":"889","text":"835"},{"range":"890","text":"833"},{"range":"891","text":"835"},{"range":"892","text":"833"},{"range":"893","text":"835"},{"range":"894","text":"833"},{"range":"895","text":"835"},{"range":"896","text":"833"},{"range":"897","text":"835"},{"range":"898","text":"833"},{"range":"899","text":"835"},{"range":"900","text":"833"},{"range":"901","text":"835"},"Update the dependencies array to be: [GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACCE, whereRACPreparados]",{"range":"902","text":"903"},[3850,3852],"[GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",[40992,40993],"",[40992,40992],"\\",[41014,41015],[41014,41014],[49115,49116],[49115,49115],[49137,49138],[49137,49137],[49141,49142],[49141,49141],[49160,49161],[49160,49160],[49164,49165],[49164,49164],[49182,49183],[49182,49182],[49186,49187],[49186,49186],[49208,49209],[49208,49208],[49212,49213],[49212,49212],[49232,49233],[49232,49232],[49236,49237],[49236,49236],[49258,49259],[49258,49258],[49262,49263],[49262,49262],[49285,49286],[49285,49285],[50787,50788],[50787,50787],[50793,50794],[50793,50793],[51075,51076],[51075,51075],[51097,51098],[51097,51097],[51101,51102],[51101,51101],[51124,51125],[51124,51124],[51986,51987],[51986,51986],[51992,51993],[51992,51992],[52281,52282],[52281,52281],[52303,52304],[52303,52303],[52307,52308],[52307,52307],[52330,52331],[52330,52330],[53192,53193],[53192,53192],[53198,53199],[53198,53198],[53487,53488],[53487,53487],[53509,53510],[53509,53509],[53513,53514],[53513,53513],[53536,53537],[53536,53536],[74707,74709],"[GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACCE, whereRACPreparados]"]