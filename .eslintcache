[{"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js":"1","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js":"2","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js":"3","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js":"4","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js":"5","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js":"6","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js":"7","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js":"8","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js":"9","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js":"10","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js":"11","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js":"12","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js":"13","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js":"14","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js":"15","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js":"16","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js":"17","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js":"18","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js":"19","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js":"20","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js":"21","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js":"22","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js":"23","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js":"24"},{"size":546,"mtime":1622572768672,"results":"25","hashOfConfig":"26"},{"size":8638,"mtime":1623173278819,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1615291765866,"results":"28","hashOfConfig":"26"},{"size":14319,"mtime":1626637015283,"results":"29","hashOfConfig":"26"},{"size":6422,"mtime":1626437577829,"results":"30","hashOfConfig":"26"},{"size":2288,"mtime":1615291765854,"results":"31","hashOfConfig":"26"},{"size":2638,"mtime":1617233353191,"results":"32","hashOfConfig":"26"},{"size":1824,"mtime":1615291765851,"results":"33","hashOfConfig":"26"},{"size":835,"mtime":1615291765852,"results":"34","hashOfConfig":"26"},{"size":1596,"mtime":1615395366826,"results":"35","hashOfConfig":"26"},{"size":580,"mtime":1615928953591,"results":"36","hashOfConfig":"26"},{"size":197,"mtime":1615928953593,"results":"37","hashOfConfig":"26"},{"size":376,"mtime":1615928953599,"results":"38","hashOfConfig":"26"},{"size":34970,"mtime":1618196804244,"results":"39","hashOfConfig":"26"},{"size":191,"mtime":1617233194718,"results":"40","hashOfConfig":"26"},{"size":188,"mtime":1617233204450,"results":"41","hashOfConfig":"26"},{"size":460778,"mtime":1627864542707,"results":"42","hashOfConfig":"26"},{"size":0,"mtime":1623103764544,"results":"43","hashOfConfig":"26"},{"size":770,"mtime":1625591780239,"results":"44","hashOfConfig":"26"},{"size":9914,"mtime":1623173278878,"results":"45","hashOfConfig":"26"},{"size":9658,"mtime":1623173278848,"results":"46","hashOfConfig":"26"},{"size":5521,"mtime":1623173278887,"results":"47","hashOfConfig":"26"},{"size":1567,"mtime":1625591810609,"results":"48","hashOfConfig":"26"},{"size":55056,"mtime":1623345057880,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18gn22y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":236,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js",[],["108","109"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js",["110","111","112","113","114"],"import React, { Suspense, lazy } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// Grab components out of the ReactRouterDOM that we will be using\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport UserApi from './api/loginApi'\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './index.css';\r\nimport './css/sidebar-desktop.css';\r\nimport './css/login.css';\r\nimport './css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport NavbarMobile from './components/navbarMobile';\r\nimport NavbarDesktop from './components/navbarDesktop';\r\nimport SidebarDesktop from './components/sidebarDesktop';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ContactUs = lazy(() => import(\"./views/contactUs\"));\r\nconst NotFoundPage = lazy(() => import(\"./views/notFoundPage\"));\r\nconst DashViewAbsorcao = lazy(() => import(\"./views/dashViewAbsorcao\"));\r\nconst DashViewNNCLog = lazy(() => import(\"./views/dashViewNNCLog\"));\r\nconst DashViewNNCMP = lazy(() => import(\"./views/dashViewNNCMP\"));\r\nconst DashViewRac = lazy(() => import(\"./views/rac\"));\r\nconst Home = lazy(() => import(\"./views/home\"));\r\nconst CreateUser = lazy(() => import(\"./views/createUser\"));\r\nconst ListUsers = lazy(() => import(\"./views/listUsers\"));\r\nconst EditUser = lazy(() => import(\"./views/editUser\"));\r\n\r\nfunction App() {\r\n    const userKpiDigitalTemp = { name: 'admin', pass: 'admin' }\r\n    const [state, setState] = React.useState({ username: \"\", password: \"\" });\r\n    // const [password, setPassword] = React.useState(\"\");\r\n    const [user, setUser] = React.useState();\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n    const toast = React.useRef(null);\r\n\r\n    const handleLogin = (e) => {\r\n       \r\n        const user = state;\r\n        \r\n        if(user.username.length < 1 || user.password.length < 1)\r\n        {\r\n            showInfo(\"Dados inválidos\", \"Os campos Usuário e Senha são obrigatórios\",  6000)\r\n            return;   \r\n        }\r\n\r\n        UserApi.post(user)\r\n            .then(r => {\r\n                if (r.status === 200) {\r\n                    localStorage.setItem('user', JSON.stringify({ name: user.username, token: r.data }));\r\n                    setIsAuthenticated(true);\r\n                    window.location.reload(false);\r\n                }\r\n            }).catch((e,ex) => {\r\n                if (e.response &&  e.response.status === 404) {\r\n                    showInfo(\"Usuário não encontrado\", \"Por favor verifique usuário e senha e tente novamente.\", 6000)\r\n                }else {\r\n                    showInfo(\"Nao foi possivel compeltar esta ação\", \"No momento não é possível completar esta ação.\", 6000)\r\n                }\r\n                setIsAuthenticated(false);\r\n            }).finally(() => {\r\n            })\r\n    }\r\n\r\n    const showInfo = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'info', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n    \r\n    const showError = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'error', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n        setUser({});\r\n        setState({ username: \"\", password: \"\" })\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n        if (loggedInUser) {\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            setUser(foundUser);\r\n        }\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault()\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let statetemp = { ...state };\r\n        statetemp[name] = value\r\n        setState({ ...statetemp });\r\n    }\r\n\r\n    /* Local Componentes */\r\n\r\n    const Layout = ({ children }) => {\r\n        return (\r\n            <div className=\"pdfsize\">\r\n                <NavbarMobile username={user.name} handleLogout={handleLogout} />\r\n                <NavbarDesktop username={user.name} handleLogout={handleLogout} />\r\n                <SidebarDesktop />\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"main-content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const ChangePageLoader = () => {\r\n        return (\r\n            <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\r\n        )\r\n    }\r\n\r\n    const loginfooter = <span>\r\n        <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n    </span>;\r\n\r\n    /* Se nao esta logado exibe tela de login: */\r\n    if (!user) {\r\n        return (\r\n            <div className=\"global-container\" >\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"card login-form\">\r\n                    <Card\r\n                        title=\"Bem vindo\"\r\n                        subTitle=\"faça o login para acessar o sistema\"\r\n                        className=\"card-body\"\r\n                        footer={<span>\r\n                            <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n                        </span>} >\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"name1\"\r\n                                    name=\"username\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.username}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                />\r\n                                <label htmlFor=\"name1\">Usuário</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <Password\r\n                                    id=\"pass\"\r\n                                    name=\"password\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.password}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                    feedback={false}\r\n                                    toggleMask />\r\n                                <label htmlFor=\"pass\">Senha</label>\r\n                            </span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    /*Exibe paginas no Router*/\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<ChangePageLoader />}>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route path='/contact' component={ContactUs} />\r\n                        <Route path='/absorcao' component={DashViewAbsorcao} />\r\n                        <Route path='/cadastro' component={CreateUser} />\r\n                        <Route path='/usuarios' component={ListUsers} />\r\n                        <Route exact path='/usuario/:id' component={EditUser} />\r\n                        <Route path='/nnclog' component={DashViewNNCLog} />\r\n                        <Route path='/nncmp' component={DashViewNNCMP} />\r\n                        <Route path='/rac' component={DashViewRac} />\r\n                        <Route path='404' component={NotFoundPage} />\r\n                        <Route path='*' component={NotFoundPage} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Suspense>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js",["115","116","117","118","119","120","121","122"],"import axios from 'axios'\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators,\r\n    AddItensToJsonArray,\r\n} from '../domain/kpiservice'\r\nimport { months } from '../domain/constants'\r\n\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n   //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\n\r\n\r\nexport default {\r\n\r\n    getSearaBaseRac: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseSQLNINJA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/SQLNINJA`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n        getSearaBaseRacIndicadoresSemFiltro2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACTotalIndicadoresSemFiltro2`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacIndicadores: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadores`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRacIndicadores_: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadoresSemFiltro`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseNNCMPTotalCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRACTotalCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RACTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n    getSearaBaseRacCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n    getSearaBaseRacME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacFinal: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacFinal`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n            \r\n        }),\r\n\r\n    getSearaBaseNCCMP: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n        getSearaBaseNCCMPUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNCCMPProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCMPCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCLOG: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLogTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/CETotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacAberturaME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRacAberturaME2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME2`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC1niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC1niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        getSearaBaseNNCLog1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLOG1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC2niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC2niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseCE2niveisPIVOTmesDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/CE2niveisPIVOTmesDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        \r\n\r\n        \r\n  \r\n}\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js",["123","124"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst NavbarDesktop = (props) => {\r\n\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"navbar-desk\" >\r\n            <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"https://logodownload.org/wp-content/uploads/2014/12/seara-logo-1-1.png\"\r\n                    //width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                Painel de KPIs\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Bem-vindo: <a href=\"#\" style={{ textDecoration: 'none' }}>{capitalize(props.username)}</a>\r\n                </Navbar.Text>\r\n                &nbsp;\r\n                &nbsp;\r\n                <Navbar.Text>\r\n                    <a href=\"#\" style={{ textDecoration: 'none' }} onClick={(e) => props.handleLogout(e)}>\r\n                        <span style={{ cursor: 'pointer', color: 'rgb(255 255 255 / 50%)' }}>\r\n                            Sair &nbsp;\r\n                            <i style={{ cursor: 'pointer', color: '#fff' }} className=\"pi pi-sign-out\"></i>\r\n                        </span>\r\n                    </a>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarDesktop;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions } from '../domain/constants';\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [970,4000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done “npm i cors --save-dev”\r\n\r\nfunction Home() {\r\n\r\n    \r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n\r\n    //chamadas\r\n    const [TableRacME, setTableRacME] = React.useState()  \r\n\r\n    const [GraficoRAC_Total, setGraficoRAC_Total] = React.useState()   \r\n    const [GraficoRAC_Aves, setGraficoRAC_Aves] = React.useState() \r\n    const [GraficoRAC_Suinos, setGraficoRAC_Suinos] = React.useState() \r\n    const [GraficoRAC_Preparados, setGraficoRAC_Preparados] = React.useState() \r\n    const [GraficoRAC_Outros, setGraficoRAC_Outros] = React.useState() \r\n    const [GraficoNNCMP_Total, setGraficoNNCMP_Total] = React.useState() \r\n    const [GraficoNNCLog_Total, setGraficoNNCLog_Total] = React.useState() \r\n    const [GraficoCE_Total, setGraficoCE_Total] = React.useState() \r\n    \r\n    let [responseGraficoRAC_Total, setresponseGraficoRAC_Total] = React.useState({})\r\n    let [responseGraficoRAC_Aves, setresponseGraficoRAC_Aves] = React.useState({})\r\n    let [responseGraficoRAC_Suinos, setresponseGraficoRAC_Suinos] = React.useState({})\r\n    let [responseGraficoRAC_Preparados, setresponseGraficoRAC_Preparados] = React.useState({})\r\n    let [responseGraficoRAC_Outros, setresponseGraficoRAC_Outros] = React.useState({})\r\n    let [responseGraficoNNCMP_Total, setresponseGraficoNNCMP_Total] = React.useState({})\r\n    let [responseGraficoNNCLog_Total, setresponseGraficoNNCLog_Total] = React.useState({})\r\n    let [responseGraficoCE_Total, setresponseGraficoCE_Total] = React.useState({})\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        //debugger\r\n        fetchData(GraficoRAC_Total, \"GraficoRAC_Total\");\r\n        fetchData(GraficoRAC_Aves, \"GraficoRAC_Aves\");\r\n        fetchData(GraficoRAC_Suinos, \"GraficoRAC_Suinos\");\r\n        fetchData(GraficoRAC_Preparados, \"GraficoRAC_Preparados\");\r\n        fetchData(GraficoRAC_Outros, \"GraficoRAC_Outros\");\r\n        fetchData(GraficoNNCMP_Total, \"GraficoNNCMP_Total\");\r\n        fetchData(GraficoNNCLog_Total, \"GraficoNNCLog_Total\");\r\n        fetchData(GraficoCE_Total, \"GraficoCE_Total\");\r\n    }, []);\r\n\r\n    const GerarGrafico = (objeto, numGrafico) => {\r\n        ////debugger\r\n        //if (selectedIndicator1 !== \"\" && selectedIndicator2 !== \"\" && selectedIndicator3 !== \"\") {\r\n            ////debugger\r\n            setIsUpdatingData(true)\r\n            let json = objeto; //GraficoRAC_Total , 2, 3.....\r\n            let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n            let groupBy = function groupBy(list, keyGetter) {\r\n                const map = new Map();\r\n                list.forEach((item) => {\r\n                    const key = keyGetter(item);\r\n                    const collection = map.get(key);\r\n                    if (!collection) {\r\n                        map.set(key, [item]);\r\n                    } else {\r\n                        collection.push(item);\r\n                    }\r\n                });\r\n                return map;\r\n            }\r\n\r\n            // let xaxis = Array.from(groupBy(json, x => x[selectedIndicator1]), ([name, value]) => ({ name, value }));\r\n            // let yaxis = Array.from(groupBy(json, x => x[selectedIndicator2]), ([name, value]) => ({ name }));\r\n\r\n            let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n            let yaxis = [{name:'Evolutivo 2020'},{name:'Evolutivo 2021'},{name:'Evolutivo Meta'},{name:'Meta'},{name:'2019'},{name:'2020'},{name: '2021'}];\r\n\r\n            // xaxis.sort(function (a, b) {\r\n            //     return parseFloat(a.name) - parseFloat(b.name);\r\n            // });\r\n\r\n            xaxis.forEach(x => {\r\n                // x['yaxis'] = Array.from(groupBy(x.value, x => x[selectedIndicator2]), ([name, value]) => ({ name, quantidade: somaX(x, name, selectedIndicator2, \"Quant\") }));\r\n                if (x.name == \"2019\"){\r\n                    x['yaxis'] = [{name: \"2019\", value: x.value[0].Valor}]\r\n                }else if (x.name == \"2020\"){\r\n                    x['yaxis'] = [{name: \"2020\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"Meta\"){\r\n                    x['yaxis'] = [{name: \"Meta\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"2021\"){\r\n                    x['yaxis'] = [{name: \"2021\", value: x.value[0].Valor}]\r\n                }else{\r\n                    x['yaxis'] = [\r\n                                    {name: \"Evolutivo 2020\", value: x.value[0].a2020},\r\n                                    {name: \"Evolutivo Meta\", value: x.value[0].aMeta},\r\n                                    {name: \"Evolutivo 2021\", value: x.value[0].a2021}\r\n                                ]\r\n                }\r\n            })\r\n\r\n            let series = []\r\n            yaxis.forEach((y, index) => {\r\n                let dataset = xaxis.map(xx => {\r\n                    let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                    if (yaxysvalue.length)\r\n                        return yaxysvalue[0].value\r\n\r\n                    return null\r\n                })\r\n\r\n                //let cor = colorsBars[Math.floor(Math.random() * colorsBars.length)]\r\n\r\n                let tipo = 'line'\r\n                let cor = '#bfbfbf'\r\n                let corLabel = '#bfbfbf'\r\n                let yAx = \"B\"\r\n                let varborderDash = [0,0]\r\n\r\n                switch (y.name){\r\n\r\n                    case \"2019\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2020\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Meta\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2021\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#cccccc\"\r\n                                    corLabel = \"#cccccc\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Evolutivo 2020\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(166, 166, 166)\"\r\n                                    corLabel = \"rgb(166, 166, 166)\"\r\n                                    varborderDash = [10,5]\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo Meta\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo 2021\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(89,89,89)\"\r\n                                    corLabel = \"rgb(89,89,89)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                                 \r\n                    default:\r\n                                    break\r\n\r\n\r\n                }\r\n\r\n                let serie = {\r\n                    type: tipo,\r\n                    yAxisID: yAx,\r\n                    label: y.name,\r\n                    backgroundColor: cor,\r\n                    fill: false,\r\n                    borderColor: cor,\r\n                    borderWidth: 2,\r\n                    pointRadius: 5,\r\n                    pointBackgroundColor: \"transparent\",\r\n                    pointBorderColor: \"transparent\",\r\n                    borderDash: varborderDash, \r\n                    data: dataset,\r\n                    datalabels: {\r\n                    \r\n                        align: \"top\",\r\n                        anchor: \"end\",\r\n                        offset: 10,\r\n                        padding: -2,\r\n                        color: corLabel,\r\n                        //clip: true,\r\n                        font: {\r\n                            size: \"10\",\r\n                        },\r\n                        \r\n                    }\r\n                     \r\n                }\r\n                series.push(serie)\r\n            })\r\n\r\n            let seriesAdd = []\r\n            \r\n                series.filter(s => s.label != null).forEach(element => {\r\n                    seriesAdd.push(element)\r\n                });\r\n           \r\n\r\n            const dashboardData = {\r\n                labels: xaxis.map(r => r.name),\r\n                datasets: seriesAdd,\r\n                indicators\r\n                \r\n            };\r\n            //debugger\r\n            switch (numGrafico){\r\n                case \"GraficoRAC_Total\":\r\n                    setresponseGraficoRAC_Total(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Aves\":\r\n                    setresponseGraficoRAC_Aves(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Suinos\":\r\n                    setresponseGraficoRAC_Suinos(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Preparados\":\r\n                    setresponseGraficoRAC_Preparados(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Outros\":\r\n                    setresponseGraficoRAC_Outros(dashboardData)\r\n                    break\r\n                case \"GraficoNNCMP_Total\":\r\n                    setresponseGraficoNNCMP_Total(dashboardData)\r\n                    break\r\n                case \"GraficoNNCLog_Total\":\r\n                    setresponseGraficoNNCLog_Total(dashboardData)\r\n                    break\r\n                case \"GraficoCE_Total\":\r\n                    setresponseGraficoCE_Total(dashboardData)\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n\r\n            setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableColGroupDemo = () => {\r\n\r\n        if (!GraficoRAC_Total) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < GraficoRAC_Total.length; i++) {\r\n            json.push(GraficoRAC_Total[i])\r\n        }\r\n\r\n        const sales = json\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={sales} sortMode=\"multiple\">\r\n                        <Column field=\"Periodo\" header=\"Período\" sortable></Column>\r\n                        <Column field=\"Valor\" header=\"Nº RAC Histórico\" sortable ></Column>\r\n                        <Column field=\"a2020\" header=\"Nº RAC 2020 Mensal\" sortable></Column>\r\n                        <Column field=\"aMeta\" header=\"Nº RAC Meta Mensal\" sortable></Column>\r\n                        <Column field=\"a2021\" header=\"Nº RAC 2021 Mensal\" sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    function aplicar() {\r\n        //debugger\r\n        GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n        GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n        GerarGrafico(GraficoRAC_Suinos, \"GraficoRAC_Suinos\")\r\n        GerarGrafico(GraficoRAC_Preparados, \"GraficoRAC_Preparados\")\r\n        GerarGrafico(GraficoRAC_Outros, \"GraficoRAC_Outros\")\r\n        GerarGrafico(GraficoNNCMP_Total, \"GraficoNNCMP_Total\")\r\n        GerarGrafico(GraficoNNCLog_Total, \"GraficoNNCLog_Total\")\r\n        GerarGrafico(GraficoCE_Total, \"GraficoCE_Total\")\r\n    }\r\n\r\n    const fetchData = (objeto, numGrafico) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n            let json = JSON.parse(response.data)\r\n            setTableRacME(json)\r\n        })\r\n\r\n        if(numGrafico == \"GraficoRAC_Total\"){\r\n            //debugger\r\n            let parametros = ['where 1=1']\r\n            api.getSearaBaseRacCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Total(json)\r\n\r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n        }else if (numGrafico == \"GraficoRAC_Aves\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'AVES\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Aves(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Aves(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Suinos\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'SUÍ\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Suinos(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Suinos(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Preparados\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'Preparados\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Preparados(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Preparados(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Outros\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'OUTROS\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Outros(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Outros(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCMP_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCMP_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCMP_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCLog_Total\"){\r\n            \r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCLog_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCLog_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoCE_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE    Negócio =\\'AVES LEVELS\\' ']\r\n            api.getSearaBaseCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoCE_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoCE_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Puxando dados da RAC</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div> \r\n            <Row>\r\n                <Col lg={12}>\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                KPI - RCA\r\n                                    <br />\r\n                                <small>Descrição do KPI</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={fetchData}>Atualizar</button>\r\n                                </div>  \r\n\r\n                                <Pdf targetRef={ref} filename=\"rac.pdf\" options={options} x={1} scale={0.8}>\r\n                                    {({toPdf}) => (\r\n                                        <button onClick={toPdf}>Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* Botão aplicar */}\r\n            {isUpdatingData ? (<div> </div>) : (\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px' }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar}>Aplicar</button>\r\n                </Row>\r\n            )}\r\n\r\n            \r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-5 col-12 \">\r\n                        <h1>Relatório de Atendimento ao Consumidor (RAC)</h1>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total Habilitador\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total RAC\" subTitle=\"RA\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Total} options={lightOptions}/>\r\n                            </Card>\r\n                        )}\r\n  \r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                                \r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total NNC Matéria-Prima\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Aves\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Aves} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Suínos\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Suinos} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Preparados\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Preparados} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Outros\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Outros} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {/* mercado externo */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Corpos estranhos\" subTitle=\"Corpo Estranho\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            \r\n                                DataTableRACME()\r\n                            \r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                {/* mercado interno */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Matérial Prima\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                    </Col>\r\n\r\n                </Row>   \r\n\r\n                {/* atendimento comercial */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Log\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCLog_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        \r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                        \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js",["393"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   //baseURL: \"http://localhost/SearaDashboard\"\r\n   baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n   //    baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/login`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js",["394","395","396"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    SelectRole: \"Select a role\",\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    EditPassword: \"Edit password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    EditAccount: \"Edit Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Edit Account\"\r\n}\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass EditUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: false,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        const user = this.fetchData(id);\r\n    }\r\n\r\n    fetchData = id => {\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        Api.getOne(id).then(r => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n\r\n            if (r.data === \"null\")\r\n                window.location.href = `${window.location.origin}/404`;\r\n\r\n            return JSON.parse(r.data);\r\n        }).then(user => {\r\n            this.setState({\r\n                id: user.Id,\r\n                username: user.Username,\r\n                email: user.Email,\r\n                arr: [ //claims\r\n                    { id: 1, value: \"Read\", isChecked: true },\r\n                    { id: 2, value: \"Write\", isChecked: false },\r\n                ],\r\n                enableSubmit: true,\r\n                showProgressbar: false\r\n            })\r\n\r\n            const userRoles = JSON.parse(user.Roles)\r\n\r\n            if (userRoles.length)\r\n                this.setState({ Role: userRoles[0].Role })\r\n\r\n            userRoles.forEach(role => {\r\n                role.Claims.forEach(claim => {\r\n\r\n                    let arrCopy = this.state.arr\r\n                    arrCopy.forEach(item => {\r\n                        if (item.value.toLowerCase() === claim.toLowerCase())\r\n                            item.isChecked = true\r\n                    })\r\n                    this.setState({ arr: arrCopy })\r\n\r\n                });\r\n            });\r\n\r\n        }).catch(e => {\r\n            if (e?.response?.status === 401 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, e.response.Message)\r\n\r\n            } if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message, \"\")\r\n            } else {\r\n\r\n            }\r\n        }).finally(() => {\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"Id\"] = this.state.id\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.put(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.EditAccount}\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(EditUserJxs);\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js",["397"],"import React from 'react';\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Password } from 'primereact/password';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    CreatePassword: \"Create password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    CreateAccount: \"Create Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Create Account\"\r\n}\r\n\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass CreateUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: true,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"password\"] = this.state.password\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.post(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const passwordOk = this.state.password.length > 0;\r\n        const passwordConfirmOk = this.state.passwordConfirm.length > 0 && (this.state.password === this.state.passwordConfirm);\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && passwordOk\r\n            && passwordConfirmOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {/* SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"password\"\r\n                            placeholder={registerTexts.CreatePassword}\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    {/* CONFIRMAR SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordConfirmOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"passwordConfirm\"\r\n                            placeholder={registerTexts.RepeatPassword}\r\n                            value={this.state.passwordConfirm}\r\n                            onChange={this.handleInputChange}\r\n                            feedback={false}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.CreateAccount}\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center\">{registerTexts.HaveAnAccount} <a href=\"\">{registerTexts.LogIn}</a> </p>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst CreateUser = () => {\r\n    return <CreateUserJxs />\r\n};\r\n\r\nexport default CreateUser;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js",["398"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n    //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n    //baseURL: \"http://localhost/SearaDashboard\"\r\n    baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n    //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    getOne: (id) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users?userId=${id}`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    get: () =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/create-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    put: (user) =>\r\n        instance({\r\n            method: \"PUT\",\r\n            url: `/edit-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js",["399"],"const testeSQLPivotRollup = [\"\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"[Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", count(Rac_rac) as [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #RESULTADO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUPING(B.Mercado) U\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Tipo do Problema]) T\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Manifestante]) M\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.Mercado as Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WITH ROLLUP\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT DISTINCT B.U, B.T, B.M, ISNULL(B.Mercado1,'Total') as Mercado1, ISNULL(B.[Tipo do Problema],'Total') as [Tipo do Problema], ISNULL(B.Manifestante,'Total') as Manifestante,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"b.[Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", U.[Nº RAC] Mercado_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", T.[Nº RAC] TipoProblema_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", M.[Nº RAC] Manifestante_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'<b>Total</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE '<b>'+B.Mercado1+'</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE '@@.....'+B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE '..........'+B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'Total'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE B.Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tINTO #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #BASE B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #Mercado U ON B.Mercado1 = U.Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #TIPOPROBLEMA T ON B.Mercado1 = T.Mercado AND B.[Tipo do Problema] = T.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #MANIFESTANTE M ON B.Mercado1 = M.Mercado AND B.[Tipo do Problema] = M.[Tipo do Problema] AND B.[Manifestante] = M.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             'Total' as [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr1 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1 ='select * into #gabriel1 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], Nm_Manifestante_rac as [Manifestante], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [Nm_Manifestante_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] AND T.[Manifestante] = PT.[Manifestante] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema], ''Total''as [Manifestante],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr2 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2 ='select * into #gabriel2 from ( SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado,  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr3 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3 ='select * into #gabriel3 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t SET @SQLStr = @SQLStr1 + ' ' + @SQLStr2 + ' ' + @SQLStr3 + ' ' + \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT * INTO #TTTT FROM  ((select * from #gabriel1) union all (select * from #gabriel2) union all (select * from #gabriel3)) FF  '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT distinct * FROM #NIVEIS N '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' LEFT JOIN #TTTT T1 ON T1.Mercado = N.Mercado1 AND T1.[Tipo do Problema] = N.[Tipo do Problema] AND T1.Manifestante = N.Manifestante ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6 '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DROP TABLE #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tDROP TABLE #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n];",{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":6,"column":8,"nodeType":"406","messageId":"407","endLine":6,"endColumn":17},{"ruleId":"404","severity":1,"message":"408","line":40,"column":11,"nodeType":"406","messageId":"407","endLine":40,"endColumn":29},{"ruleId":"404","severity":1,"message":"409","line":44,"column":12,"nodeType":"406","messageId":"407","endLine":44,"endColumn":27},{"ruleId":"404","severity":1,"message":"410","line":80,"column":11,"nodeType":"406","messageId":"407","endLine":80,"endColumn":20},{"ruleId":"404","severity":1,"message":"411","line":134,"column":11,"nodeType":"406","messageId":"407","endLine":134,"endColumn":22},{"ruleId":"404","severity":1,"message":"412","line":3,"column":5,"nodeType":"406","messageId":"407","endLine":3,"endColumn":41},{"ruleId":"404","severity":1,"message":"413","line":4,"column":5,"nodeType":"406","messageId":"407","endLine":4,"endColumn":21},{"ruleId":"404","severity":1,"message":"414","line":5,"column":5,"nodeType":"406","messageId":"407","endLine":5,"endColumn":20},{"ruleId":"404","severity":1,"message":"415","line":6,"column":5,"nodeType":"406","messageId":"407","endLine":6,"endColumn":21},{"ruleId":"404","severity":1,"message":"416","line":7,"column":5,"nodeType":"406","messageId":"407","endLine":7,"endColumn":18},{"ruleId":"404","severity":1,"message":"417","line":8,"column":5,"nodeType":"406","messageId":"407","endLine":8,"endColumn":24},{"ruleId":"404","severity":1,"message":"418","line":10,"column":10,"nodeType":"406","messageId":"407","endLine":10,"endColumn":16},{"ruleId":"419","severity":1,"message":"420","line":21,"column":1,"nodeType":"421","endLine":527,"endColumn":2},{"ruleId":"422","severity":1,"message":"423","line":25,"column":32,"nodeType":"424","endLine":25,"endColumn":79},{"ruleId":"422","severity":1,"message":"423","line":30,"column":21,"nodeType":"424","endLine":30,"endColumn":107},{"ruleId":"404","severity":1,"message":"425","line":1,"column":17,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"426","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":36},{"ruleId":"404","severity":1,"message":"427","line":1,"column":38,"nodeType":"406","messageId":"407","endLine":1,"endColumn":44},{"ruleId":"404","severity":1,"message":"428","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":23},{"ruleId":"404","severity":1,"message":"429","line":5,"column":10,"nodeType":"406","messageId":"407","endLine":5,"endColumn":16},{"ruleId":"404","severity":1,"message":"430","line":7,"column":10,"nodeType":"406","messageId":"407","endLine":7,"endColumn":19},{"ruleId":"404","severity":1,"message":"431","line":8,"column":10,"nodeType":"406","messageId":"407","endLine":8,"endColumn":18},{"ruleId":"404","severity":1,"message":"432","line":10,"column":8,"nodeType":"406","messageId":"407","endLine":10,"endColumn":13},{"ruleId":"404","severity":1,"message":"405","line":11,"column":8,"nodeType":"406","messageId":"407","endLine":11,"endColumn":17},{"ruleId":"404","severity":1,"message":"433","line":17,"column":10,"nodeType":"406","messageId":"407","endLine":17,"endColumn":21},{"ruleId":"404","severity":1,"message":"434","line":19,"column":10,"nodeType":"406","messageId":"407","endLine":19,"endColumn":16},{"ruleId":"404","severity":1,"message":"435","line":20,"column":10,"nodeType":"406","messageId":"407","endLine":20,"endColumn":18},{"ruleId":"404","severity":1,"message":"436","line":22,"column":8,"nodeType":"406","messageId":"407","endLine":22,"endColumn":18},{"ruleId":"404","severity":1,"message":"437","line":35,"column":18,"nodeType":"406","messageId":"407","endLine":35,"endColumn":28},{"ruleId":"404","severity":1,"message":"438","line":45,"column":10,"nodeType":"406","messageId":"407","endLine":45,"endColumn":31},{"ruleId":"404","severity":1,"message":"439","line":55,"column":5,"nodeType":"406","messageId":"407","endLine":55,"endColumn":9},{"ruleId":"440","severity":1,"message":"441","line":95,"column":8,"nodeType":"442","endLine":95,"endColumn":10,"suggestions":"443"},{"ruleId":"444","severity":1,"message":"445","line":131,"column":28,"nodeType":"446","messageId":"447","endLine":131,"endColumn":30},{"ruleId":"444","severity":1,"message":"445","line":133,"column":34,"nodeType":"446","messageId":"447","endLine":133,"endColumn":36},{"ruleId":"444","severity":1,"message":"445","line":135,"column":33,"nodeType":"446","messageId":"447","endLine":135,"endColumn":35},{"ruleId":"444","severity":1,"message":"445","line":137,"column":33,"nodeType":"446","messageId":"447","endLine":137,"endColumn":35},{"ruleId":"404","severity":1,"message":"448","line":296,"column":11,"nodeType":"406","messageId":"407","endLine":296,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":381,"column":23,"nodeType":"446","messageId":"447","endLine":381,"endColumn":25},{"ruleId":"444","severity":1,"message":"445","line":422,"column":30,"nodeType":"446","messageId":"447","endLine":422,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":464,"column":30,"nodeType":"446","messageId":"447","endLine":464,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":506,"column":30,"nodeType":"446","messageId":"447","endLine":506,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":548,"column":30,"nodeType":"446","messageId":"447","endLine":548,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":590,"column":30,"nodeType":"446","messageId":"447","endLine":590,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":632,"column":30,"nodeType":"446","messageId":"447","endLine":632,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":674,"column":30,"nodeType":"446","messageId":"447","endLine":674,"endColumn":32},{"ruleId":"404","severity":1,"message":"449","line":721,"column":11,"nodeType":"406","messageId":"407","endLine":721,"endColumn":22},{"ruleId":"404","severity":1,"message":"410","line":725,"column":11,"nodeType":"406","messageId":"407","endLine":725,"endColumn":20},{"ruleId":"404","severity":1,"message":"425","line":2,"column":17,"nodeType":"406","messageId":"407","endLine":2,"endColumn":25},{"ruleId":"404","severity":1,"message":"426","line":2,"column":27,"nodeType":"406","messageId":"407","endLine":2,"endColumn":36},{"ruleId":"404","severity":1,"message":"427","line":2,"column":38,"nodeType":"406","messageId":"407","endLine":2,"endColumn":44},{"ruleId":"404","severity":1,"message":"450","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":23},{"ruleId":"404","severity":1,"message":"451","line":3,"column":27,"nodeType":"406","messageId":"407","endLine":3,"endColumn":39},{"ruleId":"404","severity":1,"message":"452","line":3,"column":41,"nodeType":"406","messageId":"407","endLine":3,"endColumn":61},{"ruleId":"404","severity":1,"message":"453","line":3,"column":63,"nodeType":"406","messageId":"407","endLine":3,"endColumn":74},{"ruleId":"404","severity":1,"message":"454","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":16},{"ruleId":"404","severity":1,"message":"428","line":7,"column":8,"nodeType":"406","messageId":"407","endLine":7,"endColumn":23},{"ruleId":"404","severity":1,"message":"429","line":8,"column":10,"nodeType":"406","messageId":"407","endLine":8,"endColumn":16},{"ruleId":"404","severity":1,"message":"430","line":10,"column":10,"nodeType":"406","messageId":"407","endLine":10,"endColumn":19},{"ruleId":"404","severity":1,"message":"431","line":11,"column":10,"nodeType":"406","messageId":"407","endLine":11,"endColumn":18},{"ruleId":"404","severity":1,"message":"432","line":13,"column":8,"nodeType":"406","messageId":"407","endLine":13,"endColumn":13},{"ruleId":"404","severity":1,"message":"405","line":14,"column":8,"nodeType":"406","messageId":"407","endLine":14,"endColumn":17},{"ruleId":"404","severity":1,"message":"434","line":22,"column":10,"nodeType":"406","messageId":"407","endLine":22,"endColumn":16},{"ruleId":"404","severity":1,"message":"435","line":23,"column":10,"nodeType":"406","messageId":"407","endLine":23,"endColumn":18},{"ruleId":"404","severity":1,"message":"436","line":25,"column":8,"nodeType":"406","messageId":"407","endLine":25,"endColumn":18},{"ruleId":"404","severity":1,"message":"418","line":38,"column":10,"nodeType":"406","messageId":"407","endLine":38,"endColumn":16},{"ruleId":"404","severity":1,"message":"437","line":38,"column":18,"nodeType":"406","messageId":"407","endLine":38,"endColumn":28},{"ruleId":"404","severity":1,"message":"455","line":40,"column":9,"nodeType":"406","messageId":"407","endLine":40,"endColumn":28},{"ruleId":"404","severity":1,"message":"412","line":43,"column":5,"nodeType":"406","messageId":"407","endLine":43,"endColumn":41},{"ruleId":"404","severity":1,"message":"413","line":44,"column":5,"nodeType":"406","messageId":"407","endLine":44,"endColumn":21},{"ruleId":"404","severity":1,"message":"414","line":45,"column":5,"nodeType":"406","messageId":"407","endLine":45,"endColumn":20},{"ruleId":"404","severity":1,"message":"415","line":46,"column":5,"nodeType":"406","messageId":"407","endLine":46,"endColumn":21},{"ruleId":"404","severity":1,"message":"416","line":47,"column":5,"nodeType":"406","messageId":"407","endLine":47,"endColumn":18},{"ruleId":"404","severity":1,"message":"438","line":51,"column":10,"nodeType":"406","messageId":"407","endLine":51,"endColumn":31},{"ruleId":"404","severity":1,"message":"456","line":54,"column":10,"nodeType":"406","messageId":"407","endLine":54,"endColumn":20},{"ruleId":"404","severity":1,"message":"457","line":56,"column":8,"nodeType":"406","messageId":"407","endLine":56,"endColumn":14},{"ruleId":"404","severity":1,"message":"439","line":65,"column":5,"nodeType":"406","messageId":"407","endLine":65,"endColumn":9},{"ruleId":"444","severity":1,"message":"445","line":96,"column":35,"nodeType":"446","messageId":"447","endLine":96,"endColumn":37},{"ruleId":"404","severity":1,"message":"458","line":293,"column":10,"nodeType":"406","messageId":"407","endLine":293,"endColumn":23},{"ruleId":"404","severity":1,"message":"459","line":293,"column":25,"nodeType":"406","messageId":"407","endLine":293,"endColumn":41},{"ruleId":"404","severity":1,"message":"460","line":390,"column":10,"nodeType":"406","messageId":"407","endLine":390,"endColumn":45},{"ruleId":"404","severity":1,"message":"461","line":390,"column":47,"nodeType":"406","messageId":"407","endLine":390,"endColumn":85},{"ruleId":"404","severity":1,"message":"462","line":391,"column":10,"nodeType":"406","messageId":"407","endLine":391,"endColumn":47},{"ruleId":"404","severity":1,"message":"463","line":391,"column":49,"nodeType":"406","messageId":"407","endLine":391,"endColumn":89},{"ruleId":"404","severity":1,"message":"464","line":413,"column":10,"nodeType":"406","messageId":"407","endLine":413,"endColumn":35},{"ruleId":"404","severity":1,"message":"465","line":413,"column":37,"nodeType":"406","messageId":"407","endLine":413,"endColumn":65},{"ruleId":"404","severity":1,"message":"466","line":419,"column":10,"nodeType":"406","messageId":"407","endLine":419,"endColumn":35},{"ruleId":"404","severity":1,"message":"467","line":419,"column":37,"nodeType":"406","messageId":"407","endLine":419,"endColumn":65},{"ruleId":"404","severity":1,"message":"468","line":425,"column":10,"nodeType":"406","messageId":"407","endLine":425,"endColumn":37},{"ruleId":"404","severity":1,"message":"469","line":425,"column":39,"nodeType":"406","messageId":"407","endLine":425,"endColumn":69},{"ruleId":"404","severity":1,"message":"470","line":431,"column":10,"nodeType":"406","messageId":"407","endLine":431,"endColumn":34},{"ruleId":"404","severity":1,"message":"471","line":431,"column":36,"nodeType":"406","messageId":"407","endLine":431,"endColumn":63},{"ruleId":"404","severity":1,"message":"472","line":437,"column":10,"nodeType":"406","messageId":"407","endLine":437,"endColumn":40},{"ruleId":"404","severity":1,"message":"473","line":437,"column":42,"nodeType":"406","messageId":"407","endLine":437,"endColumn":75},{"ruleId":"404","severity":1,"message":"474","line":443,"column":10,"nodeType":"406","messageId":"407","endLine":443,"endColumn":34},{"ruleId":"404","severity":1,"message":"475","line":443,"column":36,"nodeType":"406","messageId":"407","endLine":443,"endColumn":63},{"ruleId":"404","severity":1,"message":"476","line":446,"column":10,"nodeType":"406","messageId":"407","endLine":446,"endColumn":31},{"ruleId":"404","severity":1,"message":"477","line":446,"column":33,"nodeType":"406","messageId":"407","endLine":446,"endColumn":57},{"ruleId":"404","severity":1,"message":"478","line":449,"column":10,"nodeType":"406","messageId":"407","endLine":449,"endColumn":39},{"ruleId":"404","severity":1,"message":"479","line":449,"column":41,"nodeType":"406","messageId":"407","endLine":449,"endColumn":73},{"ruleId":"404","severity":1,"message":"480","line":452,"column":10,"nodeType":"406","messageId":"407","endLine":452,"endColumn":42},{"ruleId":"404","severity":1,"message":"481","line":452,"column":44,"nodeType":"406","messageId":"407","endLine":452,"endColumn":79},{"ruleId":"404","severity":1,"message":"482","line":455,"column":10,"nodeType":"406","messageId":"407","endLine":455,"endColumn":50},{"ruleId":"404","severity":1,"message":"483","line":455,"column":52,"nodeType":"406","messageId":"407","endLine":455,"endColumn":95},{"ruleId":"404","severity":1,"message":"484","line":458,"column":10,"nodeType":"406","messageId":"407","endLine":458,"endColumn":44},{"ruleId":"404","severity":1,"message":"485","line":458,"column":46,"nodeType":"406","messageId":"407","endLine":458,"endColumn":83},{"ruleId":"404","severity":1,"message":"486","line":489,"column":10,"nodeType":"406","messageId":"407","endLine":489,"endColumn":29},{"ruleId":"404","severity":1,"message":"487","line":489,"column":31,"nodeType":"406","messageId":"407","endLine":489,"endColumn":53},{"ruleId":"404","severity":1,"message":"488","line":497,"column":10,"nodeType":"406","messageId":"407","endLine":497,"endColumn":24},{"ruleId":"404","severity":1,"message":"489","line":497,"column":26,"nodeType":"406","messageId":"407","endLine":497,"endColumn":43},{"ruleId":"404","severity":1,"message":"490","line":500,"column":10,"nodeType":"406","messageId":"407","endLine":500,"endColumn":29},{"ruleId":"404","severity":1,"message":"491","line":500,"column":31,"nodeType":"406","messageId":"407","endLine":500,"endColumn":53},{"ruleId":"404","severity":1,"message":"492","line":507,"column":10,"nodeType":"406","messageId":"407","endLine":507,"endColumn":39},{"ruleId":"404","severity":1,"message":"493","line":514,"column":10,"nodeType":"406","messageId":"407","endLine":514,"endColumn":34},{"ruleId":"404","severity":1,"message":"494","line":521,"column":10,"nodeType":"406","messageId":"407","endLine":521,"endColumn":34},{"ruleId":"404","severity":1,"message":"495","line":528,"column":10,"nodeType":"406","messageId":"407","endLine":528,"endColumn":34},{"ruleId":"404","severity":1,"message":"496","line":535,"column":10,"nodeType":"406","messageId":"407","endLine":535,"endColumn":37},{"ruleId":"404","severity":1,"message":"497","line":542,"column":10,"nodeType":"406","messageId":"407","endLine":542,"endColumn":34},{"ruleId":"404","severity":1,"message":"498","line":549,"column":10,"nodeType":"406","messageId":"407","endLine":549,"endColumn":38},{"ruleId":"404","severity":1,"message":"499","line":655,"column":5,"nodeType":"406","messageId":"407","endLine":655,"endColumn":15},{"ruleId":"444","severity":1,"message":"445","line":669,"column":53,"nodeType":"446","messageId":"447","endLine":669,"endColumn":55},{"ruleId":"444","severity":1,"message":"445","line":671,"column":59,"nodeType":"446","messageId":"447","endLine":671,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":673,"column":59,"nodeType":"446","messageId":"447","endLine":673,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":675,"column":59,"nodeType":"446","messageId":"447","endLine":675,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":677,"column":59,"nodeType":"446","messageId":"447","endLine":677,"endColumn":61},{"ruleId":"500","severity":1,"message":"501","line":691,"column":21,"nodeType":"406","messageId":"502","endLine":691,"endColumn":22},{"ruleId":"500","severity":1,"message":"503","line":692,"column":25,"nodeType":"406","messageId":"502","endLine":692,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":693,"column":57,"nodeType":"446","messageId":"447","endLine":693,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":695,"column":63,"nodeType":"446","messageId":"447","endLine":695,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":697,"column":63,"nodeType":"446","messageId":"447","endLine":697,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":703,"column":70,"nodeType":"446","messageId":"447","endLine":703,"endColumn":72},{"ruleId":"444","severity":1,"message":"445","line":703,"column":137,"nodeType":"446","messageId":"447","endLine":703,"endColumn":139},{"ruleId":"444","severity":1,"message":"445","line":726,"column":53,"nodeType":"446","messageId":"447","endLine":726,"endColumn":55},{"ruleId":"444","severity":1,"message":"445","line":728,"column":59,"nodeType":"446","messageId":"447","endLine":728,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":730,"column":59,"nodeType":"446","messageId":"447","endLine":730,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":732,"column":59,"nodeType":"446","messageId":"447","endLine":732,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":734,"column":59,"nodeType":"446","messageId":"447","endLine":734,"endColumn":61},{"ruleId":"500","severity":1,"message":"501","line":748,"column":21,"nodeType":"406","messageId":"502","endLine":748,"endColumn":22},{"ruleId":"500","severity":1,"message":"503","line":749,"column":25,"nodeType":"406","messageId":"502","endLine":749,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":750,"column":57,"nodeType":"446","messageId":"447","endLine":750,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":752,"column":63,"nodeType":"446","messageId":"447","endLine":752,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":754,"column":63,"nodeType":"446","messageId":"447","endLine":754,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":763,"column":70,"nodeType":"446","messageId":"447","endLine":763,"endColumn":72},{"ruleId":"444","severity":1,"message":"445","line":763,"column":137,"nodeType":"446","messageId":"447","endLine":763,"endColumn":139},{"ruleId":"444","severity":1,"message":"445","line":788,"column":53,"nodeType":"446","messageId":"447","endLine":788,"endColumn":55},{"ruleId":"444","severity":1,"message":"445","line":790,"column":59,"nodeType":"446","messageId":"447","endLine":790,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":792,"column":59,"nodeType":"446","messageId":"447","endLine":792,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":794,"column":59,"nodeType":"446","messageId":"447","endLine":794,"endColumn":61},{"ruleId":"444","severity":1,"message":"445","line":796,"column":59,"nodeType":"446","messageId":"447","endLine":796,"endColumn":61},{"ruleId":"500","severity":1,"message":"501","line":809,"column":21,"nodeType":"406","messageId":"502","endLine":809,"endColumn":22},{"ruleId":"500","severity":1,"message":"503","line":810,"column":25,"nodeType":"406","messageId":"502","endLine":810,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":811,"column":57,"nodeType":"446","messageId":"447","endLine":811,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":813,"column":63,"nodeType":"446","messageId":"447","endLine":813,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":815,"column":63,"nodeType":"446","messageId":"447","endLine":815,"endColumn":65},{"ruleId":"444","severity":1,"message":"445","line":821,"column":70,"nodeType":"446","messageId":"447","endLine":821,"endColumn":72},{"ruleId":"444","severity":1,"message":"445","line":821,"column":137,"nodeType":"446","messageId":"447","endLine":821,"endColumn":139},{"ruleId":"504","severity":1,"message":"505","line":876,"column":144,"nodeType":"506","messageId":"507","endLine":876,"endColumn":145,"suggestions":"508"},{"ruleId":"504","severity":1,"message":"505","line":876,"column":156,"nodeType":"506","messageId":"507","endLine":876,"endColumn":157,"suggestions":"509"},{"ruleId":"504","severity":1,"message":"505","line":877,"column":138,"nodeType":"506","messageId":"507","endLine":877,"endColumn":139,"suggestions":"510"},{"ruleId":"504","severity":1,"message":"505","line":877,"column":150,"nodeType":"506","messageId":"507","endLine":877,"endColumn":151,"suggestions":"511"},{"ruleId":"504","severity":1,"message":"505","line":882,"column":138,"nodeType":"506","messageId":"507","endLine":882,"endColumn":139,"suggestions":"512"},{"ruleId":"504","severity":1,"message":"505","line":882,"column":146,"nodeType":"506","messageId":"507","endLine":882,"endColumn":147,"suggestions":"513"},{"ruleId":"504","severity":1,"message":"505","line":883,"column":132,"nodeType":"506","messageId":"507","endLine":883,"endColumn":133,"suggestions":"514"},{"ruleId":"504","severity":1,"message":"505","line":883,"column":140,"nodeType":"506","messageId":"507","endLine":883,"endColumn":141,"suggestions":"515"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":149,"nodeType":"506","messageId":"507","endLine":890,"endColumn":150,"suggestions":"516"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":163,"nodeType":"506","messageId":"507","endLine":890,"endColumn":164,"suggestions":"517"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":166,"nodeType":"506","messageId":"507","endLine":890,"endColumn":167,"suggestions":"518"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":180,"nodeType":"506","messageId":"507","endLine":890,"endColumn":181,"suggestions":"519"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":183,"nodeType":"506","messageId":"507","endLine":890,"endColumn":184,"suggestions":"520"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":197,"nodeType":"506","messageId":"507","endLine":890,"endColumn":198,"suggestions":"521"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":201,"nodeType":"506","messageId":"507","endLine":890,"endColumn":202,"suggestions":"522"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":209,"nodeType":"506","messageId":"507","endLine":890,"endColumn":210,"suggestions":"523"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":212,"nodeType":"506","messageId":"507","endLine":890,"endColumn":213,"suggestions":"524"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":220,"nodeType":"506","messageId":"507","endLine":890,"endColumn":221,"suggestions":"525"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":240,"nodeType":"506","messageId":"507","endLine":890,"endColumn":241,"suggestions":"526"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":252,"nodeType":"506","messageId":"507","endLine":890,"endColumn":253,"suggestions":"527"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":255,"nodeType":"506","messageId":"507","endLine":890,"endColumn":256,"suggestions":"528"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":263,"nodeType":"506","messageId":"507","endLine":890,"endColumn":264,"suggestions":"529"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":267,"nodeType":"506","messageId":"507","endLine":890,"endColumn":268,"suggestions":"530"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":285,"nodeType":"506","messageId":"507","endLine":890,"endColumn":286,"suggestions":"531"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":289,"nodeType":"506","messageId":"507","endLine":890,"endColumn":290,"suggestions":"532"},{"ruleId":"504","severity":1,"message":"505","line":890,"column":299,"nodeType":"506","messageId":"507","endLine":890,"endColumn":300,"suggestions":"533"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":143,"nodeType":"506","messageId":"507","endLine":891,"endColumn":144,"suggestions":"534"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":157,"nodeType":"506","messageId":"507","endLine":891,"endColumn":158,"suggestions":"535"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":160,"nodeType":"506","messageId":"507","endLine":891,"endColumn":161,"suggestions":"536"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":174,"nodeType":"506","messageId":"507","endLine":891,"endColumn":175,"suggestions":"537"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":177,"nodeType":"506","messageId":"507","endLine":891,"endColumn":178,"suggestions":"538"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":191,"nodeType":"506","messageId":"507","endLine":891,"endColumn":192,"suggestions":"539"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":195,"nodeType":"506","messageId":"507","endLine":891,"endColumn":196,"suggestions":"540"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":203,"nodeType":"506","messageId":"507","endLine":891,"endColumn":204,"suggestions":"541"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":206,"nodeType":"506","messageId":"507","endLine":891,"endColumn":207,"suggestions":"542"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":214,"nodeType":"506","messageId":"507","endLine":891,"endColumn":215,"suggestions":"543"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":234,"nodeType":"506","messageId":"507","endLine":891,"endColumn":235,"suggestions":"544"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":246,"nodeType":"506","messageId":"507","endLine":891,"endColumn":247,"suggestions":"545"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":249,"nodeType":"506","messageId":"507","endLine":891,"endColumn":250,"suggestions":"546"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":257,"nodeType":"506","messageId":"507","endLine":891,"endColumn":258,"suggestions":"547"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":261,"nodeType":"506","messageId":"507","endLine":891,"endColumn":262,"suggestions":"548"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":279,"nodeType":"506","messageId":"507","endLine":891,"endColumn":280,"suggestions":"549"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":283,"nodeType":"506","messageId":"507","endLine":891,"endColumn":284,"suggestions":"550"},{"ruleId":"504","severity":1,"message":"505","line":891,"column":293,"nodeType":"506","messageId":"507","endLine":891,"endColumn":294,"suggestions":"551"},{"ruleId":"504","severity":1,"message":"505","line":913,"column":135,"nodeType":"506","messageId":"507","endLine":913,"endColumn":136,"suggestions":"552"},{"ruleId":"504","severity":1,"message":"505","line":913,"column":141,"nodeType":"506","messageId":"507","endLine":913,"endColumn":142,"suggestions":"553"},{"ruleId":"504","severity":1,"message":"505","line":914,"column":138,"nodeType":"506","messageId":"507","endLine":914,"endColumn":139,"suggestions":"554"},{"ruleId":"504","severity":1,"message":"505","line":914,"column":144,"nodeType":"506","messageId":"507","endLine":914,"endColumn":145,"suggestions":"555"},{"ruleId":"440","severity":1,"message":"556","line":1053,"column":8,"nodeType":"442","endLine":1053,"endColumn":10,"suggestions":"557"},{"ruleId":"444","severity":1,"message":"445","line":1236,"column":32,"nodeType":"446","messageId":"447","endLine":1236,"endColumn":34},{"ruleId":"444","severity":1,"message":"445","line":1456,"column":24,"nodeType":"446","messageId":"447","endLine":1456,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":1457,"column":71,"nodeType":"446","messageId":"447","endLine":1457,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1458,"column":31,"nodeType":"446","messageId":"447","endLine":1458,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1459,"column":71,"nodeType":"446","messageId":"447","endLine":1459,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1460,"column":31,"nodeType":"446","messageId":"447","endLine":1460,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1461,"column":71,"nodeType":"446","messageId":"447","endLine":1461,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1462,"column":31,"nodeType":"446","messageId":"447","endLine":1462,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1463,"column":71,"nodeType":"446","messageId":"447","endLine":1463,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1565,"column":32,"nodeType":"446","messageId":"447","endLine":1565,"endColumn":34},{"ruleId":"444","severity":1,"message":"445","line":1566,"column":69,"nodeType":"446","messageId":"447","endLine":1566,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":1567,"column":69,"nodeType":"446","messageId":"447","endLine":1567,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":1702,"column":24,"nodeType":"446","messageId":"447","endLine":1702,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":1703,"column":71,"nodeType":"446","messageId":"447","endLine":1703,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1704,"column":31,"nodeType":"446","messageId":"447","endLine":1704,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1705,"column":71,"nodeType":"446","messageId":"447","endLine":1705,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1706,"column":31,"nodeType":"446","messageId":"447","endLine":1706,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1707,"column":71,"nodeType":"446","messageId":"447","endLine":1707,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1708,"column":31,"nodeType":"446","messageId":"447","endLine":1708,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1709,"column":71,"nodeType":"446","messageId":"447","endLine":1709,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1811,"column":32,"nodeType":"446","messageId":"447","endLine":1811,"endColumn":34},{"ruleId":"444","severity":1,"message":"445","line":1812,"column":69,"nodeType":"446","messageId":"447","endLine":1812,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":1813,"column":69,"nodeType":"446","messageId":"447","endLine":1813,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":1847,"column":24,"nodeType":"446","messageId":"447","endLine":1847,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":1955,"column":24,"nodeType":"446","messageId":"447","endLine":1955,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":1956,"column":71,"nodeType":"446","messageId":"447","endLine":1956,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1957,"column":31,"nodeType":"446","messageId":"447","endLine":1957,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1958,"column":71,"nodeType":"446","messageId":"447","endLine":1958,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1959,"column":31,"nodeType":"446","messageId":"447","endLine":1959,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1960,"column":71,"nodeType":"446","messageId":"447","endLine":1960,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":1961,"column":31,"nodeType":"446","messageId":"447","endLine":1961,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":1962,"column":71,"nodeType":"446","messageId":"447","endLine":1962,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":2064,"column":32,"nodeType":"446","messageId":"447","endLine":2064,"endColumn":34},{"ruleId":"444","severity":1,"message":"445","line":2065,"column":69,"nodeType":"446","messageId":"447","endLine":2065,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":2066,"column":69,"nodeType":"446","messageId":"447","endLine":2066,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":2100,"column":24,"nodeType":"446","messageId":"447","endLine":2100,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":2100,"column":44,"nodeType":"446","messageId":"447","endLine":2100,"endColumn":46},{"ruleId":"444","severity":1,"message":"445","line":2100,"column":74,"nodeType":"446","messageId":"447","endLine":2100,"endColumn":76},{"ruleId":"444","severity":1,"message":"445","line":2205,"column":24,"nodeType":"446","messageId":"447","endLine":2205,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":2206,"column":71,"nodeType":"446","messageId":"447","endLine":2206,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":2207,"column":31,"nodeType":"446","messageId":"447","endLine":2207,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":2208,"column":71,"nodeType":"446","messageId":"447","endLine":2208,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":2209,"column":31,"nodeType":"446","messageId":"447","endLine":2209,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":2210,"column":71,"nodeType":"446","messageId":"447","endLine":2210,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":2211,"column":31,"nodeType":"446","messageId":"447","endLine":2211,"endColumn":33},{"ruleId":"444","severity":1,"message":"445","line":2212,"column":71,"nodeType":"446","messageId":"447","endLine":2212,"endColumn":73},{"ruleId":"444","severity":1,"message":"445","line":2310,"column":32,"nodeType":"446","messageId":"447","endLine":2310,"endColumn":34},{"ruleId":"444","severity":1,"message":"445","line":2311,"column":69,"nodeType":"446","messageId":"447","endLine":2311,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":2312,"column":69,"nodeType":"446","messageId":"447","endLine":2312,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":2345,"column":24,"nodeType":"446","messageId":"447","endLine":2345,"endColumn":26},{"ruleId":"444","severity":1,"message":"445","line":2345,"column":44,"nodeType":"446","messageId":"447","endLine":2345,"endColumn":46},{"ruleId":"404","severity":1,"message":"558","line":2431,"column":13,"nodeType":"406","messageId":"407","endLine":2431,"endColumn":20},{"ruleId":"559","severity":1,"message":"560","line":2455,"column":55,"nodeType":"446","messageId":"561","endLine":2455,"endColumn":62},{"ruleId":"404","severity":1,"message":"562","line":2521,"column":11,"nodeType":"406","messageId":"407","endLine":2521,"endColumn":25},{"ruleId":"444","severity":1,"message":"445","line":3162,"column":23,"nodeType":"446","messageId":"447","endLine":3162,"endColumn":25},{"ruleId":"444","severity":1,"message":"445","line":3176,"column":27,"nodeType":"446","messageId":"447","endLine":3176,"endColumn":29},{"ruleId":"444","severity":1,"message":"445","line":3197,"column":23,"nodeType":"446","messageId":"447","endLine":3197,"endColumn":25},{"ruleId":"444","severity":1,"message":"445","line":3211,"column":27,"nodeType":"446","messageId":"447","endLine":3211,"endColumn":29},{"ruleId":"404","severity":1,"message":"563","line":3239,"column":13,"nodeType":"406","messageId":"407","endLine":3239,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3523,"column":13,"nodeType":"406","messageId":"407","endLine":3523,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3551,"column":13,"nodeType":"406","messageId":"407","endLine":3551,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3577,"column":13,"nodeType":"406","messageId":"407","endLine":3577,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3603,"column":13,"nodeType":"406","messageId":"407","endLine":3603,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3629,"column":13,"nodeType":"406","messageId":"407","endLine":3629,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3655,"column":13,"nodeType":"406","messageId":"407","endLine":3655,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3681,"column":13,"nodeType":"406","messageId":"407","endLine":3681,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3709,"column":13,"nodeType":"406","messageId":"407","endLine":3709,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3735,"column":13,"nodeType":"406","messageId":"407","endLine":3735,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3761,"column":13,"nodeType":"406","messageId":"407","endLine":3761,"endColumn":20},{"ruleId":"404","severity":1,"message":"563","line":3787,"column":13,"nodeType":"406","messageId":"407","endLine":3787,"endColumn":20},{"ruleId":"404","severity":1,"message":"564","line":3830,"column":11,"nodeType":"406","messageId":"407","endLine":3830,"endColumn":40},{"ruleId":"404","severity":1,"message":"565","line":4340,"column":11,"nodeType":"406","messageId":"407","endLine":4340,"endColumn":39},{"ruleId":"404","severity":1,"message":"566","line":6264,"column":13,"nodeType":"406","messageId":"407","endLine":6264,"endColumn":17},{"ruleId":"444","severity":1,"message":"445","line":6268,"column":25,"nodeType":"446","messageId":"447","endLine":6268,"endColumn":27},{"ruleId":"404","severity":1,"message":"567","line":6270,"column":13,"nodeType":"406","messageId":"407","endLine":6270,"endColumn":21},{"ruleId":"404","severity":1,"message":"568","line":6271,"column":13,"nodeType":"406","messageId":"407","endLine":6271,"endColumn":23},{"ruleId":"404","severity":1,"message":"449","line":6281,"column":11,"nodeType":"406","messageId":"407","endLine":6281,"endColumn":22},{"ruleId":"404","severity":1,"message":"410","line":6285,"column":11,"nodeType":"406","messageId":"407","endLine":6285,"endColumn":20},{"ruleId":"569","severity":1,"message":"570","line":6352,"column":25,"nodeType":"424","endLine":6352,"endColumn":29},{"ruleId":"419","severity":1,"message":"420","line":13,"column":1,"nodeType":"421","endLine":25,"endColumn":2},{"ruleId":"571","severity":1,"message":"572","line":18,"column":5,"nodeType":"573","messageId":"447","endLine":18,"endColumn":15},{"ruleId":"404","severity":1,"message":"574","line":53,"column":15,"nodeType":"406","messageId":"407","endLine":53,"endColumn":19},{"ruleId":"404","severity":1,"message":"575","line":99,"column":23,"nodeType":"406","messageId":"407","endLine":99,"endColumn":31},{"ruleId":"422","severity":1,"message":"423","line":216,"column":78,"nodeType":"424","endLine":216,"endColumn":89},{"ruleId":"419","severity":1,"message":"420","line":13,"column":1,"nodeType":"421","endLine":59,"endColumn":2},{"ruleId":"404","severity":1,"message":"576","line":1,"column":7,"nodeType":"406","messageId":"407","endLine":1,"endColumn":26},"no-native-reassign",["577"],"no-negated-in-lhs",["578"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'userKpiDigitalTemp' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'showError' is assigned a value but never used.","'loginfooter' is assigned a value but never used.","'SetDateInJsonArrayToQueryOverObjects' is defined but never used.","'SetParamsToQuery' is defined but never used.","'AddLineMockData' is defined but never used.","'AddDataByFilters' is defined but never used.","'GetIndicators' is defined but never used.","'AddItensToJsonArray' is defined but never used.","'months' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ChartDataLabels' is defined but never used.","'Button' is defined but never used.","'InputText' is defined but never used.","'Password' is defined but never used.","'axios' is defined but never used.","'ColumnGroup' is defined but never used.","'Ripple' is defined but never used.","'Dropdown' is defined but never used.","'classNames' is defined but never used.","'colorsBars' is defined but never used.","'LoadingSkeletonSquare' is defined but never used.","'cors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'GraficoCE_Total', 'GraficoNNCLog_Total', 'GraficoNNCMP_Total', 'GraficoRAC_Aves', 'GraficoRAC_Outros', 'GraficoRAC_Preparados', 'GraficoRAC_Suinos', and 'GraficoRAC_Total'. Either include them or remove the dependency array.","ArrayExpression",["579"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DataTableColGroupDemo' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'ReactDOM' is defined but never used.","'testeSQLPivotRollup' is defined but never used.","'LineWeight' is defined but never used.","'Funcao' is defined but never used.","'responseTable' is assigned a value but never used.","'setresponseTable' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'TableRacRACDetalhesInseto' is assigned a value but never used.","'setTableRacRACDetalhesInseto' is assigned a value but never used.","'TableRacRACDetalhesCabelo' is assigned a value but never used.","'setTableRacRACDetalhesCabelo' is assigned a value but never used.","'TableRacRACDetalhesPlastico' is assigned a value but never used.","'setTableRacRACDetalhesPlastico' is assigned a value but never used.","'TableRacRACDetalhesMetal' is assigned a value but never used.","'setTableRacRACDetalhesMetal' is assigned a value but never used.","'TableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'setTableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'TableRacRACDetalhesLarva' is assigned a value but never used.","'setTableRacRACDetalhesLarva' is assigned a value but never used.","'TableRacRACDetalhesCE' is assigned a value but never used.","'setTableRacRACDetalhesCE' is assigned a value but never used.","'TableRacRACDetalhesCEInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerente' is assigned a value but never used.","'TableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'TableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'TableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'TableNNCLogEvolucao' is assigned a value but never used.","'setTableNNCLogEvolucao' is assigned a value but never used.","'TableNNCTotais' is assigned a value but never used.","'setTableNNCTotais' is assigned a value but never used.","'TableNNCEvolucaoDia' is assigned a value but never used.","'setTableNNCEvolucaoDia' is assigned a value but never used.","'responseGraficoNNCAvesPesadas' is assigned a value but never used.","'responseGraficoNNCAvesRS' is assigned a value but never used.","'responseGraficoNNCAvesSP' is assigned a value but never used.","'responseGraficoNNCAvesPR' is assigned a value but never used.","'responseGraficoNNCAvesLeves' is assigned a value but never used.","'responseGraficoNNCSuinos' is assigned a value but never used.","'responseGraficoNNCPreparados' is assigned a value but never used.","'whereRACCE' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["580","581"],["582","583"],["584","585"],["586","587"],["588","589"],["590","591"],["592","593"],["594","595"],["596","597"],["598","599"],["600","601"],["602","603"],["604","605"],["606","607"],["608","609"],["610","611"],["612","613"],["614","615"],["616","617"],["618","619"],["620","621"],["622","623"],["624","625"],["626","627"],["628","629"],["630","631"],["632","633"],["634","635"],["636","637"],["638","639"],["640","641"],["642","643"],["644","645"],["646","647"],["648","649"],["650","651"],["652","653"],["654","655"],["656","657"],["658","659"],["660","661"],["662","663"],["664","665"],["666","667"],["668","669"],["670","671"],["672","673"],["674","675"],"React Hook React.useEffect has missing dependencies: 'GraficoCETotal', 'GraficoCETotalAvesLeves', 'GraficoCETotalAvesPesadas', 'GraficoCETotalAvesPesadasPR', 'GraficoCETotalAvesPesadasRS', 'GraficoCETotalAvesPesadasSP', 'GraficoCETotalPreparados', 'GraficoCETotalSuinos', 'GraficoNCCMP', 'GraficoNCCMPAvesLeves', 'GraficoNCCMPAvesPesadas', 'GraficoNCCMPAvesPesadasPR', 'GraficoNCCMPAvesPesadasRS', 'GraficoNCCMPAvesPesadasSP', 'GraficoNCCMPPreparados', 'GraficoNCCMPSuinos', 'GraficoNNCAvesLeves', 'GraficoNNCAvesLevesProblemas', 'GraficoNNCAvesLevesUnidades', 'GraficoNNCAvesPR', 'GraficoNNCAvesPRProblemas', 'GraficoNNCAvesPRUnidades', 'GraficoNNCAvesPesadas', 'GraficoNNCAvesPesadasProblemas', 'GraficoNNCAvesPesadasUnidades', 'GraficoNNCAvesRS', 'GraficoNNCAvesRSProblemas', 'GraficoNNCAvesRSUnidades', 'GraficoNNCAvesSP', 'GraficoNNCAvesSPProblemas', 'GraficoNNCAvesSPUnidades', 'GraficoNNCCEInerente', 'GraficoNNCCEMetal', 'GraficoNNCCENaoInerente', 'GraficoNNCCEOssos', 'GraficoNNCCEPlastico', 'GraficoNNCCETotal', 'GraficoNNCLogDetalhesAves', 'GraficoNNCLogDetalhesPreparados', 'GraficoNNCLogDetalhesSuinos', 'GraficoNNCLogDetalhesTotal', 'GraficoNNCMPTotalCE', 'GraficoNNCMPTotalCEAvesLeves', 'GraficoNNCMPTotalCEAvesPesadas', 'GraficoNNCMPTotalCEAvesPesadasPR', 'GraficoNNCMPTotalCEAvesPesadasRS', 'GraficoNNCMPTotalCEAvesPesadasSP', 'GraficoNNCMPTotalCEPreparados', 'GraficoNNCMPTotalCESuinos', 'GraficoNNCPreparados', 'GraficoNNCPreparadosProblemas', 'GraficoNNCPreparadosUnidades', 'GraficoNNCSuinos', 'GraficoNNCSuinosProblemas', 'GraficoNNCSuinosUnidades', 'GraficoRAC', 'GraficoRACAvesLeves', 'GraficoRACAvesPesadas', 'GraficoRACAvesPesadasPR', 'GraficoRACAvesPesadasRS', 'GraficoRACAvesPesadasSP', 'GraficoRACDetalhesAC', 'GraficoRACDetalhesAberturaPDV', 'GraficoRACDetalhesCE', 'GraficoRACDetalhesCEInerente', 'GraficoRACDetalhesCENaoInerente', 'GraficoRACDetalhesCEPlastico', 'GraficoRACDetalhesCabelo', 'GraficoRACDetalhesCritica', 'GraficoRACDetalhesDoc', 'GraficoRACDetalhesEspeciais', 'GraficoRACDetalhesFFO', 'GraficoRACDetalhesInseto', 'GraficoRACDetalhesIntoxicacao', 'GraficoRACDetalhesLarva', 'GraficoRACDetalhesLogME', 'GraficoRACDetalhesLogMI', 'GraficoRACDetalhesMassatake', 'GraficoRACDetalhesMetal', 'GraficoRACDetalhesPDV', 'GraficoRACDetalhesPlastico', 'GraficoRACDetalhesTT', 'GraficoRACDetalhesTerceiro', 'GraficoRACME', 'GraficoRACMI', 'GraficoRACPreparados', 'GraficoRACProblemasAvesLeves', 'GraficoRACProblemasAvesPesadas', 'GraficoRACProblemasAvesPesadasPR', 'GraficoRACProblemasAvesPesadasRS', 'GraficoRACProblemasAvesPesadasSP', 'GraficoRACProblemasPreparados', 'GraficoRACProblemasSuinos', 'GraficoRACSuinos', 'GraficoRACTotalCE', 'GraficoRACTotalCEAvesLeves', 'GraficoRACTotalCEAvesPesadas', 'GraficoRACTotalCEAvesPesadasPR', 'GraficoRACTotalCEAvesPesadasRS', 'GraficoRACTotalCEAvesPesadasSP', 'GraficoRACTotalCEPreparados', 'GraficoRACTotalCESuinos', 'GraficoRACUnidadesAvesLeves', 'GraficoRACUnidadesAvesPesadas', 'GraficoRACUnidadesAvesPesadasPR', 'GraficoRACUnidadesAvesPesadasRS', 'GraficoRACUnidadesAvesPesadasSP', 'GraficoRACUnidadesPreparados', 'GraficoRACUnidadesSuinos', 'buscarDadosTable', 'chamarAPI', 'whereNNCMP', and 'whereRACPreparados'. Either include them or remove the dependency array.",["676"],"'groupBy' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'DataTableRACME' is assigned a value but never used.","'retorno' is assigned a value but never used.","'DataTableNNCEvolucaoMesTotais' is assigned a value but never used.","'buscarTabelaRACUnicoProblema' is assigned a value but never used.","'parm' is assigned a value but never used.","'datasets' is assigned a value but never used.","'indicators' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-dupe-keys","Duplicate key 'SelectRole'.","ObjectExpression","'user' is assigned a value but never used.","'response' is assigned a value but never used.","'testeSQLPivotRollup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"messageId":"679","fix":"680","desc":"681"},{"messageId":"682","fix":"683","desc":"684"},{"messageId":"679","fix":"685","desc":"681"},{"messageId":"682","fix":"686","desc":"684"},{"messageId":"679","fix":"687","desc":"681"},{"messageId":"682","fix":"688","desc":"684"},{"messageId":"679","fix":"689","desc":"681"},{"messageId":"682","fix":"690","desc":"684"},{"messageId":"679","fix":"691","desc":"681"},{"messageId":"682","fix":"692","desc":"684"},{"messageId":"679","fix":"693","desc":"681"},{"messageId":"682","fix":"694","desc":"684"},{"messageId":"679","fix":"695","desc":"681"},{"messageId":"682","fix":"696","desc":"684"},{"messageId":"679","fix":"697","desc":"681"},{"messageId":"682","fix":"698","desc":"684"},{"messageId":"679","fix":"699","desc":"681"},{"messageId":"682","fix":"700","desc":"684"},{"messageId":"679","fix":"701","desc":"681"},{"messageId":"682","fix":"702","desc":"684"},{"messageId":"679","fix":"703","desc":"681"},{"messageId":"682","fix":"704","desc":"684"},{"messageId":"679","fix":"705","desc":"681"},{"messageId":"682","fix":"706","desc":"684"},{"messageId":"679","fix":"707","desc":"681"},{"messageId":"682","fix":"708","desc":"684"},{"messageId":"679","fix":"709","desc":"681"},{"messageId":"682","fix":"710","desc":"684"},{"messageId":"679","fix":"711","desc":"681"},{"messageId":"682","fix":"712","desc":"684"},{"messageId":"679","fix":"713","desc":"681"},{"messageId":"682","fix":"714","desc":"684"},{"messageId":"679","fix":"715","desc":"681"},{"messageId":"682","fix":"716","desc":"684"},{"messageId":"679","fix":"717","desc":"681"},{"messageId":"682","fix":"718","desc":"684"},{"messageId":"679","fix":"719","desc":"681"},{"messageId":"682","fix":"720","desc":"684"},{"messageId":"679","fix":"721","desc":"681"},{"messageId":"682","fix":"722","desc":"684"},{"messageId":"679","fix":"723","desc":"681"},{"messageId":"682","fix":"724","desc":"684"},{"messageId":"679","fix":"725","desc":"681"},{"messageId":"682","fix":"726","desc":"684"},{"messageId":"679","fix":"727","desc":"681"},{"messageId":"682","fix":"728","desc":"684"},{"messageId":"679","fix":"729","desc":"681"},{"messageId":"682","fix":"730","desc":"684"},{"messageId":"679","fix":"731","desc":"681"},{"messageId":"682","fix":"732","desc":"684"},{"messageId":"679","fix":"733","desc":"681"},{"messageId":"682","fix":"734","desc":"684"},{"messageId":"679","fix":"735","desc":"681"},{"messageId":"682","fix":"736","desc":"684"},{"messageId":"679","fix":"737","desc":"681"},{"messageId":"682","fix":"738","desc":"684"},{"messageId":"679","fix":"739","desc":"681"},{"messageId":"682","fix":"740","desc":"684"},{"messageId":"679","fix":"741","desc":"681"},{"messageId":"682","fix":"742","desc":"684"},{"messageId":"679","fix":"743","desc":"681"},{"messageId":"682","fix":"744","desc":"684"},{"messageId":"679","fix":"745","desc":"681"},{"messageId":"682","fix":"746","desc":"684"},{"messageId":"679","fix":"747","desc":"681"},{"messageId":"682","fix":"748","desc":"684"},{"messageId":"679","fix":"749","desc":"681"},{"messageId":"682","fix":"750","desc":"684"},{"messageId":"679","fix":"751","desc":"681"},{"messageId":"682","fix":"752","desc":"684"},{"messageId":"679","fix":"753","desc":"681"},{"messageId":"682","fix":"754","desc":"684"},{"messageId":"679","fix":"755","desc":"681"},{"messageId":"682","fix":"756","desc":"684"},{"messageId":"679","fix":"757","desc":"681"},{"messageId":"682","fix":"758","desc":"684"},{"messageId":"679","fix":"759","desc":"681"},{"messageId":"682","fix":"760","desc":"684"},{"messageId":"679","fix":"761","desc":"681"},{"messageId":"682","fix":"762","desc":"684"},{"messageId":"679","fix":"763","desc":"681"},{"messageId":"682","fix":"764","desc":"684"},{"messageId":"679","fix":"765","desc":"681"},{"messageId":"682","fix":"766","desc":"684"},{"messageId":"679","fix":"767","desc":"681"},{"messageId":"682","fix":"768","desc":"684"},{"messageId":"679","fix":"769","desc":"681"},{"messageId":"682","fix":"770","desc":"684"},{"messageId":"679","fix":"771","desc":"681"},{"messageId":"682","fix":"772","desc":"684"},{"messageId":"679","fix":"773","desc":"681"},{"messageId":"682","fix":"774","desc":"684"},{"messageId":"679","fix":"775","desc":"681"},{"messageId":"682","fix":"776","desc":"684"},{"messageId":"679","fix":"777","desc":"681"},{"messageId":"682","fix":"778","desc":"684"},{"desc":"779","fix":"780"},"Update the dependencies array to be: [GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",{"range":"781","text":"782"},"removeEscape",{"range":"783","text":"784"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"785","text":"786"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"787","text":"784"},{"range":"788","text":"786"},{"range":"789","text":"784"},{"range":"790","text":"786"},{"range":"791","text":"784"},{"range":"792","text":"786"},{"range":"793","text":"784"},{"range":"794","text":"786"},{"range":"795","text":"784"},{"range":"796","text":"786"},{"range":"797","text":"784"},{"range":"798","text":"786"},{"range":"799","text":"784"},{"range":"800","text":"786"},{"range":"801","text":"784"},{"range":"802","text":"786"},{"range":"803","text":"784"},{"range":"804","text":"786"},{"range":"805","text":"784"},{"range":"806","text":"786"},{"range":"807","text":"784"},{"range":"808","text":"786"},{"range":"809","text":"784"},{"range":"810","text":"786"},{"range":"811","text":"784"},{"range":"812","text":"786"},{"range":"813","text":"784"},{"range":"814","text":"786"},{"range":"815","text":"784"},{"range":"816","text":"786"},{"range":"817","text":"784"},{"range":"818","text":"786"},{"range":"819","text":"784"},{"range":"820","text":"786"},{"range":"821","text":"784"},{"range":"822","text":"786"},{"range":"823","text":"784"},{"range":"824","text":"786"},{"range":"825","text":"784"},{"range":"826","text":"786"},{"range":"827","text":"784"},{"range":"828","text":"786"},{"range":"829","text":"784"},{"range":"830","text":"786"},{"range":"831","text":"784"},{"range":"832","text":"786"},{"range":"833","text":"784"},{"range":"834","text":"786"},{"range":"835","text":"784"},{"range":"836","text":"786"},{"range":"837","text":"784"},{"range":"838","text":"786"},{"range":"839","text":"784"},{"range":"840","text":"786"},{"range":"841","text":"784"},{"range":"842","text":"786"},{"range":"843","text":"784"},{"range":"844","text":"786"},{"range":"845","text":"784"},{"range":"846","text":"786"},{"range":"847","text":"784"},{"range":"848","text":"786"},{"range":"849","text":"784"},{"range":"850","text":"786"},{"range":"851","text":"784"},{"range":"852","text":"786"},{"range":"853","text":"784"},{"range":"854","text":"786"},{"range":"855","text":"784"},{"range":"856","text":"786"},{"range":"857","text":"784"},{"range":"858","text":"786"},{"range":"859","text":"784"},{"range":"860","text":"786"},{"range":"861","text":"784"},{"range":"862","text":"786"},{"range":"863","text":"784"},{"range":"864","text":"786"},{"range":"865","text":"784"},{"range":"866","text":"786"},{"range":"867","text":"784"},{"range":"868","text":"786"},{"range":"869","text":"784"},{"range":"870","text":"786"},{"range":"871","text":"784"},{"range":"872","text":"786"},{"range":"873","text":"784"},{"range":"874","text":"786"},{"range":"875","text":"784"},{"range":"876","text":"786"},{"range":"877","text":"784"},{"range":"878","text":"786"},{"range":"879","text":"784"},{"range":"880","text":"786"},"Update the dependencies array to be: [GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]",{"range":"881","text":"882"},[3850,3852],"[GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",[51437,51438],"",[51437,51437],"\\",[51449,51450],[51449,51449],[51684,51685],[51684,51684],[51696,51697],[51696,51696],[52673,52674],[52673,52673],[52681,52682],[52681,52681],[52904,52905],[52904,52904],[52912,52913],[52912,52912],[54100,54101],[54100,54100],[54114,54115],[54114,54114],[54117,54118],[54117,54117],[54131,54132],[54131,54131],[54134,54135],[54134,54134],[54148,54149],[54148,54148],[54152,54153],[54152,54152],[54160,54161],[54160,54160],[54163,54164],[54163,54163],[54171,54172],[54171,54171],[54191,54192],[54191,54191],[54203,54204],[54203,54203],[54206,54207],[54206,54206],[54214,54215],[54214,54214],[54218,54219],[54218,54218],[54236,54237],[54236,54236],[54240,54241],[54240,54240],[54250,54251],[54250,54250],[54494,54495],[54494,54494],[54508,54509],[54508,54508],[54511,54512],[54511,54511],[54525,54526],[54525,54525],[54528,54529],[54528,54528],[54542,54543],[54542,54542],[54546,54547],[54546,54546],[54554,54555],[54554,54554],[54557,54558],[54557,54557],[54565,54566],[54565,54565],[54585,54586],[54585,54585],[54597,54598],[54597,54597],[54600,54601],[54600,54600],[54608,54609],[54608,54608],[54612,54613],[54612,54612],[54630,54631],[54630,54630],[54634,54635],[54634,54634],[54644,54645],[54644,54644],[61941,61942],[61941,61941],[61947,61948],[61947,61947],[62331,62332],[62331,62331],[62337,62338],[62337,62337],[87308,87310],"[GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]"]