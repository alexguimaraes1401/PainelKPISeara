[{"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js":"1","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js":"2","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js":"3","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js":"4","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js":"5","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js":"6","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js":"7","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js":"8","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js":"9","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js":"10","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js":"11","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js":"12","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js":"13","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js":"14","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js":"15","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js":"16","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js":"17","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js":"18","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js":"19","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js":"20","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js":"21","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js":"22","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js":"23","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js":"24","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\PageTeste.js":"25"},{"size":546,"mtime":1622572768672,"results":"26","hashOfConfig":"27"},{"size":8700,"mtime":1631056416042,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1615291765866,"results":"29","hashOfConfig":"27"},{"size":14732,"mtime":1631133207974,"results":"30","hashOfConfig":"27"},{"size":6422,"mtime":1626437577829,"results":"31","hashOfConfig":"27"},{"size":2288,"mtime":1615291765854,"results":"32","hashOfConfig":"27"},{"size":2638,"mtime":1617233353191,"results":"33","hashOfConfig":"27"},{"size":1824,"mtime":1615291765851,"results":"34","hashOfConfig":"27"},{"size":835,"mtime":1615291765852,"results":"35","hashOfConfig":"27"},{"size":1596,"mtime":1615395366826,"results":"36","hashOfConfig":"27"},{"size":580,"mtime":1615928953591,"results":"37","hashOfConfig":"27"},{"size":197,"mtime":1615928953593,"results":"38","hashOfConfig":"27"},{"size":376,"mtime":1615928953599,"results":"39","hashOfConfig":"27"},{"size":34970,"mtime":1618196804244,"results":"40","hashOfConfig":"27"},{"size":191,"mtime":1617233194718,"results":"41","hashOfConfig":"27"},{"size":188,"mtime":1617233204450,"results":"42","hashOfConfig":"27"},{"size":490344,"mtime":1632105359399,"results":"43","hashOfConfig":"27"},{"size":0,"mtime":1623103764544,"results":"44","hashOfConfig":"27"},{"size":762,"mtime":1630588706242,"results":"45","hashOfConfig":"27"},{"size":9914,"mtime":1623173278878,"results":"46","hashOfConfig":"27"},{"size":9658,"mtime":1623173278848,"results":"47","hashOfConfig":"27"},{"size":5521,"mtime":1623173278887,"results":"48","hashOfConfig":"27"},{"size":1562,"mtime":1630588691160,"results":"49","hashOfConfig":"27"},{"size":55056,"mtime":1623345057880,"results":"50","hashOfConfig":"27"},{"size":355799,"mtime":1631059714520,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1499l5q",{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":268,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":718,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js",[],["113","114"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js",["115","116","117","118","119","120"],"import React, { Suspense, lazy } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// Grab components out of the ReactRouterDOM that we will be using\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport UserApi from './api/loginApi'\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './index.css';\r\nimport './css/sidebar-desktop.css';\r\nimport './css/login.css';\r\nimport './css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport NavbarMobile from './components/navbarMobile';\r\nimport NavbarDesktop from './components/navbarDesktop';\r\nimport SidebarDesktop from './components/sidebarDesktop';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ContactUs = lazy(() => import(\"./views/contactUs\"));\r\nconst NotFoundPage = lazy(() => import(\"./views/notFoundPage\"));\r\nconst DashViewAbsorcao = lazy(() => import(\"./views/dashViewAbsorcao\"));\r\nconst PageTeste = lazy(() => import(\"./views/PageTeste\"));\r\nconst DashViewNNCLog = lazy(() => import(\"./views/dashViewNNCLog\"));\r\nconst DashViewNNCMP = lazy(() => import(\"./views/dashViewNNCMP\"));\r\nconst DashViewRac = lazy(() => import(\"./views/rac\"));\r\nconst Home = lazy(() => import(\"./views/home\"));\r\nconst CreateUser = lazy(() => import(\"./views/createUser\"));\r\nconst ListUsers = lazy(() => import(\"./views/listUsers\"));\r\nconst EditUser = lazy(() => import(\"./views/editUser\"));\r\n\r\nfunction App() {\r\n    const userKpiDigitalTemp = { name: 'admin', pass: 'admin' }\r\n    const [state, setState] = React.useState({ username: \"\", password: \"\" });\r\n    // const [password, setPassword] = React.useState(\"\");\r\n    const [user, setUser] = React.useState();\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n    const toast = React.useRef(null);\r\n\r\n    const handleLogin = (e) => {\r\n       \r\n        const user = state;\r\n        \r\n        if(user.username.length < 1 || user.password.length < 1)\r\n        {\r\n            showInfo(\"Dados inválidos\", \"Os campos Usuário e Senha são obrigatórios\",  6000)\r\n            return;   \r\n        }\r\n\r\n        UserApi.post(user)\r\n            .then(r => {\r\n                if (r.status === 200) {\r\n                    localStorage.setItem('user', JSON.stringify({ name: user.username, token: r.data }));\r\n                    setIsAuthenticated(true);\r\n                    window.location.reload(false);\r\n                }\r\n            }).catch((e,ex) => {\r\n                if (e.response &&  e.response.status === 404) {\r\n                    showInfo(\"Usuário não encontrado\", \"Por favor verifique usuário e senha e tente novamente.\", 6000)\r\n                }else {\r\n                    showInfo(\"Nao foi possivel compeltar esta ação\", \"No momento não é possível completar esta ação.\", 6000)\r\n                }\r\n                setIsAuthenticated(false);\r\n            }).finally(() => {\r\n            })\r\n    }\r\n\r\n    const showInfo = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'info', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n    \r\n    const showError = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'error', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n        setUser({});\r\n        setState({ username: \"\", password: \"\" })\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n        if (loggedInUser) {\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            setUser(foundUser);\r\n        }\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault()\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let statetemp = { ...state };\r\n        statetemp[name] = value\r\n        setState({ ...statetemp });\r\n    }\r\n\r\n    /* Local Componentes */\r\n\r\n    const Layout = ({ children }) => {\r\n        return (\r\n            <div className=\"pdfsize\">\r\n                <NavbarMobile username={user.name} handleLogout={handleLogout} />\r\n                <NavbarDesktop username={user.name} handleLogout={handleLogout} />\r\n                <SidebarDesktop />\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"main-content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const ChangePageLoader = () => {\r\n        return (\r\n            <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\r\n        )\r\n    }\r\n\r\n    const loginfooter = <span>\r\n        <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n    </span>;\r\n\r\n    /* Se nao esta logado exibe tela de login: */\r\n    if (!user) {\r\n        return (\r\n            <div className=\"global-container\" >\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"card login-form\">\r\n                    <Card\r\n                        title=\"Bem vindo\"\r\n                        subTitle=\"faça o login para acessar o sistema\"\r\n                        className=\"card-body\"\r\n                        footer={<span>\r\n                            <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n                        </span>} >\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"name1\"\r\n                                    name=\"username\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.username}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                />\r\n                                <label htmlFor=\"name1\">Usuário</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <Password\r\n                                    id=\"pass\"\r\n                                    name=\"password\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.password}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                    feedback={false}\r\n                                    toggleMask />\r\n                                <label htmlFor=\"pass\">Senha</label>\r\n                            </span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    /*Exibe paginas no Router*/\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<ChangePageLoader />}>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route path='/PageTeste' component={PageTeste} />\r\n                        <Route path='/absorcao' component={DashViewAbsorcao} />\r\n                        <Route path='/cadastro' component={CreateUser} />\r\n                        <Route path='/usuarios' component={ListUsers} />\r\n                        <Route exact path='/usuario/:id' component={EditUser} />\r\n                        <Route path='/nnclog' component={DashViewNNCLog} />\r\n                        <Route path='/nncmp' component={DashViewNNCMP} />\r\n                        <Route path='/rac' component={DashViewRac} />\r\n                        <Route path='404' component={NotFoundPage} />\r\n                        <Route path='*' component={NotFoundPage} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Suspense>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js",["121","122","123","124","125","126","127","128"],"import axios from 'axios'\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators,\r\n    AddItensToJsonArray,\r\n} from '../domain/kpiservice'\r\nimport { months } from '../domain/constants'\r\n\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n   //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\n\r\n\r\nexport default {\r\n\r\n    getSearaBaseRac: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseSQLNINJA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/SQLNINJA`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n        getSearaBaseRacIndicadoresSemFiltro2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACTotalIndicadoresSemFiltro2`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacIndicadores: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadores`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRacIndicadores_: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadoresSemFiltro`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseNNCMPTotalCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRACTotalCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RACTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n    getSearaBaseRacCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n    getSearaBaseRacME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacFinal: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacFinal`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n            \r\n        }),\r\n\r\n    getSearaBaseNCCMP: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n        getSearaBaseNCCMPUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNCCMPProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCMPCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCLOG: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLogTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/CETotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacAberturaME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRacAberturaME2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME2`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC1niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC1niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        getSearaBaseNNCLog1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLOG1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC2niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC2niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseCE2niveisPIVOTmesDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/CE2niveisPIVOTmesDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseICBarras: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/ICBarras`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        \r\n\r\n        \r\n  \r\n}\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js",["129","130"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst NavbarDesktop = (props) => {\r\n\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"navbar-desk\" >\r\n            <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"https://logodownload.org/wp-content/uploads/2014/12/seara-logo-1-1.png\"\r\n                    //width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                Painel de KPIs\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Bem-vindo: <a href=\"#\" style={{ textDecoration: 'none' }}>{capitalize(props.username)}</a>\r\n                </Navbar.Text>\r\n                &nbsp;\r\n                &nbsp;\r\n                <Navbar.Text>\r\n                    <a href=\"#\" style={{ textDecoration: 'none' }} onClick={(e) => props.handleLogout(e)}>\r\n                        <span style={{ cursor: 'pointer', color: 'rgb(255 255 255 / 50%)' }}>\r\n                            Sair &nbsp;\r\n                            <i style={{ cursor: 'pointer', color: '#fff' }} className=\"pi pi-sign-out\"></i>\r\n                        </span>\r\n                    </a>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarDesktop;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions } from '../domain/constants';\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [970,4000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done “npm i cors --save-dev”\r\n\r\nfunction Home() {\r\n\r\n    \r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n\r\n    //chamadas\r\n    const [TableRacME, setTableRacME] = React.useState()  \r\n\r\n    const [GraficoRAC_Total, setGraficoRAC_Total] = React.useState()   \r\n    const [GraficoRAC_Aves, setGraficoRAC_Aves] = React.useState() \r\n    const [GraficoRAC_Suinos, setGraficoRAC_Suinos] = React.useState() \r\n    const [GraficoRAC_Preparados, setGraficoRAC_Preparados] = React.useState() \r\n    const [GraficoRAC_Outros, setGraficoRAC_Outros] = React.useState() \r\n    const [GraficoNNCMP_Total, setGraficoNNCMP_Total] = React.useState() \r\n    const [GraficoNNCLog_Total, setGraficoNNCLog_Total] = React.useState() \r\n    const [GraficoCE_Total, setGraficoCE_Total] = React.useState() \r\n    \r\n    let [responseGraficoRAC_Total, setresponseGraficoRAC_Total] = React.useState({})\r\n    let [responseGraficoRAC_Aves, setresponseGraficoRAC_Aves] = React.useState({})\r\n    let [responseGraficoRAC_Suinos, setresponseGraficoRAC_Suinos] = React.useState({})\r\n    let [responseGraficoRAC_Preparados, setresponseGraficoRAC_Preparados] = React.useState({})\r\n    let [responseGraficoRAC_Outros, setresponseGraficoRAC_Outros] = React.useState({})\r\n    let [responseGraficoNNCMP_Total, setresponseGraficoNNCMP_Total] = React.useState({})\r\n    let [responseGraficoNNCLog_Total, setresponseGraficoNNCLog_Total] = React.useState({})\r\n    let [responseGraficoCE_Total, setresponseGraficoCE_Total] = React.useState({})\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        //debugger\r\n        fetchData(GraficoRAC_Total, \"GraficoRAC_Total\");\r\n        fetchData(GraficoRAC_Aves, \"GraficoRAC_Aves\");\r\n        fetchData(GraficoRAC_Suinos, \"GraficoRAC_Suinos\");\r\n        fetchData(GraficoRAC_Preparados, \"GraficoRAC_Preparados\");\r\n        fetchData(GraficoRAC_Outros, \"GraficoRAC_Outros\");\r\n        fetchData(GraficoNNCMP_Total, \"GraficoNNCMP_Total\");\r\n        fetchData(GraficoNNCLog_Total, \"GraficoNNCLog_Total\");\r\n        fetchData(GraficoCE_Total, \"GraficoCE_Total\");\r\n    }, []);\r\n\r\n    const GerarGrafico = (objeto, numGrafico) => {\r\n        ////debugger\r\n        //if (selectedIndicator1 !== \"\" && selectedIndicator2 !== \"\" && selectedIndicator3 !== \"\") {\r\n            ////debugger\r\n            setIsUpdatingData(true)\r\n            let json = objeto; //GraficoRAC_Total , 2, 3.....\r\n            let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n            let groupBy = function groupBy(list, keyGetter) {\r\n                const map = new Map();\r\n                list.forEach((item) => {\r\n                    const key = keyGetter(item);\r\n                    const collection = map.get(key);\r\n                    if (!collection) {\r\n                        map.set(key, [item]);\r\n                    } else {\r\n                        collection.push(item);\r\n                    }\r\n                });\r\n                return map;\r\n            }\r\n\r\n            // let xaxis = Array.from(groupBy(json, x => x[selectedIndicator1]), ([name, value]) => ({ name, value }));\r\n            // let yaxis = Array.from(groupBy(json, x => x[selectedIndicator2]), ([name, value]) => ({ name }));\r\n\r\n            let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n            let yaxis = [{name:'Evolutivo 2020'},{name:'Evolutivo 2021'},{name:'Evolutivo Meta'},{name:'Meta'},{name:'2019'},{name:'2020'},{name: '2021'}];\r\n\r\n            // xaxis.sort(function (a, b) {\r\n            //     return parseFloat(a.name) - parseFloat(b.name);\r\n            // });\r\n\r\n            xaxis.forEach(x => {\r\n                // x['yaxis'] = Array.from(groupBy(x.value, x => x[selectedIndicator2]), ([name, value]) => ({ name, quantidade: somaX(x, name, selectedIndicator2, \"Quant\") }));\r\n                if (x.name == \"2019\"){\r\n                    x['yaxis'] = [{name: \"2019\", value: x.value[0].Valor}]\r\n                }else if (x.name == \"2020\"){\r\n                    x['yaxis'] = [{name: \"2020\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"Meta\"){\r\n                    x['yaxis'] = [{name: \"Meta\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"2021\"){\r\n                    x['yaxis'] = [{name: \"2021\", value: x.value[0].Valor}]\r\n                }else{\r\n                    x['yaxis'] = [\r\n                                    {name: \"Evolutivo 2020\", value: x.value[0].a2020},\r\n                                    {name: \"Evolutivo Meta\", value: x.value[0].aMeta},\r\n                                    {name: \"Evolutivo 2021\", value: x.value[0].a2021}\r\n                                ]\r\n                }\r\n            })\r\n\r\n            let series = []\r\n            yaxis.forEach((y, index) => {\r\n                let dataset = xaxis.map(xx => {\r\n                    let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                    if (yaxysvalue.length)\r\n                        return yaxysvalue[0].value\r\n\r\n                    return null\r\n                })\r\n\r\n                //let cor = colorsBars[Math.floor(Math.random() * colorsBars.length)]\r\n\r\n                let tipo = 'line'\r\n                let cor = '#bfbfbf'\r\n                let corLabel = '#bfbfbf'\r\n                let yAx = \"B\"\r\n                let varborderDash = [0,0]\r\n\r\n                switch (y.name){\r\n\r\n                    case \"2019\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2020\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Meta\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2021\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#cccccc\"\r\n                                    corLabel = \"#cccccc\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Evolutivo 2020\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(166, 166, 166)\"\r\n                                    corLabel = \"rgb(166, 166, 166)\"\r\n                                    varborderDash = [10,5]\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo Meta\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo 2021\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(89,89,89)\"\r\n                                    corLabel = \"rgb(89,89,89)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                                 \r\n                    default:\r\n                                    break\r\n\r\n\r\n                }\r\n\r\n                let serie = {\r\n                    type: tipo,\r\n                    yAxisID: yAx,\r\n                    label: y.name,\r\n                    backgroundColor: cor,\r\n                    fill: false,\r\n                    borderColor: cor,\r\n                    borderWidth: 2,\r\n                    pointRadius: 5,\r\n                    pointBackgroundColor: \"transparent\",\r\n                    pointBorderColor: \"transparent\",\r\n                    borderDash: varborderDash, \r\n                    data: dataset,\r\n                    datalabels: {\r\n                    \r\n                        align: \"top\",\r\n                        anchor: \"end\",\r\n                        offset: 10,\r\n                        padding: -2,\r\n                        color: corLabel,\r\n                        //clip: true,\r\n                        font: {\r\n                            size: \"10\",\r\n                        },\r\n                        \r\n                    }\r\n                     \r\n                }\r\n                series.push(serie)\r\n            })\r\n\r\n            let seriesAdd = []\r\n            \r\n                series.filter(s => s.label != null).forEach(element => {\r\n                    seriesAdd.push(element)\r\n                });\r\n           \r\n\r\n            const dashboardData = {\r\n                labels: xaxis.map(r => r.name),\r\n                datasets: seriesAdd,\r\n                indicators\r\n                \r\n            };\r\n            //debugger\r\n            switch (numGrafico){\r\n                case \"GraficoRAC_Total\":\r\n                    setresponseGraficoRAC_Total(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Aves\":\r\n                    setresponseGraficoRAC_Aves(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Suinos\":\r\n                    setresponseGraficoRAC_Suinos(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Preparados\":\r\n                    setresponseGraficoRAC_Preparados(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Outros\":\r\n                    setresponseGraficoRAC_Outros(dashboardData)\r\n                    break\r\n                case \"GraficoNNCMP_Total\":\r\n                    setresponseGraficoNNCMP_Total(dashboardData)\r\n                    break\r\n                case \"GraficoNNCLog_Total\":\r\n                    setresponseGraficoNNCLog_Total(dashboardData)\r\n                    break\r\n                case \"GraficoCE_Total\":\r\n                    setresponseGraficoCE_Total(dashboardData)\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n\r\n            setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableColGroupDemo = () => {\r\n\r\n        if (!GraficoRAC_Total) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < GraficoRAC_Total.length; i++) {\r\n            json.push(GraficoRAC_Total[i])\r\n        }\r\n\r\n        const sales = json\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={sales} sortMode=\"multiple\">\r\n                        <Column field=\"Periodo\" header=\"Período\" sortable></Column>\r\n                        <Column field=\"Valor\" header=\"Nº RAC Histórico\" sortable ></Column>\r\n                        <Column field=\"a2020\" header=\"Nº RAC 2020 Mensal\" sortable></Column>\r\n                        <Column field=\"aMeta\" header=\"Nº RAC Meta Mensal\" sortable></Column>\r\n                        <Column field=\"a2021\" header=\"Nº RAC 2021 Mensal\" sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    function aplicar() {\r\n        //debugger\r\n        GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n        GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n        GerarGrafico(GraficoRAC_Suinos, \"GraficoRAC_Suinos\")\r\n        GerarGrafico(GraficoRAC_Preparados, \"GraficoRAC_Preparados\")\r\n        GerarGrafico(GraficoRAC_Outros, \"GraficoRAC_Outros\")\r\n        GerarGrafico(GraficoNNCMP_Total, \"GraficoNNCMP_Total\")\r\n        GerarGrafico(GraficoNNCLog_Total, \"GraficoNNCLog_Total\")\r\n        GerarGrafico(GraficoCE_Total, \"GraficoCE_Total\")\r\n    }\r\n\r\n    const fetchData = (objeto, numGrafico) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n            let json = JSON.parse(response.data)\r\n            setTableRacME(json)\r\n        })\r\n\r\n        if(numGrafico == \"GraficoRAC_Total\"){\r\n            //debugger\r\n            let parametros = ['where 1=1']\r\n            api.getSearaBaseRacCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Total(json)\r\n\r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n        }else if (numGrafico == \"GraficoRAC_Aves\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'AVES\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Aves(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Aves(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Suinos\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'SUÍ\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Suinos(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Suinos(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Preparados\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'Preparados\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Preparados(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Preparados(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Outros\"){\r\n            //debugger\r\n            let parametros = ['WHERE Negócio=\\'OUTROS\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Outros(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Outros(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCMP_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCMP_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCMP_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCLog_Total\"){\r\n            \r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCLog_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCLog_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoCE_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE    Negócio =\\'AVES LEVELS\\' ']\r\n            api.getSearaBaseCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoCE_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoCE_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Puxando dados da RAC</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div> \r\n            <Row>\r\n                <Col lg={12}>\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                KPI - RCA\r\n                                    <br />\r\n                                <small>Descrição do KPI</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={fetchData}>Atualizar</button>\r\n                                </div>  \r\n\r\n                                <Pdf targetRef={ref} filename=\"rac.pdf\" options={options} x={1} scale={0.8}>\r\n                                    {({toPdf}) => (\r\n                                        <button onClick={toPdf}>Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* Botão aplicar */}\r\n            {isUpdatingData ? (<div> </div>) : (\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px' }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar}>Aplicar</button>\r\n                </Row>\r\n            )}\r\n\r\n            \r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-5 col-12 \">\r\n                        <h1>Relatório de Atendimento ao Consumidor (RAC)</h1>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total Habilitador\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total RAC\" subTitle=\"RA\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Total} options={lightOptions}/>\r\n                            </Card>\r\n                        )}\r\n  \r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                                \r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total NNC Matéria-Prima\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Aves\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Aves} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Suínos\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Suinos} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Preparados\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Preparados} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Outros\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Outros} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {/* mercado externo */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Corpos estranhos\" subTitle=\"Corpo Estranho\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            \r\n                                DataTableRACME()\r\n                            \r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                {/* mercado interno */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Matérial Prima\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                    </Col>\r\n\r\n                </Row>   \r\n\r\n                {/* atendimento comercial */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Log\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCLog_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        \r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                        \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js",["431"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   //baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://localhost/KPISeara/APISeara/PainelKPIAdm\"\r\n    baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/login`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js",["432","433","434"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    SelectRole: \"Select a role\",\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    EditPassword: \"Edit password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    EditAccount: \"Edit Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Edit Account\"\r\n}\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass EditUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: false,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        const user = this.fetchData(id);\r\n    }\r\n\r\n    fetchData = id => {\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        Api.getOne(id).then(r => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n\r\n            if (r.data === \"null\")\r\n                window.location.href = `${window.location.origin}/404`;\r\n\r\n            return JSON.parse(r.data);\r\n        }).then(user => {\r\n            this.setState({\r\n                id: user.Id,\r\n                username: user.Username,\r\n                email: user.Email,\r\n                arr: [ //claims\r\n                    { id: 1, value: \"Read\", isChecked: true },\r\n                    { id: 2, value: \"Write\", isChecked: false },\r\n                ],\r\n                enableSubmit: true,\r\n                showProgressbar: false\r\n            })\r\n\r\n            const userRoles = JSON.parse(user.Roles)\r\n\r\n            if (userRoles.length)\r\n                this.setState({ Role: userRoles[0].Role })\r\n\r\n            userRoles.forEach(role => {\r\n                role.Claims.forEach(claim => {\r\n\r\n                    let arrCopy = this.state.arr\r\n                    arrCopy.forEach(item => {\r\n                        if (item.value.toLowerCase() === claim.toLowerCase())\r\n                            item.isChecked = true\r\n                    })\r\n                    this.setState({ arr: arrCopy })\r\n\r\n                });\r\n            });\r\n\r\n        }).catch(e => {\r\n            if (e?.response?.status === 401 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, e.response.Message)\r\n\r\n            } if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message, \"\")\r\n            } else {\r\n\r\n            }\r\n        }).finally(() => {\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"Id\"] = this.state.id\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.put(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.EditAccount}\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(EditUserJxs);\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js",["435"],"import React from 'react';\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Password } from 'primereact/password';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    CreatePassword: \"Create password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    CreateAccount: \"Create Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Create Account\"\r\n}\r\n\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass CreateUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: true,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"password\"] = this.state.password\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.post(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const passwordOk = this.state.password.length > 0;\r\n        const passwordConfirmOk = this.state.passwordConfirm.length > 0 && (this.state.password === this.state.passwordConfirm);\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && passwordOk\r\n            && passwordConfirmOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {/* SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"password\"\r\n                            placeholder={registerTexts.CreatePassword}\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    {/* CONFIRMAR SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordConfirmOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"passwordConfirm\"\r\n                            placeholder={registerTexts.RepeatPassword}\r\n                            value={this.state.passwordConfirm}\r\n                            onChange={this.handleInputChange}\r\n                            feedback={false}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.CreateAccount}\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center\">{registerTexts.HaveAnAccount} <a href=\"\">{registerTexts.LogIn}</a> </p>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst CreateUser = () => {\r\n    return <CreateUserJxs />\r\n};\r\n\r\nexport default CreateUser;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js",["436"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n    //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n    //baseURL: \"http://localhost/SearaDashboard\"\r\n    //baseURL: \"http://localhost/KPISeara/APISeara/PainelKPIAdm\"\r\n    baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    getOne: (id) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users?userId=${id}`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    get: () =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/create-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    put: (user) =>\r\n        instance({\r\n            method: \"PUT\",\r\n            url: `/edit-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js",["437"],"const testeSQLPivotRollup = [\"\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"[Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", count(Rac_rac) as [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #RESULTADO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUPING(B.Mercado) U\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Tipo do Problema]) T\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Manifestante]) M\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.Mercado as Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([Nº RAC]) [Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WITH ROLLUP\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT DISTINCT B.U, B.T, B.M, ISNULL(B.Mercado1,'Total') as Mercado1, ISNULL(B.[Tipo do Problema],'Total') as [Tipo do Problema], ISNULL(B.Manifestante,'Total') as Manifestante,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"b.[Nº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", U.[Nº RAC] Mercado_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", T.[Nº RAC] TipoProblema_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", M.[Nº RAC] Manifestante_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'<b>Total</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE '<b>'+B.Mercado1+'</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE '@@.....'+B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE '..........'+B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'Total'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE B.Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tINTO #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #BASE B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #Mercado U ON B.Mercado1 = U.Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #TIPOPROBLEMA T ON B.Mercado1 = T.Mercado AND B.[Tipo do Problema] = T.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #MANIFESTANTE M ON B.Mercado1 = M.Mercado AND B.[Tipo do Problema] = M.[Tipo do Problema] AND B.[Manifestante] = M.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             'Total' as [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND [Tipo_Atendimento_rac] in (  'RECLAMAÇÃO',  'RECLAMAÇÃO ABUSO PROD.',  'RECLAMAÇÃO FAB. NÃO IDENTIF.',  'RECLAMAÇÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÇÃO',  'Reincidência',  'RECLAMAÇÃO FFO',  'RECLAMAÇÃO ABUSO DE PRODUTO',  'RECLAMAÇÃO VOSSKO',  'Reclamação Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr1 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1 ='select * into #gabriel1 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], Nm_Manifestante_rac as [Manifestante], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [Nm_Manifestante_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] AND T.[Manifestante] = PT.[Manifestante] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema], ''Total''as [Manifestante],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr2 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2 ='select * into #gabriel2 from ( SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado,  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr3 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3 ='select * into #gabriel3 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÇÃO'',  ''RECLAMAÇÃO ABUSO PROD.'',  ''RECLAMAÇÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÇÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÇÃO'',  ''Reincidência'',  ''RECLAMAÇÃO FFO'',  ''RECLAMAÇÃO ABUSO DE PRODUTO'',  ''RECLAMAÇÃO VOSSKO'',  ''Reclamação Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t SET @SQLStr = @SQLStr1 + ' ' + @SQLStr2 + ' ' + @SQLStr3 + ' ' + \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT * INTO #TTTT FROM  ((select * from #gabriel1) union all (select * from #gabriel2) union all (select * from #gabriel3)) FF  '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT distinct * FROM #NIVEIS N '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' LEFT JOIN #TTTT T1 ON T1.Mercado = N.Mercado1 AND T1.[Tipo do Problema] = N.[Tipo do Problema] AND T1.Manifestante = N.Manifestante ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6 '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DROP TABLE #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tDROP TABLE #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n];","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\PageTeste.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155"],"//#region Imports\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport ReactDOM from 'react-dom'; \r\nimport $ from 'jquery';\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions, optionsComparativo } from '../domain/constants';\r\n\r\nimport {testeSQLPivotRollup} from '../domain/sql';\r\n\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nimport { LineWeight } from '@material-ui/icons';\r\n\r\nimport Funcao from \"./funcoes\"\r\n\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [1200, 56000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done “npm i cors --save-dev”\r\n\r\n//#endregion\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const [estaRodandoAplicar, setEstaRodandoAplicar] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n    const canvasRef = React.useRef();\r\n \r\n    \r\n    var numeroChamados = [false,false,false,false]  \r\n        \r\n        \r\n    const percorreNumeroChamados = () => {\r\n        \r\n        // \r\n        for (var i = 0; i < numeroChamados.length; i++) {\r\n            if (numeroChamados[i] == false) {\r\n                return false\r\n            }else{\r\n                console.log(\"Terminou!\")\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    let [backgroundGradient, SetBackgroundGradient] = React.useState();\r\n    let [backgroundGradientCinza, SetBackgroundGradientCinza] = React.useState();\r\n\r\n    //chamadas\r\n    let [responseGraficoCETotal, setresponseGraficoCETotal] = React.useState({})\r\n    let [GraficoCETotal, setGraficoCETotal] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE] = React.useState({})\r\n    let [GraficoNNCMPTotalCE, setGraficoNNCMPTotalCE] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCE, setresponseGraficoRACTotalCE] = React.useState({})\r\n    let [GraficoRACTotalCE, setGraficoRACTotalCE] = React.useState()\r\n\r\n    let [responseGraficoRAC, setresponseGraficoRAC] = React.useState({})\r\n    let [GraficoRAC, setGraficoRAC] = React.useState()\r\n\r\n    let [responseGraficoNCCMP, setresponseGraficoNCCMP] = React.useState({})\r\n    let [GraficoNCCMP, setGraficoNCCMP] = React.useState()\r\n\r\n    //Aves pesadas RAC\r\n    let [responseGraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas] = React.useState({})\r\n    let [GraficoCETotalAvesPesadas, setGraficoCETotalAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadas, setGraficoNNCMPTotalCEAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadas, setGraficoRACTotalCEAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas] = React.useState({})\r\n    let [GraficoRACAvesPesadas, setGraficoRACAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadas, setGraficoNCCMPAvesPesadas] = React.useState()\r\n\r\n    //Aves pesadas PR RAC\r\n    let [responseGraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasPR, setGraficoCETotalAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasPR, setGraficoNNCMPTotalCEAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasPR, setGraficoRACTotalCEAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACAvesPesadasPR, setGraficoRACAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasPR, setGraficoNCCMPAvesPesadasPR] = React.useState()\r\n\r\n    //Aves pesadas SP/CO/NE RAC\r\n    let [responseGraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasSP, setGraficoCETotalAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasSP, setGraficoNNCMPTotalCEAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasSP, setGraficoRACTotalCEAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACAvesPesadasSP, setGraficoRACAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasSP, setGraficoNCCMPAvesPesadasSP] = React.useState()\r\n\r\n    //Aves pesadas RS/SC/SP RAC\r\n    let [responseGraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasRS, setGraficoCETotalAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasRS, setGraficoNNCMPTotalCEAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasRS, setGraficoRACTotalCEAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACAvesPesadasRS, setGraficoRACAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasRS, setGraficoNCCMPAvesPesadasRS] = React.useState()\r\n\r\n    //Aves Leves RAC\r\n    let [responseGraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves] = React.useState({})\r\n    let [GraficoCETotalAvesLeves, setGraficoCETotalAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesLeves, setGraficoNNCMPTotalCEAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves] = React.useState({})\r\n    let [GraficoRACTotalCEAvesLeves, setGraficoRACTotalCEAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACAvesLeves, setresponseGraficoRACAvesLeves] = React.useState({})\r\n    let [GraficoRACAvesLeves, setGraficoRACAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves] = React.useState({})\r\n    let [GraficoNCCMPAvesLeves, setGraficoNCCMPAvesLeves] = React.useState()\r\n\r\n    //Suínos RAC\r\n    let [responseGraficoCETotalSuinos, setresponseGraficoCETotalSuinos] = React.useState({})\r\n    let [GraficoCETotalSuinos, setGraficoCETotalSuinos] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos] = React.useState({})\r\n    let [GraficoNNCMPTotalCESuinos, setGraficoNNCMPTotalCESuinos] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos] = React.useState({})\r\n    let [GraficoRACTotalCESuinos, setGraficoRACTotalCESuinos] = React.useState()\r\n\r\n    let [responseGraficoRACSuinos, setresponseGraficoRACSuinos] = React.useState({})\r\n    let [GraficoRACSuinos, setGraficoRACSuinos] = React.useState()\r\n\r\n    let [responseGraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos] = React.useState({})\r\n    let [GraficoNCCMPSuinos, setGraficoNCCMPSuinos] = React.useState()\r\n\r\n    //Preparados RAC\r\n    let [responseGraficoCETotalPreparados, setresponseGraficoCETotalPreparados] = React.useState({})\r\n    let [GraficoCETotalPreparados, setGraficoCETotalPreparados] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados] = React.useState({})\r\n    let [GraficoNNCMPTotalCEPreparados, setGraficoNNCMPTotalCEPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados] = React.useState({})\r\n    let [GraficoRACTotalCEPreparados, setGraficoRACTotalCEPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACPreparados, setresponseGraficoRACPreparados] = React.useState({})\r\n    let [GraficoRACPreparados, setGraficoRACPreparados] = React.useState()\r\n\r\n    let [responseGraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados] = React.useState({})\r\n    let [GraficoNCCMPPreparados, setGraficoNCCMPPreparados] = React.useState()\r\n\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadas, setGraficoRACUnidadesAvesPesadas] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadas, setGraficoRACProblemasAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasPR, setGraficoRACUnidadesAvesPesadasPR] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasPR, setGraficoRACProblemasAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasSP, setGraficoRACUnidadesAvesPesadasSP] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasSP, setGraficoRACProblemasAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasRS, setGraficoRACUnidadesAvesPesadasRS] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasRS, setGraficoRACProblemasAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves] = React.useState({})\r\n    let [GraficoRACUnidadesAvesLeves, setGraficoRACUnidadesAvesLeves] = React.useState()\r\n    let [responseGraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves] = React.useState({})\r\n    let [GraficoRACProblemasAvesLeves, setGraficoRACProblemasAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos] = React.useState({})\r\n    let [GraficoRACUnidadesSuinos, setGraficoRACUnidadesSuinos] = React.useState()\r\n    let [responseGraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos] = React.useState({})\r\n    let [GraficoRACProblemasSuinos, setGraficoRACProblemasSuinos] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados] = React.useState({})\r\n    let [GraficoRACUnidadesPreparados, setGraficoRACUnidadesPreparados] = React.useState()\r\n    let [responseGraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados] = React.useState({})\r\n    let [GraficoRACProblemasPreparados, setGraficoRACProblemasPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACME, setresponseGraficoRACME] = React.useState({})\r\n    let [GraficoRACME, setGraficoRACME] = React.useState()\r\n\r\n    let [TableRACAberturaME, setTableRacAberturaME] = React.useState()\r\n\r\n    let [responseGraficoRACMI, setresponseGraficoRACMI] = React.useState({})\r\n    let [GraficoRACMI, setGraficoRACMI] = React.useState()\r\n\r\n    let [TableRacAberturaMEOrienteMedio, setTableRacAberturaMEOrienteMedio] = React.useState()\r\n    let [TableRacAberturaMEEuropa, setTableRacAberturaMEEuropa] = React.useState()\r\n    let [TableRacAberturaMEJapao, setTableRacAberturaMEJapao] = React.useState()\r\n\r\n    let [TableRacAberturaMEAsia, setTableRacAberturaMEAsia] = React.useState()\r\n    let [TableRacAberturaMEAmericasAfrica, setTableRacAberturaMEAmericasAfrica] = React.useState()\r\n    let [TableRacAberturaMEContasGlobais, setTableRacAberturaMEContasGlobais] = React.useState()\r\n\r\n    let [TableRacAberturaLinhaEspecialFamilia, setTableRacAberturaLinhaEspecialFamilia] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoGourmet, setTableRacAberturaLinhaEspecialAcumuladoGourmet] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoIncrivel, setTableRacAberturaLinhaEspecialAcumuladoIncrivel] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoNature, setTableRacAberturaLinhaEspecialAcumuladoNature] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoRotisserie, setTableRacAberturaLinhaEspecialAcumuladoRotisserie] = React.useState()\r\n\r\n    let [responseTable, setresponseTable] = React.useState({})\r\n    let [TableRacME, setTableRacME] = React.useState()\r\n\r\n    let [TableRacFinalME, setTableRacFinalME] = React.useState() //ME\r\n    let [TableRacFinalMI, setTableRacFinalMI] = React.useState() //MI\r\n    let [TableRacFinalRECL, setTableRacFinalRECL] = React.useState() //RECLAMAÇÕES ESPECIAIS\r\n    let [TableRacFinalPDV, setTableRacFinalPDV] = React.useState() //PDV ABERTURA\r\n    let [TableRacFinalTE, setTableRacFinalTE] = React.useState() //ABERTURA TERCEIROS\r\n    let [TableRacFinalCRIT, setTableRacFinalCRIT] = React.useState() //CRITICOS\r\n\r\n    //FFO\r\n    let [responseGraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO] = React.useState({})\r\n    let [GraficoRACDetalhesFFO, setGraficoRACDetalhesFFO] = React.useState()\r\n\r\n    //Atendimento Comercial\r\n    let [responseGraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC] = React.useState({})\r\n    let [GraficoRACDetalhesAC, setGraficoRACDetalhesAC] = React.useState()\r\n\r\n    //Logística Exportação\r\n    let [responseGraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME] = React.useState({})\r\n    let [GraficoRACDetalhesLogME, setGraficoRACDetalhesLogME] = React.useState()\r\n\r\n    //Logística Importação\r\n    let [responseGraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI] = React.useState({})\r\n    let [GraficoRACDetalhesLogMI, setGraficoRACDetalhesLogMI] = React.useState()\r\n\r\n    //Documentação\r\n    let [responseGraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc] = React.useState({})\r\n    let [GraficoRACDetalhesDoc, setGraficoRACDetalhesDoc] = React.useState()\r\n\r\n    //Transporte Terrestre\r\n    let [responseGraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT] = React.useState({})\r\n    let [GraficoRACDetalhesTT, setGraficoRACDetalhesTT] = React.useState()\r\n\r\n    //Produção em Terceiro (ex. Massatake)\r\n    let [responseGraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro] = React.useState({})\r\n    let [GraficoRACDetalhesTerceiro, setGraficoRACDetalhesTerceiro] = React.useState()\r\n\r\n    let [TableRacRACDetalhesTerceiro, setTableRacRACDetalhesTerceiro] = React.useState() //ABERTURA TERCEIROS\r\n\r\n    //Massatake\r\n    let [responseGraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake] = React.useState({})\r\n    let [GraficoRACDetalhesMassatake, setGraficoRACDetalhesMassatake] = React.useState()\r\n\r\n    //PDV\r\n    let [responseGraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV] = React.useState({})\r\n    let [GraficoRACDetalhesPDV, setGraficoRACDetalhesPDV] = React.useState()\r\n\r\n    let [responseGraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV] = React.useState({})\r\n    let [GraficoRACDetalhesAberturaPDV, setGraficoRACDetalhesAberturaPDV] = React.useState()\r\n\r\n    let [TableRacRACDetalhesPDV, setTableRacRACDetalhesPDV] = React.useState() //ABERTURA PDV\r\n\r\n    //RAC Crítica\r\n    let [responseGraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica] = React.useState({})\r\n    let [GraficoRACDetalhesCritica, setGraficoRACDetalhesCritica] = React.useState()\r\n\r\n    let [TableRacRACDetalhesCritica, setTableRacRACDetalhesCritica] = React.useState() //ABERTURA Critica\r\n\r\n    //RAC Evolução - Totais\r\n    let [TableRacRACDetalhesEvolucaoTotal, setTableRacRACDetalhesEvolucaoTotal] = React.useState() \r\n\r\n    //RAC Evolução - Aves\r\n    let [TableRacRACDetalhesEvolucaoAves, setTableRacRACDetalhesEvolucaoAves] = React.useState()\r\n\r\n    let [TableRacLarva, setTableRacLarva] = React.useState()\r\n    let [TableRacIntoxicacao, setTableRacIntoxicacao] = React.useState()\r\n    let [TableRacMetal, setTableRacMetal] = React.useState()\r\n    let [TableRacPlastico, setTableRacPlastico] = React.useState()\r\n    let [TableRacCabelo, setTableRacCabelo] = React.useState()\r\n    let [TableRacInseto, setTableRacInseto] = React.useState()\r\n\r\n    //RAC Meta x Real Aves\r\n    let [TableRacRACDetalhesMetaRealAves, setTableRacRACDetalhesMetaRealAves] = React.useState()\r\n\r\n    //RAC Evolução - Preparados\r\n    let [TableRacRACDetalhesEvolucaoPreparados, setTableRacRACDetalhesEvolucaoPreparados] = React.useState()\r\n\r\n    //RAC Evolução - Fatiados\r\n    let [TableRacRACDetalhesEvolucaoFatiados, setTableRacRACDetalhesEvolucaoFatiados] = React.useState()\r\n\r\n    //RAC Evolução - Pescados\r\n    let [TableRacRACDetalhesEvolucaoPescados, setTableRacRACDetalhesEvolucaoPescados] = React.useState()\r\n\r\n    //RAC Meta x Real Preparados\r\n    let [TableRacRACDetalhesMetaRealPreparados, setTableRacRACDetalhesMetaRealPreparados] = React.useState()\r\n\r\n    //RAC Evolução - Suínos\r\n    let [TableRacRACDetalhesEvolucaoSuinos, setTableRacRACDetalhesEvolucaoSuinos] = React.useState()\r\n\r\n    //RAC Meta x Real Suínos\r\n    let [TableRacRACDetalhesMetaRealSuinos, setTableRacRACDetalhesMetaRealSuinos] = React.useState()\r\n\r\n    //RAC Linhas Especiais (Seara Nature, Gourmet, Incrível)\r\n    let [responseGraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais] = React.useState({})\r\n    let [GraficoRACDetalhesEspeciais, setGraficoRACDetalhesEspeciais] = React.useState()\r\n\r\n    let [TableRacRACDetalhesEspeciaisFamilia, setTableRacRACDetalhesEspeciaisFamilia] = React.useState() //ABERTURA Especiais Familia\r\n    let [TableRacRACDetalhesEspeciaisAcumulado, setTableRacRACDetalhesEspeciaisAcumulado] = React.useState() //ABERTURA Especiais Acumulado\r\n\r\n    //RAC Corpo Estanho - [Totais]\r\n    let [responseGraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE] = React.useState({})\r\n    let [GraficoRACDetalhesCE, setGraficoRACDetalhesCE] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [Inerente]\r\n    let [responseGraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente] = React.useState({})\r\n    let [GraficoRACDetalhesCEInerente, setGraficoRACDetalhesCEInerente] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [Não Inerente]\r\n    let [responseGraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente] = React.useState({})\r\n    let [GraficoRACDetalhesCENaoInerente, setGraficoRACDetalhesCENaoInerente] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [Plástico]\r\n    let [responseGraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico] = React.useState({})\r\n    let [GraficoRACDetalhesCEPlastico, setGraficoRACDetalhesCEPlastico] = React.useState()\r\n\r\n    //RAC Inseto\r\n    let [responseGraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto] = React.useState({})\r\n    let [GraficoRACDetalhesInseto, setGraficoRACDetalhesInseto] = React.useState()\r\n\r\n    let [TableRacRACDetalhesInseto, setTableRacRACDetalhesInseto] = React.useState() //ABERTURA Insetos\r\n\r\n    //RAC Cabelo\r\n    let [responseGraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo] = React.useState({})\r\n    let [GraficoRACDetalhesCabelo, setGraficoRACDetalhesCabelo] = React.useState()\r\n\r\n    let [TableRacRACDetalhesCabelo, setTableRacRACDetalhesCabelo] = React.useState() //ABERTURA Cabelo\r\n\r\n    //RAC Plastico\r\n    let [responseGraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico] = React.useState({})\r\n    let [GraficoRACDetalhesPlastico, setGraficoRACDetalhesPlastico] = React.useState()\r\n\r\n    let [TableRacRACDetalhesPlastico, setTableRacRACDetalhesPlastico] = React.useState() //ABERTURA Plastico\r\n\r\n    //RAC Metal\r\n    let [responseGraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal] = React.useState({})\r\n    let [GraficoRACDetalhesMetal, setGraficoRACDetalhesMetal] = React.useState()\r\n\r\n    let [TableRacRACDetalhesMetal, setTableRacRACDetalhesMetal] = React.useState() //ABERTURA Metal\r\n\r\n    //RAC Intoxicação\r\n    let [responseGraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao] = React.useState({})\r\n    let [GraficoRACDetalhesIntoxicacao, setGraficoRACDetalhesIntoxicacao] = React.useState()\r\n\r\n    let [TableRacRACDetalhesIntoxicacao, setTableRacRACDetalhesIntoxicacao] = React.useState() //ABERTURA Intoxicacao\r\n\r\n    //RAC Larva\r\n    let [responseGraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva] = React.useState({})\r\n    let [GraficoRACDetalhesLarva, setGraficoRACDetalhesLarva] = React.useState()\r\n\r\n    let [TableRacRACDetalhesLarva, setTableRacRACDetalhesLarva] = React.useState() //ABERTURA Larva\r\n\r\n    //tabela Corpos Estranhos\r\n    let [TableRacRACDetalhesCE, setTableRacRACDetalhesCE] = React.useState() //ABERTURA CE\r\n\r\n    //tabela Corpos Estranhos Inerente\r\n    let [TableRacRACDetalhesCEInerente, setTableRacRACDetalhesCEInerente] = React.useState() //ABERTURA CE Inerente\r\n\r\n    //tabela Corpos Estranhos Não Inerente\r\n    let [TableRacRACDetalhesCENaoInerente, setTableRacRACDetalhesCENaoInerente] = React.useState() //ABERTURA CE Nao Inerente\r\n\r\n    //tabela Corpos Estranhos Inerente e Não inerente\r\n    let [TableRacRACDetalhesCEInerenteNaoInerente, setTableRacRACDetalhesCEInerenteNaoInerente] = React.useState() //ABERTURA CE Inerente e Nao Inerente\r\n\r\n    //tabela Habilitador Corpos Estranhos Não Inerentes\r\n    let [TableRacRACDetalhesHBCENaoInerente, setTableRacRACDetalhesHBCENaoInerente] = React.useState() //ABERTURA Habilidador CE Nao Inerente\r\n\r\n    //tabela RAC D-3 In Natura\r\n    let [TableRacRACD3InNatura, setTableRacRACD3InNatura] = React.useState() //ABERTURA D-3 InNatura\r\n\r\n    //tabela RAC D-3 Preparados\r\n    let [TableRacRACD3Preparados, setTableRacRACD3Preparados] = React.useState() //ABERTURA D-3 Preparados\r\n\r\n    //tabela RAC D-0 In Natura\r\n    let [TableRacRACD0InNatura, setTableRacRACD0InNatura] = React.useState() //ABERTURA D-0 InNatura\r\n\r\n    //tabela RAC D-0 Preparados\r\n    let [TableRacRACD0Preparados, setTableRacRACD0Preparados] = React.useState() //ABERTURA D-0 Preparados\r\n\r\n    //NNC LOG Total\r\n    let [responseGraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal] = React.useState({})\r\n    let [GraficoNNCLogDetalhesTotal, setGraficoNNCLogDetalhesTotal] = React.useState()\r\n\r\n    //NNC LOG Aves\r\n    let [responseGraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves] = React.useState({})\r\n    let [GraficoNNCLogDetalhesAves, setGraficoNNCLogDetalhesAves] = React.useState()\r\n\r\n    //NNC LOG Preparados\r\n    let [responseGraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados] = React.useState({})\r\n    let [GraficoNNCLogDetalhesPreparados, setGraficoNNCLogDetalhesPreparados] = React.useState()\r\n\r\n    //NNC LOG Suinos\r\n    let [responseGraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos] = React.useState({})\r\n    let [GraficoNNCLogDetalhesSuinos, setGraficoNNCLogDetalhesSuinos] = React.useState()\r\n\r\n    //tabela NNC Log Evolução\r\n    let [TableNNCLogEvolucao, setTableNNCLogEvolucao] = React.useState() \r\n\r\n    //tabela NNC Log D-3 \r\n    let [TableNNCLogD3, setTableNNCLogD3] = React.useState() \r\n    //tabela NNC Log D-0 \r\n    let [TableNNCLogD0, setTableNNCLogD0] = React.useState()\r\n\r\n    //tabela NNC Totais \r\n    let [TableNNCTotais, setTableNNCTotais] = React.useState()\r\n\r\n    //tabela NNC Evolução dia \r\n    let [TableNNCEvolucaoDia, setTableNNCEvolucaoDia] = React.useState()\r\n\r\n    let [TableNNCEvolucaoMes, setTableNNCEvolucaoMes] = React.useState()\r\n\r\n    let [TableNNCEvolucaoMesTotais, setTableNNCEvolucaoMesTotais] = React.useState()\r\n\r\n    //NNC\r\n    let [responseGraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas] = React.useState({})\r\n    let [GraficoNNCAvesPesadas, setGraficoNNCAvesPesadas] = React.useState()\r\n    let [responseGraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades] = React.useState({})\r\n    let [GraficoNNCAvesPesadasUnidades, setGraficoNNCAvesPesadasUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas] = React.useState({})\r\n    let [GraficoNNCAvesPesadasProblemas, setGraficoNNCAvesPesadasProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesRS, setresponseGraficoNNCAvesRS] = React.useState({})\r\n    let [GraficoNNCAvesRS, setGraficoNNCAvesRS] = React.useState()\r\n    let [responseGraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades] = React.useState({})\r\n    let [GraficoNNCAvesRSUnidades, setGraficoNNCAvesRSUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas] = React.useState({})\r\n    let [GraficoNNCAvesRSProblemas, setGraficoNNCAvesRSProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesSP, setresponseGraficoNNCAvesSP] = React.useState({})\r\n    let [GraficoNNCAvesSP, setGraficoNNCAvesSP] = React.useState()\r\n    let [responseGraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades] = React.useState({})\r\n    let [GraficoNNCAvesSPUnidades, setGraficoNNCAvesSPUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas] = React.useState({})\r\n    let [GraficoNNCAvesSPProblemas, setGraficoNNCAvesSPProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesPR, setresponseGraficoNNCAvesPR] = React.useState({})\r\n    let [GraficoNNCAvesPR, setGraficoNNCAvesPR] = React.useState()\r\n    let [responseGraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades] = React.useState({})\r\n    let [GraficoNNCAvesPRUnidades, setGraficoNNCAvesPRUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas] = React.useState({})\r\n    let [GraficoNNCAvesPRProblemas, setGraficoNNCAvesPRProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves] = React.useState({})\r\n    let [GraficoNNCAvesLeves, setGraficoNNCAvesLeves] = React.useState()\r\n    let [responseGraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades] = React.useState({})\r\n    let [GraficoNNCAvesLevesUnidades, setGraficoNNCAvesLevesUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas] = React.useState({})\r\n    let [GraficoNNCAvesLevesProblemas, setGraficoNNCAvesLevesProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCSuinos, setresponseGraficoNNCSuinos] = React.useState({})\r\n    let [GraficoNNCSuinos, setGraficoNNCSuinos] = React.useState()\r\n    let [responseGraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades] = React.useState({})\r\n    let [GraficoNNCSuinosUnidades, setGraficoNNCSuinosUnidades] = React.useState()\r\n    let [responseGraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas] = React.useState({})\r\n    let [GraficoNNCSuinosProblemas, setGraficoNNCSuinosProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCPreparados, setresponseGraficoNNCPreparados] = React.useState({})\r\n    let [GraficoNNCPreparados, setGraficoNNCPreparados] = React.useState()\r\n    let [responseGraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades] = React.useState({})\r\n    let [GraficoNNCPreparadosUnidades, setGraficoNNCPreparadosUnidades] = React.useState()\r\n    let [responseGraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas] = React.useState({})\r\n    let [GraficoNNCPreparadosProblemas, setGraficoNNCPreparadosProblemas] = React.useState()\r\n\r\n\r\n    let [responseGraficoNNCCETotal, setresponseGraficoNNCCETotal] = React.useState({})\r\n    let [GraficoNNCCETotal, setGraficoNNCCETotal] = React.useState()\r\n\r\n    let [responseGraficoNNCCEInerente, setresponseGraficoNNCCEInerente] = React.useState({})\r\n    let [GraficoNNCCEInerente, setGraficoNNCCEInerente] = React.useState()\r\n\r\n    let [responseGraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente] = React.useState({})\r\n    let [GraficoNNCCENaoInerente, setGraficoNNCCENaoInerente] = React.useState()\r\n\r\n    let [responseGraficoNNCCEOssos, setresponseGraficoNNCCEOssos] = React.useState({})\r\n    let [GraficoNNCCEOssos, setGraficoNNCCEOssos] = React.useState()\r\n\r\n    let [responseGraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico] = React.useState({})\r\n    let [GraficoNNCCEPlastico, setGraficoNNCCEPlastico] = React.useState()\r\n\r\n    let [responseGraficoNNCCEMetal, setresponseGraficoNNCCEMetal] = React.useState({})\r\n    let [GraficoNNCCEMetal, setGraficoNNCCEMetal] = React.useState()\r\n\r\n\r\n    //tabela NNC MP D-3 In Natura\r\n    let [TableNNCMPD3InNatura, setTableNNCMPD3InNatura] = React.useState() //ABERTURA D-3 InNatura\r\n\r\n    //tabela NNC MP D-3 Preparados\r\n    let [TableNNCMPD3Preparados, setTableNNCMPD3Preparados] = React.useState() //ABERTURA D-3 Preparados\r\n\r\n    //tabela NNC MP D-0 In Natura\r\n    let [TableNNCMPD0InNatura, setTableNNCMPD0InNatura] = React.useState() //ABERTURA D-0 InNatura\r\n\r\n    //tabela NNC MP D-0 Preparados\r\n    let [TableNNCMPD0Preparados, setTableNNCMPD0Preparados] = React.useState() //ABERTURA D-0 Preparados\r\n\r\n    let [TableNNCMPCEOssos, setTableNNCMPCEOssos] = React.useState()\r\n    let [TableNNCMPCEOssosFornecedor, setTableNNCMPCEOssosFornecedor] = React.useState()\r\n    let [TableNNCMPCEOssosUnidadesReclamantes, setTableNNCMPCEOssosUnidadesReclamantes] = React.useState()\r\n\r\n    let [TableRacCorposEstranhos, setTableRacCorposEstranhos] = React.useState()\r\n    let [TableRacCorposEstranhosInerentes, setTableRacCorposEstranhosInerentes] = React.useState()\r\n    let [TableRacCorposEstranhosNaoInerentes, setTableRacCorposEstranhosNaoInerentes] = React.useState()\r\n    let [TableRacCorposEstranhosInerentesNaoInerentes, setTableRacCorposEstranhosInerentesNaoInerentes] = React.useState()\r\n\r\n\r\n    let [TableNNCCEPlastico, setTableNNCCEPlastico] = React.useState()\r\n    let [TableNNCCEMetal, setTableNNCCEMetal] = React.useState()\r\n    let [TableNNCCEOssos, setTableNNCCEOssos] = React.useState()\r\n    let [TableNNCCE, setTableNNCCE] = React.useState()\r\n    let [TableNNCCEInerenteNaoInerente, setTableNNCCEInerenteNaoInerente] = React.useState()\r\n\r\n    let [TableHabilitadorCorposEstranhosNaoInerentes, setTableHabilitadorCorposEstranhosNaoInerentes] = React.useState()\r\n\r\n\r\n    //ÍNDICE DE CONFORMIDADE \r\n    let [responseGraficoICUnidadesAves, setresponseGraficoICUnidadesAves] = React.useState({})\r\n    let [GraficoICUnidadesAves, setGraficoICUnidadesAves] = React.useState()\r\n\r\n    let [responseGraficoICIndicadoresAves, setresponseGraficoICIndicadoresAves] = React.useState({})\r\n    let [GraficoICIndicadoresAves, setGraficoICIndicadoresAves] = React.useState()\r\n\r\n    let [responseGraficoICUnidadesSuinos, setresponseGraficoICUnidadesSuinos] = React.useState({})\r\n    let [GraficoICUnidadesSuinos, setGraficoICUnidadesSuinos] = React.useState()\r\n\r\n    let [responseGraficoICIndicadoresSuinos, setresponseGraficoICIndicadoresSuinos] = React.useState({})\r\n    let [GraficoICIndicadoresSuinos, setGraficoICIndicadoresSuinos] = React.useState()\r\n\r\n    let [responseGraficoICUnidadesPreparados, setresponseGraficoICUnidadesPreparados] = React.useState({})\r\n    let [GraficoICUnidadesPreparados, setGraficoICUnidadesPreparados] = React.useState()\r\n\r\n    let [responseGraficoICIndicadoresPreparados, setresponseGraficoICIndicadoresPreparados] = React.useState({})\r\n    let [GraficoICIndicadoresPreparados, setGraficoICIndicadoresPreparados] = React.useState()\r\n    \r\n\r\n\r\n    let whereRACPreparados = \"WHERE ([Regional (Qualidade)] in ('Preparados', 'Preparados 1', 'Preparados 2', 'Itajaí', 'Fatiados') AND [Regional (Produção)] in ('Itajaí - Indus/Sui', 'Outros', 'Preparados', 'Itajaí - Indus', 'Itajaí', 'Fatiados') ) \"\r\n    whereRACPreparados += \" AND ([Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','FABRICAÇÃO')\"\r\n    whereRACPreparados += \"                                 OR [Origem da RAC] IS NULL) \"\r\n    whereRACPreparados += \" and unidade in ( \"\r\n    whereRACPreparados += \" 'Bom Retiro', \"\r\n    whereRACPreparados += \" 'Brasília',  \"\r\n    whereRACPreparados += \" 'Carambeí',  \"\r\n    whereRACPreparados += \" 'Caxias do Sul - Ana Rech',  \"\r\n    whereRACPreparados += \" 'Dourados',  \"\r\n    whereRACPreparados += \" 'Duque de Caxias',  \"\r\n    whereRACPreparados += \" 'ITAJAI INDUSTRIALIZADOS',  'ITAJAI Preparados',\"\r\n    whereRACPreparados += \" 'Itapiranga',  \"\r\n    whereRACPreparados += \" 'Jaguariúna',  \"\r\n    whereRACPreparados += \" 'Jundiaí', \"\r\n    whereRACPreparados += \" 'Lages',  \"\r\n    whereRACPreparados += \" 'Montenegro',  \"\r\n    whereRACPreparados += \" 'Osasco',  \"\r\n    whereRACPreparados += \" 'Rio Grande da Serra',  \"\r\n    whereRACPreparados += \" 'Roca Sales',  \"\r\n    whereRACPreparados += \" 'Salto Veloso',  \"\r\n    whereRACPreparados += \" 'São Gonçalo',  \"\r\n    whereRACPreparados += \" 'São Miguel do Oeste',  \"\r\n    whereRACPreparados += \" 'Seara',  \"\r\n    whereRACPreparados += \" 'Três Passos',  \"\r\n    whereRACPreparados += \" 'Fatiados',  \"\r\n    whereRACPreparados += \" 'Jaragua do Sul')  \"\r\n    whereRACPreparados += \" \"\r\n\r\n    let whereRACCE = \" WHERE Tipo = 'REAL'  \"\r\n    whereRACCE += \" AND Grupo = 'CORPO ESTRANHO' \"\r\n    whereRACCE += \" AND [Regional (Qualidade)] NOT IN ('Excelsior') \"\r\n    whereRACCE += \" AND [Tipo CE] = 'Não Inerente'  \"\r\n    whereRACCE += \" AND  [Tipo_Atendimento_rac] IN ( \"\r\n    whereRACCE += \" 'CONTATO EXCELSIOR_RAC',  \"\r\n    whereRACCE += \" 'CONTATO JBS CARNES',  \"\r\n    whereRACCE += \" 'CONTATO MERCADO DA CARNE',  \"\r\n    whereRACCE += \" 'NOTIFICAÇÃO',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO ABUSO DE PRODUTO',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO ABUSO PROD.',  \"\r\n    whereRACCE += \" 'Reclamação Contas Globais',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO FAB. NÃO IDENTIF.',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO HANS',  \"\r\n    whereRACCE += \" 'RECLAMAÇÃO VOSSKO')  \"\r\n    whereRACCE += \" AND [Origem_do_Problema_rac] IN ( \"\r\n    whereRACCE += \" 'Documentação Unidade',  \"\r\n    whereRACCE += \" 'EXPEDIÇÃO FÁBRICA',  \"\r\n    whereRACCE += \" 'FABRICAÇÃO',  \"\r\n    whereRACCE += \" 'P-D') \"\r\n\r\n    let whereNNCMP = \" WHERE ([Reg. Qual] NOT IN ('Itajaí', 'Outros')) \"\r\n    whereNNCMP += \" AND ([Grupo Problema] NOT IN ('Distr / Log', 'Embalagem Secundária') or [Grupo Problema] is null) \"\r\n    whereNNCMP += \" AND ([Entra para a Meta] <> 'Não' or [Entra para a Meta] is null) \"\r\n    \r\n    \r\n\r\n    function arrumaTabela1nivel(classTable) {\r\n//\r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n                \r\n            }\r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*@@.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🔴\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"\")\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    function arrumaTabela2niveis(classTable) {\r\n        \r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            \r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n            }\r\n            \r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*<b>.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🔴\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            \r\n            \r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"<b>\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"</b>\")\r\n\r\n            \r\n\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    function arrumaTabela3niveis(classTable) {\r\n\r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Nº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*@@.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🔴\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"🟡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"<b>\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"</b>\")\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        setIsUpdatingData(true);\r\n\r\n/*      \r\n        chamarAPI(\"CETotal\", GraficoCETotal, \"GraficoCETotal\", [' where 1=1 '], setGraficoCETotal, setresponseGraficoCETotal, 0)     // 1\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCE, \"GraficoNNCMPTotalCE\", [\" where tipo = 'NNC MP' \"], setGraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE, 1)       // 2\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCE, \"GraficoRACTotalCE\", [\" where TIPO = 'RAC' \"], setGraficoRACTotalCE, setresponseGraficoRACTotalCE, 2)     // 3\r\n        chamarAPI(\"RAC\", GraficoRAC, \"GraficoRAC\", [' where 1=1 '], setGraficoRAC, setresponseGraficoRAC, 3)    // 4\r\n        chamarAPI(\"NCCMP\", GraficoNCCMP, \"GraficoNCCMP\", [whereNNCMP], setGraficoNCCMP, setresponseGraficoNCCMP, 4)    // 5 \r\n        \r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadas, \"GraficoCETotalAvesPesadas\", [\" where [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas, 5)     // 6\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadas, \"GraficoNNCMPTotalCEAvesPesadas\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR') \"], setGraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas, 6)       // 7\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadas, \"GraficoRACTotalCEAvesPesadas\", [\" where TIPO = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas, 7)     // 8\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadas, \"GraficoRACAvesPesadas\", [\" where [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas, 8)    // 9\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadas, \"GraficoNCCMPAvesPesadas\", [whereNNCMP + \" and [Reg. Qual] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas, 9)    // 10\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasPR, \"GraficoCETotalAvesPesadasPR\", [' where [Regional Qualidade] = \\'Aves Pesadas PR\\' '], setGraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR, 10)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasPR, \"GraficoNNCMPTotalCEAvesPesadasPR\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas PR'  \"], setGraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR, 11)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasPR, \"GraficoRACTotalCEAvesPesadasPR\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas PR')   \"], setGraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR, 12)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasPR, \"GraficoRACAvesPesadasPR\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas PR') AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO')             \"], setGraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR, 13)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasPR, \"GraficoNCCMPAvesPesadasPR\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas PR\\'  '], setGraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR, 14)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasSP, \"GraficoCETotalAvesPesadasSP\", [\" where [Regional Qualidade] = 'Aves Pesadas SP/CO/NE' \"], setGraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP, 42)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasSP, \"GraficoNNCMPTotalCEAvesPesadasSP\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas SP/CO/NE'  \"], setGraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP, 43)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasSP, \"GraficoRACTotalCEAvesPesadasSP\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE')   \"], setGraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP, 44)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasSP, \"GraficoRACAvesPesadasSP\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE') AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP, 45)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasSP, \"GraficoNCCMPAvesPesadasSP\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas SP/CO/NE\\'  '], setGraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP, 46)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasRS, \"GraficoCETotalAvesPesadasRS\", [\" where [Regional Qualidade] = 'Aves Pesadas RS/SC/SP' \"], setGraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS, 47)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasRS, \"GraficoNNCMPTotalCEAvesPesadasRS\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas RS/SC/SP'  \"], setGraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS, 48)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasRS, \"GraficoRACTotalCEAvesPesadasRS\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas RS/SC/SP')   \"], setGraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS, 49)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasRS, \"GraficoRACAvesPesadasRS\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP' )  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS, 50)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasRS, \"GraficoNCCMPAvesPesadasRS\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas RS/SC/SP\\'  '], setGraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS, 51)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesLeves, \"GraficoCETotalAvesLeves\", [' where [Regional Qualidade]  = \\'Aves Leves\\' '], setGraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves, 15)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesLeves, \"GraficoNNCMPTotalCEAvesLeves\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] = \\'Aves Leves\\' \"], setGraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves, 16)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesLeves, \"GraficoRACTotalCEAvesLeves\", [\"  where tipo = 'RAC' AND [Regional Qualidade] = \\'Aves Leves\\'   \"], setGraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves, 17)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesLeves, \"GraficoRACAvesLeves\", [\" WHERE [Regional (Qualidade)] = 'Aves Leves'   AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO')  \"], setGraficoRACAvesLeves, setresponseGraficoRACAvesLeves, 18)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesLeves, \"GraficoNCCMPAvesLeves\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Leves\\'  '], setGraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves, 19)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalSuinos, \"GraficoCETotalSuinos\", [' where [Regional Qualidade]  in (\\'Suínos\\',\\'Suíno\\') '], setGraficoCETotalSuinos, setresponseGraficoCETotalSuinos, 20)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCESuinos, \"GraficoNNCMPTotalCESuinos\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] = \\'Suínos\\' \"], setGraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos, 21)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCESuinos, \"GraficoRACTotalCESuinos\", [\"  where tipo = 'RAC' AND [Regional Qualidade] = \\'Suínos\\'   \"], setGraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos, 22)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACSuinos, \"GraficoRACSuinos\", [\" WHERE [Regional (Qualidade)] in ('Suínos', 'Outros') and [Regional (Produção)] in ('Itajaí - Indus/Sui', 'SUINOS', 'Suínos') AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACSuinos, setresponseGraficoRACSuinos, 23)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPSuinos, \"GraficoNCCMPSuinos\", [whereNNCMP + ' and [Reg. Qual] = \\'Suínos\\'  '], setGraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos, 24)    // 15\r\n\r\n\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalPreparados, \"GraficoCETotalPreparados\", [' where                               [Regional Qualidade]  in (\\'Preparados\\',\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'Itajaí\\', \\'Fatiados\\') and Negócio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\') '], setGraficoCETotalPreparados, setresponseGraficoCETotalPreparados, 25)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEPreparados, \"GraficoNNCMPTotalCEPreparados\", [\" where tipo = 'NNC MP' AND [Regional Qualidade]  in (\\'Preparados\\',\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'Itajaí\\', \\'Fatiados\\') and Negócio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\')  \"], setGraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados, 26)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEPreparados, \"GraficoRACTotalCEPreparados\", [\"  where tipo = 'RAC' AND       [Regional Qualidade]  in (\\'Preparados\\',\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'Itajaí\\', \\'Fatiados\\') and Negócio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\')   \"], setGraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados, 27)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACPreparados, \"GraficoRACPreparados\", [whereRACPreparados] , setGraficoRACPreparados, setresponseGraficoRACPreparados, 28)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPPreparados, \"GraficoNCCMPPreparados\", [whereNNCMP + ' and [Reg. Qual] in (\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\')  '], setGraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados, 29)    // 15\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadas, \"GraficoRACUnidadesAvesPesadas\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO')  \"], setGraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas, 30)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadas, \"GraficoRACProblemasAvesPesadas\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas, 31)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasPR, \"GraficoRACUnidadesAvesPesadasPR\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas PR')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR, 32)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasPR, \"GraficoRACProblemasAvesPesadasPR\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas PR')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR, 33)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasSP, \"GraficoRACUnidadesAvesPesadasSP\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP, 52)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasSP, \"GraficoRACProblemasAvesPesadasSP\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP, 53)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasRS, \"GraficoRACUnidadesAvesPesadasRS\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS, 54)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasRS, \"GraficoRACProblemasAvesPesadasRS\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP')  AND [Origem da RAC] IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"], setGraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS, 55)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesLeves, \"GraficoRACUnidadesAvesLeves\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Aves Leves%\\' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÇÃO UNIDADE\\', \\'EXPEDIÇÃO FÁBRICA\\', \\'FÁBRICA PRODUÇÃO\\', \\'Fabricação/ Produção\\', \\'FABRICACAO/FABRICA\\', \\'FÁBRICA PRODUÇÃO FFO\\', \\'EXPEDIÇÃO FÁBRICA FFO\\') '], setGraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves, 34)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesLeves, \"GraficoRACProblemasAvesLeves\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Aves Leves%\\' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÇÃO UNIDADE\\', \\'EXPEDIÇÃO FÁBRICA\\', \\'FÁBRICA PRODUÇÃO\\', \\'Fabricação/ Produção\\', \\'FABRICACAO/FABRICA\\', \\'FÁBRICA PRODUÇÃO FFO\\', \\'EXPEDIÇÃO FÁBRICA FFO\\') '], setGraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves, 35)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesSuinos, \"GraficoRACUnidadesSuinos\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] in (\\'Suínos\\', \\'Outros\\') and [Regional (Produção)] in (\\'Itajaí - Indus/Sui\\', \\'SUINOS\\', \\'Suínos\\') AND Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÇÃO UNIDADE\\', \\'EXPEDIÇÃO FÁBRICA\\', \\'FÁBRICA PRODUÇÃO\\', \\'Fabricação/ Produção\\', \\'FABRICACAO/FABRICA\\', \\'FÁBRICA PRODUÇÃO FFO\\', \\'EXPEDIÇÃO FÁBRICA FFO\\') '], setGraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos, 36)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasSuinos, \"GraficoRACProblemasSuinos\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] in (\\'Suínos\\', \\'Outros\\') and [Regional (Produção)] in (\\'Itajaí - Indus/Sui\\', \\'SUINOS\\', \\'Suínos\\') AND Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÇÃO UNIDADE\\', \\'EXPEDIÇÃO FÁBRICA\\', \\'FÁBRICA PRODUÇÃO\\', \\'Fabricação/ Produção\\', \\'FABRICACAO/FABRICA\\', \\'FÁBRICA PRODUÇÃO FFO\\', \\'EXPEDIÇÃO FÁBRICA FFO\\') '], setGraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos, 37)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesPreparados, \"GraficoRACUnidadesPreparados\", [whereRACPreparados + \" and Tipo = \\'REAL\\' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) \"], setGraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados, 38)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasPreparados, \"GraficoRACProblemasPreparados\", [whereRACPreparados + \" and Tipo = \\'REAL\\' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) \"], setGraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados, 39)\r\n\r\n        chamarAPI(\"RACIndicadores\", GraficoRACME, \"GraficoRACME\", [\" where mercado_rac = 'ME' \"], setGraficoRACME, setresponseGraficoRACME, 40)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACMI, \"GraficoRACMI\", [\" where mercado_rac IN ('MI', 'INTERNO') and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS','Serviços','Shipping','SAO BERNARDO DO CAMPO','CD SAO BERNARDO DO CAMPO', 'GASPAR - FAB. MARGARINA','MKT - KIT FESTA') OR Unidade IS NULL)  \"], setGraficoRACMI, setresponseGraficoRACMI, 41)\r\n\r\n\r\n        /////////////////////\r\n\r\n        //FFO\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesFFO, \"GraficoRACDetalhesFFO\", [\" where 1=1 AND [Origem da RAC]  IN ('Documentação Unidade', 'EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','PRODUÇÃO EM TERCEIRO') AND [TIPO_ATENDIMENTO_RAC] IN ('RECLAMAÇÃO FFO') \"] , setGraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO, 52) \r\n\r\n        //Atendimento Comercial\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesAC, \"GraficoRACDetalhesAC\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('ATENDIMENTO COMERCIAL') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÍTICA', 'NEGOCIAÇÃO COMERCIAL', 'OBRIGAÇÃO', 'RAC CAIXA', 'RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL)\"] , setGraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC, 53)\r\n\r\n        //Logística Exportação\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesLogME, \"GraficoRACDetalhesLogME\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('LOGÍSTICA EXPORTAÇÃO') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÍTICA', 'NEGOCIAÇÃO COMERCIAL', 'OBRIGAÇÃO', 'RAC CAIXA', 'RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL) \"] , setGraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME, 54)\r\n\r\n        //Logística Importação\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesLogMI, \"GraficoRACDetalhesLogMI\", [\" WHERE 1=1  AND [Origem]  IN ('LOGÍSTICA MI', 'LOGÍSTICA CD')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','AVANTI','Serviços','Shipping') OR Unidade IS NULL) \"] , setGraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI, 55)\r\n\r\n        //Documentação\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesDoc, \"GraficoRACDetalhesDoc\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('DOCUMENTAÇÃO CORPORATIVO') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('NEGOCIAÇÃO COMERCIAL', 'OBRIGAÇÃO','RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL) \"] , setGraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc, 56)\r\n\r\n        //Transporte Terrestre\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesTT, \"GraficoRACDetalhesTT\", [\" WHERE 1=1  AND [Origem]  IN ('TRANSPORTE TERRESTRE')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL)  \"] , setGraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT, 57)\r\n\r\n        //Produção em Terceiro (ex. Massatake)\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesTerceiro, \"GraficoRACDetalhesTerceiro\", [\" WHERE 1=1  AND [Origem]  IN ('PRODUÇÃO EM TERCEIRO')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) and (Unidade NOT IN ('Dan Vigor','Massatake','Vigor','ITAJAI ÓLEO COMESTÍVEIS') )  \"] , setGraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro, 58)\r\n\r\n        //Massatake\r\n        chamarAPI(\"RACIndicadoresSemFiltro\", GraficoRACDetalhesMassatake, \"GraficoRACDetalhesMassatake\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('PRODUÇÃO EM TERCEIRO') AND UNIDADE IN ('MASSATAKE') AND  [TIPO_ATENDIMENTO_RAC] IN ('RECLAMAÇÃO') \"] , setGraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake, 59)\r\n\r\n        //PDV\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesPDV, \"GraficoRACDetalhesPDV\", [\" WHERE 1=1 AND [Origem]  IN ('ABUSO DE PRODUTO PDV') and (Tipo_Atendimento_rac NOT IN ('ALERTA',  'Crítica') OR Tipo_Atendimento_rac IS NULL)  and (Unidade NOT IN ('ITAJAI ÓLEO COMESTÍVEIS','ITAJAI AVES PESADAS', 'Massatake', 'Dan Vigor','GRANO ALIMENTOS S.A.','Marba','Santa Cruz do Sul','Vigor', 'VARZEA GRANDE - CD'\t) )         \"] , setGraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV, 60)\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACDetalhesAberturaPDV, \"GraficoRACDetalhesAberturaPDV\", [\" WHERE 1=1 AND [Origem da RAC] IN ('ABUSO DE PRODUTO PDV') AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR')  AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA') AND Mês = month((select * from v_maiorData)) AND Ano = year((select * from v_maiorData)) \"] , setGraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV, 61)\r\n       \r\n        //RAC Crítica RACIndicadoresSemFiltro\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesCritica, \"GraficoRACDetalhesCritica\", [\" WHERE 1=1 AND [Origem] NOT IN ('ABUSO DE PRODUTO HOME','LOGÍSTICA MI','SERVICO') AND  (Unidade NOT IN ('ITAJAI ÓLEO COMESTÍVEIS','ITAJAI PESCADOS', 'Massatake', 'Dan Vigor','Marba','Vigor', 'NORONHA', 'RIBEIRÃO PRETO - CD', 'Serviços', 'Shipping'\t) )  AND [TIPO_ATENDIMENTO_RAC] IN ('CRÍTICA') \"] , setGraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica, 62)\r\n\r\n        \r\n        var whereLinhaEspecial = \" where 1 = 1 \"\r\n                 + \" and [Marca] IN ('SEARA GOURMET', 'SEARA NATURE', 'SEARA INCRIVEL', 'SEARA ROTISSERIE') \t\t\"\r\n\r\n        //RAC Linhas Especiais (Seara Nature, Gourmet, Incrível)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesEspeciais, \"GraficoRACDetalhesEspeciais\", [whereLinhaEspecial] , setGraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais, 63)\r\n\r\n\r\n*/\r\n\r\n        //RAC Corpo Estanho - [Totais]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCE, \"GraficoRACDetalhesCE\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO') AND  [TIPO CE] IN ('INERENTE','NÃO INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') \"] , setGraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE, 1)\r\n\r\n        //RAC Corpo Estanho - [Inerente]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCEInerente, \"GraficoRACDetalhesCEInerente\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO') AND [TIPO CE] IN ('INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO','MORRO GRANDE') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') \"] , setGraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente, 2)\r\n\r\n        //RAC Corpo Estanho - [Não Inerente]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCENaoInerente, \"GraficoRACDetalhesCENaoInerente\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO') AND [TIPO CE] IN ('NÃO INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','VERÍSSIMO','MORRO GRANDE') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') \"] , setGraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente, 3)\r\n\r\n        //RAC Corpo Estanho - [Plástico]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCEPlastico, \"GraficoRACDetalhesCEPlastico\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') AND [TIPO DO PROBLEMA] IN ('LUVA','LUVA NITRÍLICA','PLÁSTICO','PLÁSTICO DURO','PLÁSTICO MOLE') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico, 4)\r\n\r\n        //RAC Inseto\r\n        // chamarAPI(\"RACIndicadores\", GraficoRACDetalhesInseto, \"GraficoRACDetalhesInseto\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') AND [TIPO DO PROBLEMA] IN ('INSETO') AND [SUB TIPO PROBLEMA] NOT IN ('LARVA') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto, 68)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesInseto, \"GraficoRACDetalhesInseto\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [TIPO DO PROBLEMA] IN ('INSETO') AND [SUB TIPO PROBLEMA] NOT IN ('LARVA') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto, 5)\r\n\r\n        //RAC Cabelo\r\n        //chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCabelo, \"GraficoRACDetalhesCabelo\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') AND [TIPO DO PROBLEMA] LIKE '%CABELO%' AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo, 69)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCabelo, \"GraficoRACDetalhesCabelo\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [TIPO DO PROBLEMA] LIKE '%CABELO%' AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo, 6)\r\n\r\n        //RAC Plastico\r\n        //chamarAPI(\"RACIndicadores\", GraficoRACDetalhesPlastico, \"GraficoRACDetalhesPlastico\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') AND [TIPO DO PROBLEMA] IN ('LUVA','LUVA NITRÍLICA','PLÁSTICO','PLÁSTICO DURO','PLÁSTICO MOLE') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico,70)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesPlastico, \"GraficoRACDetalhesPlastico\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [TIPO DO PROBLEMA] IN ('LUVA','LUVA NITRÍLICA','PLÁSTICO','PLÁSTICO DURO','PLÁSTICO MOLE') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico,7)\r\n\r\n        //RAC Metal\r\n        //chamarAPI(\"RACIndicadores\", GraficoRACDetalhesMetal, \"GraficoRACDetalhesMetal\", [\" WHERE 1=1 AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR')  AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') AND [PROBLEMA] IN ('METAL','METÁLICO') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal,71)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesMetal, \"GraficoRACDetalhesMetal\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [PROBLEMA] IN ('METAL','METÁLICO')  AND ([Origem da RAC] IN ('FABRICAÇÃO'))  \"] , setGraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal,8)\r\n\r\n        //RAC Intoxicação\r\n        //chamarAPI(\"RACIndicadores\", GraficoRACDetalhesIntoxicacao, \"GraficoRACDetalhesIntoxicacao\", [\" WHERE 1=1 AND UNIDADE NOT IN ('HORTUS','JBS','MASSATAKE','VIGOR') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') AND [PROBLEMA] IN ('INTOXICAÇÃO ALIMENTAR') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao,72)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesIntoxicacao, \"GraficoRACDetalhesIntoxicacao\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [PROBLEMA] IN ('INTOXICAÇÃO ALIMENTAR')  AND ([Origem da RAC] IN ('FABRICAÇÃO'))  \"] , setGraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao,9)\r\n     \r\n        //RAC Larva\r\n        //chamarAPI(\"RACIndicadores\", GraficoRACDetalhesLarva, \"GraficoRACDetalhesLarva\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND [REGIONAL (Qualidade)] NOT IN ('FATIADOS','PESCADOS','AVES PR','AVES RS/SC/SP','AVES SP/CO/NE') AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÁFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÊNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO – CD','SALVADOR – CD','SAO PAULO – CD','SEARA MEATS','SOMAVE','VARZEA GRANDE – CD') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO') AND [PROBLEMA] IN ('INSETO','INSETO VIVO') AND [TIPO DO PROBLEMA] IN ('INSETO','LARVA', 'INSETO VIVO','LARVA VIVA')\t AND [SUB TIPO PROBLEMA] IN ('LARVA','LARVA VIVA') AND ([Origem da RAC] IN ('FABRICAÇÃO')) \"] , setGraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva,73)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesLarva, \"GraficoRACDetalhesLarva\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO') AND [PROBLEMA] IN ('INSETO','INSETO VIVO') AND [TIPO DO PROBLEMA] IN ('INSETO','LARVA', 'INSETO VIVO','LARVA VIVA')\t AND [SUB TIPO PROBLEMA] IN ('LARVA','LARVA VIVA') AND ([Origem da RAC] IN ('FABRICAÇÃO'))  \"] , setGraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva,0)\r\n\r\n    /*\r\n        //NNC Log\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesTotal, \"GraficoNNCLogDetalhesTotal\", [\" where 1=1 and [Regional (Qualidade)] not in ('Logística','Outros','Terceiro') and ([Área Responsável] not in ('RASTREABILIDADE HUB') OR [Área Responsável] IS NULL) \"] , setGraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal,74)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesAves, \"GraficoNNCLogDetalhesAves\", [\" where [Regional (Qualidade)] not in ('Logística','Outros','Terceiro') and ([Área Responsável] not in ('RASTREABILIDADE HUB') OR [Área Responsável] IS NULL) AND FORNECEDOR IN ('AMPARO AVES',\t\t\t'BRASILIA',\t'CAARAPO AVES',\t'CAMPO MOURAO AVES',\t'CAXIAS DO SUL',\t\t\t'FORQUILHINHA AVES',\t'GARIBALDI AVES',\t'GUAPIACU AVES',\t'IPUMIRIM AVES',\t'ITAIOPOLIS AVES',\t'ITAPETININGA AVES',\t'ITAPIRANGA AVES',\t\t'JACAREZINHO AVES',\t'JAGUAPITA AVES',\t\t\t\t'LAPA AVES',\t'MONTENEGRO',\t'NOVA VENEZA AVES',\t'NUPORANGA - SP ',\t'NUPORANGA AVES',\t\t'PASSO FUNDO',\t'PASSOS AVES',\t\t\t'ROLANDIA',\t\t'SANTA FE AVES',\t'SANTO INACIO AVES',\t'SAO JOSE AVES',\t\t'SEARA AVES',\t'SEARA SUI/ IND',\t\t'SIDROLANDIA AVES',\t'TANGARA DA SERRA',\t\t'TRINDADE DO SUL',\t'UBERABA AVES', 'SAO GONCALO DOS CAMPOS AVES')\"] , setGraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves,75)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesPreparados, \"GraficoNNCLogDetalhesPreparados\", [\" where [Regional (Qualidade)] not in ('Logística','Outros','Terceiro') and ([Área Responsável] not in ('RASTREABILIDADE HUB') OR [Área Responsável] IS NULL) AND FORNECEDOR IN ('ANA RECH',\t'BOM RETIRO DO SUL SUI/ IND',\t'BRASILIA',\t\t\t'DOURADOS SUI/ IND',\t'DUQUE DE CAXIAS SUI/ IND',\t\t\t\t\t\t'ITAPIRANGA AVES',\t\t\t\t'JAGUARIUNA SUI/ IND',\t'JUNDIAI SUI/ IND',\t'LAGES SUI/ IND',\t\t'MONTENEGRO',\t\t\t\t'OSASCO SUI/ IND',\t\t\t'RIO GRANDE DA SERRA',\t'ROCA SALES',\t\t'SALTO VELOSO AVES',\t\t\t\t\t'SEARA AVES',\t'SEARA SUI/ IND',\t'TRES PASSOS SUI/ IND',        'SAO GONCALO DOS CAMPOS AVES', 'ITAPIRANGA') \"] , setGraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados,76)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesSuinos, \"GraficoNNCLogDetalhesSuinos\", [\" where [Regional (Qualidade)] not in ('Logística','Outros','Terceiro') and ([Área Responsável] not in ('RASTREABILIDADE HUB') OR [Área Responsável] IS NULL) AND FORNECEDOR IN ('ANA RECH',\t'CARAMBEI',\t'DOURADOS SUI/ IND',\t'ITAPIRANGA SUI/ IND',\t'SAO MIGUEL DO OESTE',\t'SEARA AVES',\t'SEARA SUI/ IND',\t'SEBERI',\t'TRES PASSOS SUI/ IND', 'FREDERICO WESTPHALEN')\"] , setGraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos,77)\r\n\r\n        //NNC MP\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesPesadas, \"GraficoNNCAvesPesadas\", [\" where [Reg. Qual] like '%Aves%Pe%' \"], setGraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas, 78)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesPesadasUnidades, \"GraficoNNCAvesPesadasUnidades\", [ \" where [Reg. Qual] like '%Aves%Pe%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades, 79)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesPesadasProblemas, \"GraficoNNCAvesPesadasProblemas\", [ \" where [Reg. Qual] like '%Aves%Pe%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas, 80)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesRS, \"GraficoNNCAvesRS\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' \"], setGraficoNNCAvesRS, setresponseGraficoNNCAvesRS, 81)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesRSUnidades, \"GraficoNNCAvesRSUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades, 82)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesRSProblemas, \"GraficoNNCAvesRSProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas, 83)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesSP, \"GraficoNNCAvesSP\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' \"], setGraficoNNCAvesSP, setresponseGraficoNNCAvesSP, 84)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesSPUnidades, \"GraficoNNCAvesSPUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades, 85)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesSPProblemas, \"GraficoNNCAvesSPProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas, 86)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesPR, \"GraficoNNCAvesPR\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' \"], setGraficoNNCAvesPR, setresponseGraficoNNCAvesPR, 87)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesPRUnidades, \"GraficoNNCAvesPRUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades, 88)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesPRProblemas, \"GraficoNNCAvesPRProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas, 89)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesLeves, \"GraficoNNCAvesLeves\", [\" where [Reg. Qual] like '%Aves Leves%' \"], setGraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves, 90)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesLevesUnidades, \"GraficoNNCAvesLevesUnidades\", [\" where [Reg. Qual] like '%Aves Leves%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades, 91)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesLevesProblemas, \"GraficoNNCAvesLevesProblemas\", [\" where [Reg. Qual] like '%Aves Leves%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas, 92)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCSuinos, \"GraficoNNCSuinos\", [\" where [Reg. Qual] like '%Suínos%' \"], setGraficoNNCSuinos, setresponseGraficoNNCSuinos, 93)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCSuinosUnidades, \"GraficoNNCSuinosUnidades\", [\" where [Reg. Qual] like '%Suínos%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades, 94)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCSuinosProblemas, \"GraficoNNCSuinosProblemas\", [\" where [Reg. Qual] like '%Suínos%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas, 95)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCPreparados, \"GraficoNNCPreparados\", [\" where [Reg. Qual] like '%Preparados%' \"], setGraficoNNCPreparados, setresponseGraficoNNCPreparados, 96)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCPreparadosUnidades, \"GraficoNNCPreparadosUnidades\", [\" where [Reg. Qual] like '%Preparados%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades, 97)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCPreparadosProblemas, \"GraficoNNCPreparadosProblemas\", [\" where [Reg. Qual] like '%Preparados%' and Ano = year((select * from v_maiorData)) and Mês = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ Logística_Serviços','Embalagem Secundária') \"], setGraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas, 98)\r\n        \r\n        chamarAPI(\"NCCMP\", GraficoNNCCETotal, \"GraficoNNCCETotal\", [\" WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' \"], setGraficoNNCCETotal, setresponseGraficoNNCCETotal, 99)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEInerente, \"GraficoNNCCEInerente\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo CE] = 'Inerente' \"], setGraficoNNCCEInerente, setresponseGraficoNNCCEInerente, 100)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCENaoInerente, \"GraficoNNCCENaoInerente\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo CE] = 'Não Inerente' \"], setGraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente, 101)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEOssos, \"GraficoNNCCEOssos\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] = 'Ossos' \"], setGraficoNNCCEOssos, setresponseGraficoNNCCEOssos, 102)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEPlastico, \"GraficoNNCCEPlastico\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] in ('Borracha','Luva Latex','Luva Nitrilica','Plástico duro','Plástico mole - Resíduo') \"], setGraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico, 103)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEMetal, \"GraficoNNCCEMetal\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' and ( [Grupo Problema.] = 'Corpo Estranho_ Metalico' or [Tipo Problema] in ('Luva anti corte') ) \"], setGraficoNNCCEMetal, setresponseGraficoNNCCEMetal, 104)\r\n        \r\n            \r\n        //ÍNDICE DE CONFORMIDADE\r\n\r\n        chamarAPI(\"ICBarras\", GraficoICUnidadesAves, \"GraficoICUnidadesAves\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - AVES LEVES','REGIONAL SEARA - AVES PESADAS 1','REGIONAL SEARA - AVES PESADAS 2','REGIONAL SEARA - AVES PESADAS 3','REGIONAL SEARA - AVES PESADAS PR') \", \"empresaNome as name \", \"empresaNome\"], setGraficoICUnidadesAves, setresponseGraficoICUnidadesAves, 105)     \r\n        chamarAPI(\"ICBarras\", GraficoICIndicadoresAves, \"GraficoICIndicadoresAves\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - AVES LEVES','REGIONAL SEARA - AVES PESADAS 1','REGIONAL SEARA - AVES PESADAS 2','REGIONAL SEARA - AVES PESADAS 3','REGIONAL SEARA - AVES PESADAS PR') \", \"indicadorNome as name \", \"indicadorNome\"], setGraficoICIndicadoresAves, setresponseGraficoICIndicadoresAves, 106)     \r\n        \r\n        chamarAPI(\"ICBarras\", GraficoICUnidadesSuinos, \"GraficoICUnidadesSuinos\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - SUI') \", \"empresaNome as name \", \"empresaNome\"], setGraficoICUnidadesSuinos, setresponseGraficoICUnidadesSuinos, 107)     \r\n        chamarAPI(\"ICBarras\", GraficoICIndicadoresSuinos, \"GraficoICIndicadoresSuinos\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - SUI') \", \"indicadorNome as name \", \"indicadorNome\"], setGraficoICIndicadoresSuinos, setresponseGraficoICIndicadoresSuinos, 108)   \r\n\r\n        chamarAPI(\"ICBarras\", GraficoICUnidadesPreparados, \"GraficoICUnidadesPreparados\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - ALIMENTOS PREPARADOS 1','REGIONAL SEARA - ALIMENTOS PREPARADOS 2') \", \"empresaNome as name \", \"empresaNome\"], setGraficoICUnidadesPreparados, setresponseGraficoICUnidadesPreparados, 109)     \r\n        chamarAPI(\"ICBarras\", GraficoICIndicadoresPreparados, \"GraficoICIndicadoresPreparados\", [\" where ano = '2021' and mes = '08' AND REGIONALNOME IN ('REGIONAL SEARA - ALIMENTOS PREPARADOS 1','REGIONAL SEARA - ALIMENTOS PREPARADOS 2') \", \"indicadorNome as name \", \"indicadorNome\"], setGraficoICIndicadoresPreparados, setresponseGraficoICIndicadoresPreparados, 110)   \r\n     \r\n  */\r\n        \r\n        /////////////////////\r\n\r\n         buscarDadosTable([\" and 1=1 \"])\r\n\r\n        const bar_ctx = canvasRef.current.getContext('2d');\r\n\r\n        const background = bar_ctx.createLinearGradient(0, 0, 0, 300);\r\n        const backgroundCinza = bar_ctx.createLinearGradient(0, 0, 0, 300);\r\n\r\n        background.addColorStop(0, \"#f59c00\");\r\n        background.addColorStop(1, \"#cc0000\");\r\n\r\n        backgroundCinza.addColorStop(0, \"#f2f2f2\");\r\n        backgroundCinza.addColorStop(1, \"#bfbfbf\");\r\n\r\n        SetBackgroundGradient(background);\r\n        SetBackgroundGradientCinza(backgroundCinza);\r\n\r\n        \r\n\r\n    }, []);\r\n\r\n    function callbackChamarAPI (apiNome) {\r\n        console.log(`Rodou ${apiNome}, ${percorreNumeroChamados()}`)\r\n        if (percorreNumeroChamados()) {\r\n            document.getElementById(\"btnAplicar\").click()\r\n            setIsUpdatingData(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const chamarAPI = (apiNome, objeto, numGrafico, parametros, funcao, funcaoRetorno, numeroChamado) => {\r\n\r\n        switch (apiNome) {\r\n            case 'CETotal':\r\n\r\n                api.getSearaBaseCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    // setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'NNCMPTotalCE':\r\n\r\n                api.getSearaBaseNNCMPTotalCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'RACTotalCE':\r\n\r\n                api.getSearaBaseRACTotalCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n\r\n            case 'RAC':\r\n\r\n                api.getSearaBaseRac(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n           \r\n            case 'RACIndicadores':\r\n\r\n                api.getSearaBaseRacIndicadores(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n                case 'RACIndicadoresSemFiltro2':\r\n\r\n                    api.getSearaBaseRacIndicadoresSemFiltro2(parametros).then((response) => {\r\n                        buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                        numeroChamados[numeroChamado] = true;\r\n                        callbackChamarAPI(apiNome)\r\n                        return response\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                    break\r\n\r\n            case 'RACIndicadoresSemFiltro':\r\n\r\n                api.getSearaBaseRacIndicadores_(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n                \r\n            case 'NCCMP':\r\n\r\n                api.getSearaBaseNCCMP(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCMPUnidade':\r\n\r\n                api.getSearaBaseNCCMPUnidade(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCMPProblema':\r\n\r\n                api.getSearaBaseNCCMPProblema(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCLOG':\r\n\r\n                api.getSearaBaseNCCLOG(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'RACUnicoUnidade':\r\n\r\n                api.getSearaBaseRACUnicoUnidade(parametros).then((response) => {\r\n\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'RACUnicoProblema':\r\n\r\n                api.getSearaBaseRACUnicoProblema(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'ICBarras':\r\n\r\n                api.getSearaBaseICBarras(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n        return\r\n    }\r\n\r\n    const aplicar = () => {\r\n        if (estaRodandoAplicar == false) {\r\n            console.log(\"aplicar\")\r\n            setEstaRodandoAplicar(true);\r\n  /*          \r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotal, setresponseGraficoCETotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCE, setresponseGraficoRACTotalCE, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRAC, setresponseGraficoRAC, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMP, setresponseGraficoNCCMP, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesLeves, setresponseGraficoRACAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalSuinos, setresponseGraficoCETotalSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACSuinos, setresponseGraficoRACSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalPreparados, setresponseGraficoCETotalPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACPreparados, setresponseGraficoRACPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoSemMeta(GraficoRACMI, setresponseGraficoRACMI, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoSemMeta(GraficoRACME, setresponseGraficoRACME, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //FFO\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //ATENDIMENTO COMERCIAL\r\n            GerarGraficoHistorico(GraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Logística Exportação\r\n            GerarGraficoHistorico(GraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //Logística Importação\r\n            GerarGraficoHistorico(GraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Documentação\r\n            GerarGraficoHistorico(GraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Transporte Terrestre\r\n            GerarGraficoHistorico(GraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Produção em Terceiro (ex. Massatake)\r\n            GerarGraficoHistorico(GraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Massatake\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //PDV\r\n            GerarGraficoHistorico(GraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV, backgroundGradient, backgroundGradientCinza)\r\n            //Abertura PDV\r\n            GerarGraficoBarras(GraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV, backgroundGradientCinza, backgroundGradientCinza)\r\n \r\n            //RAC Crítica\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Linhas Especiais (Seara Nature, Gourmet, Incrível)\r\n            GerarGraficoHistorico(GraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais, backgroundGradient, backgroundGradientCinza)\r\n*/\r\n            //RAC Corpo Estanho - [Totais]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //RAC Corpo Estanho - [Inerente]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Corpo Estanho - [Não Inerente]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Corpo Estanho - [Plástico]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Inseto\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Cabelo\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Plastico\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Metal\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //RAC Intoxicação\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Larva\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva, backgroundGradient, backgroundGradientCinza)\r\n/*\r\n            // //NNC Log\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos, backgroundGradient, backgroundGradientCinza)\r\n\r\n            // //NNC\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesRS, setresponseGraficoNNCAvesRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesSP, setresponseGraficoNNCAvesSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesPR, setresponseGraficoNNCAvesPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCSuinos, setresponseGraficoNNCSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCPreparados, setresponseGraficoNNCPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCETotal, setresponseGraficoNNCCETotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEInerente, setresponseGraficoNNCCEInerente, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEOssos, setresponseGraficoNNCCEOssos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEMetal, setresponseGraficoNNCCEMetal, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoICUnidadesAves, setresponseGraficoICUnidadesAves, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoICIndicadoresAves, setresponseGraficoICIndicadoresAves, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoICUnidadesSuinos, setresponseGraficoICUnidadesSuinos, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoICIndicadoresSuinos, setresponseGraficoICIndicadoresSuinos, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoICUnidadesPreparados, setresponseGraficoICUnidadesPreparados, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoICIndicadoresPreparados, setresponseGraficoICIndicadoresPreparados, backgroundGradientCinza)\r\n            \r\n*/\r\n\r\n            setEstaRodandoAplicar(false);\r\n        }\r\n    }\r\n\r\n    const GerarGraficoHistorico = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2019' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'Média Diária' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"Média Diária\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"Média Diária\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n            series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoAnoAnterior = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        //debugger\r\n        xaxis.splice(0, 1) //tira 2019\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'Média Diária' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"Média Diária\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"Média Diária\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"2019\") {\r\n                console.log(\"Não entra neste relatório por ser 2019\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n            //series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoAnoAnteriorSemMeta = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        //debugger\r\n        xaxis.splice(0, 1) //tira 2019\r\n        xaxis.splice(1, 1) //tira Meta\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'Média Diária' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"Média Diária\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"Média Diária\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"2019\" || y.name == \"Evolutivo Meta\" || y.name == \"Meta\") {\r\n                console.log(\"Não entra neste relatório por ser 2019 e Meta\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n            //series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoSemMeta = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        xaxis.splice(2, 1) //tira a meta\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: '2019' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'Média Diária' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"Média Diária\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"Média Diária\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: 2,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: \"12\",\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"Meta\" || y.name == \"Evolutivo Meta\") {\r\n                console.log(\"Não entra neste relatório por ser meta\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n\r\n    \r\n\r\n    const GerarGraficoBarras = (objeto, funcao, gradient) => {\r\n\r\n        if (!objeto) return\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(json);//groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        let yaxis = [{ name: 'Valor' }];\r\n\r\n        xaxis.forEach(x => {\r\n            x['yaxis'] = [{ name: \"Valor\", value: x.value.replace(\",\",\".\") }]\r\n        })\r\n\r\n        let series = []\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => 1 === 1);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'bar'\r\n            let cor = gradient ?? '#bfbfbf'\r\n            let corLabel = '#000000'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: 2,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: \"11\",\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            series.push(serie)\r\n        })\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable\" id=\"tab1\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalME = () => {\r\n\r\n        if (!TableRacFinalME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalME.length; i++) {\r\n            json.push(TableRacFinalME[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab2\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalMI = () => {\r\n\r\n        if (!TableRacFinalMI) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalMI.length; i++) {\r\n            json.push(TableRacFinalMI[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab3\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalRECL = () => {\r\n\r\n        if (!TableRacFinalRECL) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalRECL.length; i++) {\r\n            json.push(TableRacFinalRECL[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab3\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalPDV = () => {\r\n\r\n        if (!TableRacFinalPDV) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalPDV.length; i++) {\r\n            json.push(TableRacFinalPDV[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab4\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalTE = () => {\r\n\r\n        if (!TableRacFinalTE) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalTE.length; i++) {\r\n            json.push(TableRacFinalTE[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab5\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalCRIT = () => {\r\n\r\n        if (!TableRacFinalCRIT) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalCRIT.length; i++) {\r\n            json.push(TableRacFinalCRIT[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab6\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de Fabricação\" header=\"Data de Fabricação\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"Manifestação\" header=\"Manifestação\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACAberturaME = () => {\r\n\r\n        if (!TableRACAberturaME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRACAberturaME.length; i++) {\r\n            json.push(TableRACAberturaME[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAberturaME\">\r\n                        <Column field=\"Mercado\" header=\"Mercado Externo\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEOrienteMedio = () => {\r\n\r\n        if (!TableRacAberturaMEOrienteMedio) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEOrienteMedio.length; i++) {\r\n            json.push(TableRacAberturaMEOrienteMedio[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clOrienteMedio\">\r\n                        <Column field=\"Mercado\" header=\"Oriente Médio\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEEuropa = () => {\r\n\r\n        if (!TableRacAberturaMEEuropa) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEEuropa.length; i++) {\r\n            json.push(TableRacAberturaMEEuropa[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clEuropa\">\r\n                        <Column field=\"Mercado\" header=\"Europa\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    \r\n    const DataTableRACAberturaMEJapao = () => {\r\n\r\n        if (!TableRacAberturaMEJapao) return;\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEJapao.length; i++) {\r\n            json.push(TableRacAberturaMEJapao[i])\r\n        }\r\n\r\n        let retorno = (\r\n            <div>\r\n               \r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clJapao\">\r\n                        <Column field=\"Mercado\" header=\"Japão\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n\r\n        return retorno;\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEAsia = () => {\r\n\r\n        if (!TableRacAberturaMEAsia) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEAsia.length; i++) {\r\n            json.push(TableRacAberturaMEAsia[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAsia\">\r\n                        <Column field=\"Mercado\" header=\"Ásia\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEAmericasAfrica = () => {\r\n\r\n        if (!TableRacAberturaMEAmericasAfrica) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEAmericasAfrica.length; i++) {\r\n            json.push(TableRacAberturaMEAmericasAfrica[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAmericasAfrica\">\r\n                        <Column field=\"Mercado\" header=\"Américas / África\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEContasGlobais = () => {\r\n\r\n        if (!TableRacAberturaMEContasGlobais) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEContasGlobais.length; i++) {\r\n            json.push(TableRacAberturaMEContasGlobais[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clContasGlobais\">\r\n                        <Column field=\"Mercado\" header=\"Contas globais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    \r\n    const DataTableRACAberturaLinhaEspecialFamilia = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialFamilia) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialFamilia.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialFamilia[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialFamilia\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoGourmet = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoGourmet) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoGourmet.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoGourmet[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoGourmet\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoIncrivel = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoIncrivel) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoIncrivel.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoIncrivel[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoIncrivel\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoNature = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoNature) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoNature.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoNature[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoNature\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoRotisserie = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoRotisserie) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoRotisserie.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoRotisserie[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoRotisserie\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    const DataTableNNCMPCEOssos = () => {\r\n\r\n        if (!TableNNCMPCEOssos) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssos.length; i++) {\r\n            json.push(TableNNCMPCEOssos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPCEOssos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const DataTableNNCMPCEOssosFornecedor = () => {\r\n\r\n        if (!TableNNCMPCEOssosFornecedor) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssosFornecedor.length; i++) {\r\n            json.push(TableNNCMPCEOssosFornecedor[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssosFornecedor\">\r\n                        <Column field=\"CAMPO1\" header=\"Corpo Estranho OssosFornecedor\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const DataTableNNCMPCEOssosUnidadesReclamantes = () => {\r\n\r\n        if (!TableNNCMPCEOssosUnidadesReclamantes) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssosUnidadesReclamantes.length; i++) {\r\n            json.push(TableNNCMPCEOssosUnidadesReclamantes[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssosUnidadesReclamantes\">\r\n                        <Column field=\"CAMPO1\" header=\"Corpo Estranho Ossos Unidades Reclamantes\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    function percorrerJson(obj){    \r\n        \r\n        var rows = [];\r\n        var j = 0;\r\n        for (var key in obj) { // obtém as chaves do objeto\r\n            // se o valor for diferente de objeto (caso events)\r\n            if (typeof obj[key] !== 'object') {\r\n                if (j == 0){\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")} headerStyle={{ width: '20%' }}></Column>);\r\n                }else{\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")}></Column>);\r\n                }\r\n                j++\r\n            }\r\n            else\r\n            // se o valor for um array de objetos, é iterado o array\r\n            // e as chaves de cada objeto\r\n            \r\n            obj[key].forEach(function(item) {\r\n                var i = 0;\r\n                for (var key2 in item) {\r\n                    if (i == 0){\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha' headerStyle={{ width: '70%' }}></Column>);\r\n                    }else{\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha'></Column>);\r\n                    }\r\n                    i++\r\n                }\r\n            });\r\n        }\r\n\r\n        return rows;\r\n        \r\n    }\r\n\r\n    function percorrerJsonHabilitador(obj){    \r\n\r\n        var rows = [];\r\n        var j = 0;\r\n        for (var key in obj) { // obtém as chaves do objeto\r\n            // se o valor for diferente de objeto (caso events)\r\n            if (typeof obj[key] !== 'object') {\r\n                if (j == 0){\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")} headerStyle={{ width: '20%' }}></Column>);\r\n                }else{\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")}></Column>);\r\n                }\r\n                j++\r\n            }\r\n            else\r\n            // se o valor for um array de objetos, é iterado o array\r\n            // e as chaves de cada objeto\r\n            \r\n            obj[key].forEach(function(item) {\r\n                var i = 0;\r\n                for (var key2 in item) {\r\n                    if (i == 0){\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha' headerStyle={{ width: '70%' }}></Column>);\r\n                    }else{\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha'></Column>);\r\n                    }\r\n                    i++\r\n                }\r\n            });\r\n        }\r\n\r\n        return rows;\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesTerceiro = () => {\r\n\r\n        if (!TableRacRACDetalhesTerceiro) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesTerceiro.length; i++) {\r\n            json.push(TableRacRACDetalhesTerceiro[i])\r\n        }\r\n\r\n        \r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesTerceiro[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAberturaTerceiro\">\r\n                    <Column field=\"Unidade\" header=\"Abertura Terceiro\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"RAC\" header=\"QTD\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealAves = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealAves) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealAves.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealAves[i])\r\n        }\r\n\r\n    \r\n        let headerGroup = <ColumnGroup>\r\n                            <Row>\r\n                                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                                <Column header=\"Orçamento\" colSpan={2} />\r\n                                <Column header=\"Real\" colSpan={3} />\r\n                                <Column header=\"Desvio\" colSpan={2} />\r\n                            </Row>    \r\n                            <Row>\r\n                               \r\n                                <Column field=\"ORÇ JUN\"  header=\"Mês\" />\r\n                                <Column field=\"ORÇ 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"REAL JUN\"  header=\"Mês\"  />\r\n                                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"DESVIO MÊS\"  header=\"Mês\"  />\r\n                                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n                            </Row>\r\n                        </ColumnGroup>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealAves\">\r\n                        <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                        <Column field=\"ORÇ JUN\" header=\"Mês\" />\r\n                        <Column field=\"ORÇ 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"REAL JUN\" header=\"Mês\"  />\r\n                        <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                        <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"DESVIO MÊS\" header=\"Mês\"  />\r\n                        <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealPreparados = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealPreparados) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealPreparados.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealPreparados[i])\r\n        }\r\n\r\n    \r\n        let headerGroup = <ColumnGroup>\r\n                            <Row>\r\n                                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                                <Column header=\"Orçamento\" colSpan={2} />\r\n                                <Column header=\"Real\" colSpan={3} />\r\n                                <Column header=\"Desvio\" colSpan={2} />\r\n                            </Row>    \r\n                            <Row>\r\n                               \r\n                                <Column field=\"ORÇ JUN\"  header=\"Mês\" />\r\n                                <Column field=\"ORÇ 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"REAL JUN\"  header=\"Mês\"  />\r\n                                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"DESVIO MÊS\"  header=\"Mês\"  />\r\n                                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n                            </Row>\r\n                        </ColumnGroup>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealPreparados\">\r\n                        <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                        <Column field=\"ORÇ JUN\" header=\"Mês\" />\r\n                        <Column field=\"ORÇ 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"REAL JUN\" header=\"Mês\"  />\r\n                        <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                        <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"DESVIO MÊS\" header=\"Mês\"  />\r\n                        <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealSuinos = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealSuinos) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealSuinos.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealSuinos[i])\r\n        }\r\n\r\n        let headerGroup = <ColumnGroup>\r\n            <Row>\r\n                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                <Column header=\"Orçamento\" colSpan={2} />\r\n                <Column header=\"Real\" colSpan={3} />\r\n                <Column header=\"Desvio\" colSpan={2} />\r\n            </Row>    \r\n            <Row>\r\n               \r\n                <Column field=\"ORÇ JUN\"  header=\"Mês\" />\r\n                <Column field=\"ORÇ 2021\"  header=\"Acumulado\"  />\r\n                <Column field=\"REAL JUN\"  header=\"Mês\"  />\r\n                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                <Column field=\"DESVIO MÊS\"  header=\"Mês\"  />\r\n                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n            </Row>\r\n        </ColumnGroup>;\r\n\r\n        return (\r\n        <div>\r\n        <div className=\"card\">\r\n            <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealSuinos\">\r\n                <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                <Column field=\"ORÇ JUN\" header=\"Mês\" />\r\n                <Column field=\"ORÇ 2021\" header=\"Acumulado\"  />\r\n                <Column field=\"REAL JUN\" header=\"Mês\"  />\r\n                <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                <Column field=\"DESVIO MÊS\" header=\"Mês\"  />\r\n                <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n            </DataTable>\r\n        </div>\r\n        </div>\r\n        );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRacCorposEstranhos = () => {\r\n\r\n        if (!TableRacCorposEstranhos) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhos.length; i++) {\r\n            json.push(TableRacCorposEstranhos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosInerentes = () => {\r\n\r\n        if (!TableRacCorposEstranhosInerentes) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosInerentesNaoInerentes = () => {\r\n\r\n        \r\n\r\n        if (!TableRacCorposEstranhosInerentesNaoInerentes) return;\r\n\r\n      \r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosInerentesNaoInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosInerentesNaoInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosInerentesNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosInerentesNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosNaoInerentes = () => {\r\n\r\n        if (!TableRacCorposEstranhosNaoInerentes) return;\r\n\r\n        \r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosNaoInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosNaoInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesPDV = () => {\r\n\r\n        if (!TableRacRACDetalhesPDV) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesPDV.length; i++) {\r\n            json.push(TableRacRACDetalhesPDV[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesPDV[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesPDV\">\r\n                        <Column field=\"CAMPO1\" header=\"Abertura PDV\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRACD3INNATURA = () => {\r\n\r\n        if (!TableRacRACD3InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD3InNatura.length; i++) {\r\n            json.push(TableRacRACD3InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD3InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD3InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-3 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD0INNATURA = () => {\r\n\r\n        if (!TableRacRACD0InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD0InNatura.length; i++) {\r\n            json.push(TableRacRACD0InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD0InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD0InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-0 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD3Preparados = () => {\r\n\r\n        if (!TableRacRACD3Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD3Preparados.length; i++) {\r\n            json.push(TableRacRACD3Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD3Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD3Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-3 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD0Preparados = () => {\r\n\r\n        if (!TableRacRACD0Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD0Preparados.length; i++) {\r\n            json.push(TableRacRACD0Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD0Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD0Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-0 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCLogD3 = () => {\r\n\r\n        if (!TableNNCLogD3) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCLogD3.length; i++) {\r\n            json.push(TableNNCLogD3[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCLogD3[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCLogD3\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC Log D-3\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCLogD0 = () => {\r\n\r\n        if (!TableNNCLogD0) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCLogD0.length; i++) {\r\n            json.push(TableNNCLogD0[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCLogD0[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCLogD0\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC Log D-0\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    /////\r\n\r\n    const DataTableNNCMPD3INNATURA = () => {\r\n\r\n        if (!TableNNCMPD3InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD3InNatura.length; i++) {\r\n            json.push(TableNNCMPD3InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD3InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD3InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-3 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD0INNATURA = () => {\r\n\r\n        if (!TableNNCMPD0InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD0InNatura.length; i++) {\r\n            json.push(TableNNCMPD0InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD0InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD0InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-0 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD3Preparados = () => {\r\n\r\n        if (!TableNNCMPD3Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD3Preparados.length; i++) {\r\n            json.push(TableNNCMPD3Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD3Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD3Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-3 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD0Preparados = () => {\r\n\r\n        if (!TableNNCMPD0Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD0Preparados.length; i++) {\r\n            json.push(TableNNCMPD0Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD0Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD0Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-0 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"Nº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    ////\r\n\r\n    \r\n    const DataTableNNCEvolucaoMes = () => {\r\n\r\n        if (!TableNNCEvolucaoMes) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCEvolucaoMes.length; i++) {\r\n            json.push(TableNNCEvolucaoMes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCEvolucaoMes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCEvolucaoMes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCEvolucaoMesTotais = () => {\r\n\r\n        if (!TableNNCEvolucaoMesTotais) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCEvolucaoMesTotais.length; i++) {\r\n            json.push(TableNNCEvolucaoMesTotais[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCEvolucaoMesTotais[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCEvolucaoMesTotais\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesCritica = () => {\r\n\r\n        if (!TableRacRACDetalhesCritica) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesCritica.length; i++) {\r\n            json.push(TableRacRACDetalhesCritica[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesCritica[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesCritica\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoTotal = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoTotal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoTotal.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoTotal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoTotal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoTotal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRacLarva = () => {\r\n\r\n        if (!TableRacLarva) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacLarva.length; i++) {\r\n            json.push(TableRacLarva[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacLarva[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacLarva\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacIntoxicacao = () => {\r\n\r\n        if (!TableRacIntoxicacao) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacIntoxicacao.length; i++) {\r\n            json.push(TableRacIntoxicacao[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacIntoxicacao[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacIntoxicacao\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacMetal = () => {\r\n\r\n        if (!TableRacMetal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacMetal.length; i++) {\r\n            json.push(TableRacMetal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacMetal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacMetal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEPlastico = () => {\r\n\r\n        if (!TableNNCCEPlastico) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEPlastico.length; i++) {\r\n            json.push(TableNNCCEPlastico[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEPlastico[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEPlastico\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEMetal = () => {\r\n\r\n        if (!TableNNCCEMetal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEMetal.length; i++) {\r\n            json.push(TableNNCCEMetal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEMetal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEMetal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEOssos = () => {\r\n\r\n        if (!TableNNCCEOssos) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEOssos.length; i++) {\r\n            json.push(TableNNCCEOssos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEOssos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEOssos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCE = () => {\r\n\r\n        if (!TableNNCCE) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCE.length; i++) {\r\n            json.push(TableNNCCE[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCE[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCE\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableHabilitadorCorposEstranhosNaoInerentes = () => {\r\n\r\n        if (!TableHabilitadorCorposEstranhosNaoInerentes) return;\r\n\r\n        \r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableHabilitadorCorposEstranhosNaoInerentes.length; i++) {\r\n            json.push(TableHabilitadorCorposEstranhosNaoInerentes[i])\r\n        }\r\n        \r\n        \r\n\r\n        var retorno = percorrerJsonHabilitador(TableHabilitadorCorposEstranhosNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableHabilitadorCorposEstranhosNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEInerenteNaoInerente = () => {\r\n\r\n        if (!TableNNCCEInerenteNaoInerente) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEInerenteNaoInerente.length; i++) {\r\n            json.push(TableNNCCEInerenteNaoInerente[i])\r\n        }\r\n\r\n        \r\n\r\n        var retorno = percorrerJson(TableNNCCEInerenteNaoInerente[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEInerenteNaoInerente\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacPlastico = () => {\r\n\r\n        if (!TableRacPlastico) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacPlastico.length; i++) {\r\n            json.push(TableRacPlastico[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacPlastico[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacPlastico\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCabelo = () => {\r\n\r\n        if (!TableRacCabelo) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCabelo.length; i++) {\r\n            json.push(TableRacCabelo[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCabelo[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCabelo\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacInseto = () => {\r\n\r\n        if (!TableRacInseto) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacInseto.length; i++) {\r\n            json.push(TableRacInseto[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacInseto[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacInseto\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoAves = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoAves) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoAves.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoAves[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoAves[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoAves\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoPreparados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoPreparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoPreparados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoPreparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoPreparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoPreparados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoFatiados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoFatiados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoFatiados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoFatiados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoFatiados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoFatiados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoPescados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoPescados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoPescados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoPescados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoPescados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoPescados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoSuinos = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoSuinos) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoSuinos.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoSuinos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoSuinos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoSuinos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    const buscarTabelaRACUnicoProblema = () => {\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n            let json = JSON.parse(response.data)\r\n\r\n            return (\r\n                <div>\r\n                    <div className=\"card\">\r\n                        <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable\">\r\n                            <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                            <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                            <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                            <Column field=\"Nº RAC\" header=\"Nº RAC\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n    var flagTable = false;\r\n\r\n    const buscarDadosTable = (parm) => {\r\n\r\n        if (!flagTable) {\r\n\r\n/*\r\n            api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacME(json)\r\n            })\r\n\r\n            var whereFinalME = \" AND Mercado_rac = 'ME' \" +\r\n                \" AND [Origem] IN (  \" +\r\n                \"     'Documentação Unidade',   \" +\r\n                \"     'EXPEDIÇÃO FÁBRICA',  \" +\r\n                \"     'EXPEDIÇÃO FÁBRICA FFO', \" +\r\n                \"     'FÁBRICA PRODUÇÃO FFO', \" +\r\n                \"    'FABRICAÇÃO')  \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN (  \" +\r\n                \"     'CONTATO EXCELSIOR_RAC',   \" +\r\n                \"     'CONTATO JBS CARNES',   \" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \" +\r\n                \"     'NOTIFICAÇÃO',   \" +\r\n                \"    'RECLAMAÇÃO',   \" +\r\n                \"    'RECLAMAÇÃO ABUSO DE PRODUTO',  \" +\r\n                \"    'RECLAMAÇÃO ABUSO PROD.',   \" +\r\n                \"     'Reclamação Contas Globais',  \" +\r\n                \"    'RECLAMAÇÃO FAB. NÃO IDENTIF.',  \" +\r\n                \"   'RECLAMAÇÃO HANS',   \" +\r\n                \"    'RECLAMAÇÃO VOSSKO', \" +\r\n                \"   'RECLAMAÇÃO FFO', \" +\r\n                \"    'REINCIDÊNCIA') \"\r\n\r\n            api.getSearaBaseRacFinal([whereFinalME]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalME(json)\r\n            })\r\n\r\n            var whereFinalMI = \" AND Mercado_rac IN ('MI','INTERNO') \" +\r\n                \" AND [Origem] IN (  \" +\r\n                \"     'Documentação Unidade',   \" +\r\n                \"     'EXPEDIÇÃO FÁBRICA',  \" +\r\n                \"     'EXPEDIÇÃO FÁBRICA FFO', \" +\r\n                \"     'FÁBRICA PRODUÇÃO FFO', \" +\r\n                \"    'FABRICAÇÃO')  \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN (  \" +\r\n                \"     'CONTATO EXCELSIOR_RAC',   \" +\r\n                \"     'CONTATO JBS CARNES',   \" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \" +\r\n                \"     'NOTIFICAÇÃO',   \" +\r\n                \"    'RECLAMAÇÃO',   \" +\r\n                \"    'RECLAMAÇÃO ABUSO DE PRODUTO',  \" +\r\n                \"    'RECLAMAÇÃO ABUSO PROD.',   \" +\r\n                \"     'Reclamação Contas Globais',  \" +\r\n                \"    'RECLAMAÇÃO FAB. NÃO IDENTIF.',  \" +\r\n                \"   'RECLAMAÇÃO HANS',   \" +\r\n                \"    'RECLAMAÇÃO VOSSKO', \" +\r\n                \"   'RECLAMAÇÃO FFO', \" +\r\n                \"    'REINCIDÊNCIA') \"\r\n\r\n            api.getSearaBaseRacFinal([whereFinalMI]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalMI(json)\r\n            })\r\n\r\n            var whereFinalRECL = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" AND [Origem] IN ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'Documentação Unidade',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'EXPEDIÇÃO FÁBRICA', \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'EXPEDIÇÃO FÁBRICA FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'FÁBRICA PRODUÇÃO FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'FABRICAÇÃO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" AND  [Tipo_Atendimento_rac] IN ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO EXCELSIOR_RAC',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO JBS CARNES',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'NOTIFICAÇÃO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO ABUSO DE PRODUTO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO ABUSO PROD.',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'Reclamação Contas Globais',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO FAB. NÃO IDENTIF.',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO HANS',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÇÃO VOSSKO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'RECLAMAÇÃO FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'REINCIDÊNCIA') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" and [Nm_Marca_rac] IN ('SEARA GOURMET', 'SEARA NATURE', 'SEARA INCRIVEL', 'SEARA ROTISSERIE') \t\t\"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalRECL]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalRECL(json)\r\n            })\r\n\r\n            var whereFinalPDV = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\t\" +\r\n                \" AND [Origem] IN ( \t\t\" +\r\n                \"     'ABUSO DE PRODUTO PDV') \t\"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalPDV]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalPDV(json)\r\n            })\r\n\r\n            var whereFinalTE = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\" +\r\n                \" AND [Origem] IN ( \t\" +\r\n                \"     'PRODUÇÃO EM TERCEIRO') \"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalTE]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalTE(json)\r\n            })\r\n\r\n            var whereFinalCRIT = \" AND Mercado_rac IN ('MI', 'INTERNO') \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN ( 'CRÍTICA' ) \"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalCRIT]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalCRIT(json)\r\n            })\r\n\r\n            var whereAberturaME = \"  \" +\r\n                \" AND [Tipo_Atendimento_rac] in ( \" +\r\n                \" 'RECLAMAÇÃO', \" +\r\n                \" 'RECLAMAÇÃO ABUSO PROD.', \" +\r\n                \" 'RECLAMAÇÃO FAB. NÃO IDENTIF.', \" +\r\n                \" 'RECLAMAÇÃO HANS', \" +\r\n                \" 'CONTATO EXCELSIOR_RAC', \" +\r\n                \" 'CONTATO MERCADO DA CARNE', \" +\r\n                \" 'CONTATO JBS CARNES', \" +\r\n                \" 'NOTIFICAÇÃO', \" +\r\n                \" 'Reincidência', \" +\r\n                \" 'RECLAMAÇÃO FFO', \" +\r\n                \" 'RECLAMAÇÃO ABUSO DE PRODUTO', \" +\r\n                \" 'RECLAMAÇÃO VOSSKO', \" +\r\n                \" 'Reclamação Contas Globais' \" +\r\n                \" ) \"\r\n\r\n            api.getSearaBaseRacAberturaME([whereAberturaME + \" and data_rac = (select data from v_maiorData) \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaME(json)\r\n                setTimeout(arrumaTabela3niveis('clAberturaME'), 20000)\r\n            })\r\n\r\n\r\n\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac = 'YARA' AND Unidade NOT IN ('Serviços', 'Shipping') \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEOrienteMedio(json)\r\n                setTimeout(arrumaTabela3niveis('clOrienteMedio'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \"  AND Especialista_rac IN ('Igor', 'Rejane') AND Unidade NOT IN ('Serviços', 'Shipping')   \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEEuropa(json)\r\n                setTimeout(arrumaTabela3niveis('clEuropa'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Marcela') AND Unidade NOT IN ('Serviços', 'Shipping')  \"]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEJapao(json)\r\n                setTimeout(arrumaTabela3niveis('clJapao'), 20000)\r\n                          \r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Amanda') AND Unidade NOT IN ('Serviços', 'Shipping')  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEAsia(json)\r\n                setTimeout(arrumaTabela3niveis('clAsia'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Regina') AND Unidade NOT IN ('Serviços', 'Shipping')  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEAmericasAfrica(json)\r\n                setTimeout(arrumaTabela3niveis('clAmericasAfrica'), 20000)\r\n            })\r\n\r\n            \r\n            var sqlTableRacRACDetalhesTerceiro = \"\"\r\n            + \" SELECT\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" *\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" INTO #RESULTADO \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" FROM [v_base_rac]\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" WHERE 1=1\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND [Origem_do_Problema_rac] IN ('Produção em Terceiro')\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND  [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÍTICA','REINCIDÊNCIA','NEGOCIAÇÃO COMERCIAL','RECOLHIMENTO','OBRIGAÇÃO','RECOLHIMENTO VOLUNTÁRIO','RAC COMPLEMENTAR','CONCESSÃO','RAC CAIXA','ELOGIO')\t\"\t\t \r\n            + \" AND Filial_rac NOT IN ('FORNECEDOR - IND COM MASSAS ALI MASSATAK TANAK LT EPP')\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND UNIDADE NOT IN ('VIGOR','DAN VIGOR','AVANTI')\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND Tipo_rac = 'Real'\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" SELECT\t\t\"\r\n            + \" GROUPING(Unidade) grupo,\t\"\r\n            + \" isnull(Unidade, 'Total') as Unidade\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" , SUM(Quant_rac) RAC\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" INTO #UNIDADE\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" FROM #RESULTADO\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" GROUP BY Unidade\t\t\"\r\n            + \" WITH ROLLUP\t\"\r\n            + \" SELECT * FROM #UNIDADE order by 1 asc, 3 desc\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" DROP TABLE #UNIDADE\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" DROP TABLE #RESULTADO\t\t\"\t\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesTerceiro ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['grupo'];\r\n                }\r\n\r\n                setTableRacRACDetalhesTerceiro(json)\r\n                setTimeout(arrumaTabela1nivel('clAberturaTerceiro'), 20000)\r\n            })\r\n\r\n            var sqlTableRacRACDetalhesPDV = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" Nm_Classe_rac CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , Tipo_Problema_rac CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , NULL CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , count(Rac_rac) as NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #RESULTADO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData)) AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] IN ('ABUSO DE PRODUTO PDV')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR')\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Nm_Classe_rac, Tipo_Problema_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\t\t\t\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2, CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUPING(B.CAMPO1) C1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , GROUPING(B.CAMPO2) C2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , GROUPING(B.CAMPO3) C3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO1 AS VARCHAR) AS CAMPO1_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO2 AS VARCHAR) AS CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO3 AS VARCHAR) AS CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2, CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WITH ROLLUP\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT DISTINCT B.*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R1.NUM AS NUM1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R2.NUM AS NUM2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R3.NUM AS NUM3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \tWHEN B.CAMPO3 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\tWHEN B.CAMPO2 IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"                 CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\tWHEN B.CAMPO1_ IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t'<b>Total</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\tELSE '<b>'+B.CAMPO1_+'</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\tELSE '@@.....'+B.CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \tELSE '..........'+B.CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     END CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #BASE B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R1 R1 ON B.CAMPO1_ = R1.CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R2 R2 ON B.CAMPO1_ = R2.CAMPO1 AND B.CAMPO2 = R2.CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R3 R3 ON B.CAMPO1_ = R3.CAMPO1 AND B.CAMPO2 = R3.CAMPO2 AND B.CAMPO3 = R3.CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE B.C3 = 1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesPDV ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)                \r\n                setTableRacRACDetalhesPDV(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesPDV'), 20000)\r\n\r\n            })\r\n\r\n\r\n            \r\n            \r\n            var sqlTableRacRACDetalhesCritica = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÍSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÍTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Unidade\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" 'Total' as [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÍSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÍTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Unidade\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÍSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÍTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÍSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÍTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr ='SELECT pt.[Unidade],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , T.Quant_rac as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT [Unidade], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND [Origem_do_Problema_rac] NOT IN (''ABUSO DE PRODUTO HOME'',''LOGÍSTICA MI'',''SERVICO'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') \t\t' +\t\t\t\"\r\n            + \" \t\t' AND [TIPO_ATENDIMENTO_RAC] IN (''CRÍTICA'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [Unidade], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' INNER JOIN #TOTAL T ON T.UNIDADE = PT.UNIDADE ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' SELECT pt.[Unidade],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT ''Total'' as [Unidade], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND [Origem_do_Problema_rac] NOT IN (''ABUSO DE PRODUTO HOME'',''LOGÍSTICA MI'',''SERVICO'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') \t\t' +\t\t\t\"\r\n            + \" \t\t' AND [TIPO_ATENDIMENTO_RAC] IN (''CRÍTICA'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' ORDER BY  ' + CAST(@LINHAS + 3 AS VARCHAR) + ' ASC, ' + CAST(@LINHAS + 2 AS VARCHAR) + ' DESC ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesCritica ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesCritica(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesCritica'), 20000)\r\n         \r\n            })\r\n\r\n            var sqlTableRacRACDetalhesEvolucaoTotal = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" Origem Origem,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','Serviços', 'Shipping', 'ITAJAÍ ÓLEO COMESTÍVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME') \"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Origem\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" 'Total' as Origem,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','Serviços', 'Shipping', 'ITAJAÍ ÓLEO COMESTÍVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Origem\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','Serviços', 'Shipping', 'ITAJAÍ ÓLEO COMESTÍVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','Serviços', 'Shipping', 'ITAJAÍ ÓLEO COMESTÍVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr ='SELECT pt.[Origem],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , T.Quant_rac as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT Origem Origem, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') AND [TIPO_ATENDIMENTO_RAC] NOT IN (''ALERTA'',''CONCESSÃO'', ''CRITICA'',''CRÍTICA'',''ELOGIO'',''NEGOCIAÇÃO COMERCIAL'',''OBRIGAÇÃO'',''RAC CAIXA'',''RAC COMPLEMENTAR'',''RECOLHIMENTO'',''RECOLHIMENTO VOLUNTÁRIO'',''NOTIFICAÇÃO'') AND Origem_do_Problema_rac NOT IN (''Abuso de Produto HOME'')\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY Origem, [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' INNER JOIN #TOTAL T ON T.origem = PT.origem ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' SELECT pt.[Origem],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT ''Total'' as Origem, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t'  AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') AND [TIPO_ATENDIMENTO_RAC] NOT IN (''ALERTA'',''CONCESSÃO'', ''CRITICA'',''CRÍTICA'',''ELOGIO'',''NEGOCIAÇÃO COMERCIAL'',''OBRIGAÇÃO'',''RAC CAIXA'',''RAC COMPLEMENTAR'',''RECOLHIMENTO'',''RECOLHIMENTO VOLUNTÁRIO'',''NOTIFICAÇÃO'') AND Origem_do_Problema_rac NOT IN (''Abuso de Produto HOME'')\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' ORDER BY  ' + CAST(@LINHAS + 3 AS VARCHAR) + ' ASC, ' + CAST(@LINHAS + 2 AS VARCHAR) + ' DESC ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesEvolucaoTotal ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoTotal(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoTotal'), 20000)\r\n\r\n                \r\n            })\r\n\r\n\t\t\t\r\n            \r\n\r\n            var wherePivotdataTableRacLarva = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Grupo_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND [Regional Qual] NOT IN ('FATIADOS','PESCADOS','AVES PR','AVES RS/SC/SP','AVES SP/CO/NE') \"\r\n            + \"AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÁFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÊNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO – CD','SALVADOR – CD','SAO PAULO – CD','SEARA MEATS','SOMAVE','VARZEA GRANDE – CD') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO') \"\r\n            + \"AND [PROBLEMA] IN ('INSETO','INSETO VIVO') \"\r\n            + \"AND [Tipo_Problema] IN ('INSETO','LARVA', 'INSETO VIVO','LARVA VIVA')\t \"\r\n            + \"AND [SUB TIPO PROBLEMA] IN ('LARVA','LARVA VIVA') \"\r\n            + \" AND ([Origem] IN ('FABRICAÇÃO')) \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacLarva, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacLarva(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacLarva'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacIntoxicacao = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n\r\n            + \"AND [REGIONAL QUAL] IN ('PREPARADOS 1','PREPARADOS 2','QUALIDADE','REGULATÓRIO','SUÍNOS','OUTROS','MARKETING E P&D','ITAJAÍ','EXCELSIOR','AVES LEVES') \"\r\n            + \"AND UNIDADE NOT IN ('JBS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO','NOTIFICAÇÃO') \"\r\n            + \"AND [PROBLEMA] IN ('INTOXICAÇÃO ALIMENTAR') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacIntoxicacao, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacIntoxicacao(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacIntoxicacao'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacInseto = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n\r\n            + \"AND [ORIGEM] IN ('FABRICAÇÃO') \"\r\n            + \"AND [GRUPO_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') \"\r\n            + \"AND Tipo_Problema IN ('INSETO') \"\r\n            + \"AND [SUB TIPO PROBLEMA] NOT IN ('LARVA') \"\r\n            + \" AND ([Origem] IN ('FABRICAÇÃO')) \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacInseto, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacInseto(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacInseto'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacCabelo = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Origem_do_problema_rac] IN ('FÁBRICA PRODUÇÃO') \"\r\n            + \"AND [GRUPO_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n            + \"AND Tipo_Problema IN ('FIO DE CABELO / PÊLO HUMANO','FIO DE CABELO/PÊLO HUMANO', 'PÊLO/ CABELO') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacCabelo, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacCabelo(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacCabelo'), 20000)\r\n            })\r\n\r\n            \r\n            var wherePivotdataTableRacPlastico = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \" AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÍTICA','NEGOCIAÇÃO COMERCIAL','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR') \"\r\n            + \" AND [Tipo_Problema_rac] IN ('LUVA','LUVA NITRÍLICA','PLÁSTICO','PLÁSTICO DURO','PLÁSTICO MOLE') \"\r\n            + \" AND ([Origem] IN ('FABRICAÇÃO')) \"\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacPlastico, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacPlastico(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacPlastico'), 20000)\r\n            })\r\n\r\n            \r\n            var wherePivotdataTableNNCEvolucaoMes = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" and Tipo = 'REAL' \"\r\n            + \" and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \" and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \" \r\n            + \" and [Regional (Qualidade)] not in ('Logística','Outros','Terceiro') and ([Área Responsável] not in ('RASTREABILIDADE HUB') OR [Área Responsável] IS NULL)\"\r\n \r\n            api.getSearaBaseNNCLog1nivelPIVOTDIA([ wherePivotdataTableNNCEvolucaoMes, \"Fornecedor as Coluna1, NULL as Coluna2, null as Coluna3\", \"Fornecedor\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCEvolucaoMes(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCEvolucaoMes'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableNNCEvolucaoMesTotais = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Origem_do_problema_rac] IN ('FÁBRICA PRODUÇÃO') \"\r\n            + \"AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n            + \"AND Tipo_Problema IN ('LUVA','LUVA NITRÍLICA','PLÁSTICO','PLÁSTICO DURO','PLÁSTICO MOLE') \"\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataTableNNCEvolucaoMesTotais, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCEvolucaoMesTotais(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCEvolucaoMesTotais'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCEPlastico = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] in ('Borracha','Luva Latex','Luva Nitrilica','Plástico duro','Plástico mole - Resíduo') \"\r\n         \r\n\r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEPlastico, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \" , \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEPlastico(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEPlastico'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCEMetal = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' and ( [Grupo Problema.] = 'Corpo Estranho_ Metalico' or [Tipo Problema] in ('Luva anti corte') ) \"\r\n\r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEMetal, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEMetal(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEMetal'), 20000)\r\n            })\r\n\r\n\r\n            var whereTableNNCCEOssos = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('Itajaí','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] = 'Ossos'  \"\r\n\r\n            \r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEOssos, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {    \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEOssos(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEOssos'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCE = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \"and [Grupo Problema] in ('Corpo Estranho') and [Reg. Qual] NOT IN ('OUTROS', 'ITAJAÍ') and [Entra para a Meta] = 'Sim' \"\r\n\r\n            api.getSearaBaseNNC2niveisPIVOTDIA([ whereTableNNCCE, \"[Reg. Prod.] as Coluna1, fornecedor as Coluna2, null as Coluna3\", \"[Reg. Prod.], fornecedor\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCE(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCCE'), 20000)\r\n            })\r\n\r\n*/\r\n            var whereTableHabilitadorCorposEstranhosNaoInerentes = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and ANO = (select year(data) as data from v_maiorData) \"\r\n            \r\n           \r\n\r\n            api.getSearaBaseCE2niveisPIVOTmesDesvio([ whereTableHabilitadorCorposEstranhosNaoInerentes, \"[Negócio] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Negócio], Unidade\", \" '|' + MES + '|' \", \"Mes\" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n                \r\n                \r\n                setTableHabilitadorCorposEstranhosNaoInerentes(json)\r\n                setTimeout(arrumaTabela2niveis('clTableHabilitadorCorposEstranhosNaoInerentes'), 20000)\r\n            })\r\n\r\n/*\r\n            var whereTableNNCCEInerenteNaoInerente = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \" and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" and [Grupo Problema] in ('Corpo Estranho') and [Reg. Qual] NOT IN ('OUTROS', 'ITAJAÍ') and [Entra para a Meta] = 'Sim' \"\r\n\r\n            api.getSearaBaseNNC2niveisPIVOTDIA([ whereTableNNCCEInerenteNaoInerente, \"[Reg. Prod.]  as Coluna1, Fornecedor as Coluna2, null as Coluna3 \", \"[Reg. Prod.], Fornecedor\", \" [TIPO CE] \", \" [TIPO CE] \"]).then((response) => {\r\n                \r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEInerenteNaoInerente(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCCEInerenteNaoInerente'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacMetal = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÁFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÊNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO – CD','SALVADOR – CD','SAO PAULO – CD','SEARA MEATS','SOMAVE','VARZEA GRANDE – CD') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n            + \"AND [PROBLEMA] IN ('METAL','METÁLICO') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacMetal, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacMetal(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacMetal'), 20000)\r\n            })\r\n\r\n            var wherePivotdataEvolucaoAves = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%AVES%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','Documentação Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoAves, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoAves(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoAves'), 20000)\r\n            })\r\n\r\n            var wherePivotdataEvolucaoPreparados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real' \"\r\n            \r\n            + \"AND Origem IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"\r\n            + \"AND (([Regional Qual] LIKE '%Prepar%' or [Regional Qual] IN ('Outros', 'Itajaí')) AND ([Regional Prod] IN ('Outros','Preparados', 'Fatiados') ) OR UNIDADE = 'ITAJAI INDUSTRIALIZADOS') \"\r\n            + \"AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) \"\r\n\r\n\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoPreparados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoPreparados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoPreparados'), 20000)\r\n            })\r\n                \r\n                \r\n            \r\n\r\n\r\n            var wherePivotdataEvolucaoFatiados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Fatiados%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','Documentação Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoFatiados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoFatiados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoFatiados'), 20000)\r\n            })\r\n\r\n\r\n\r\n\r\n            var wherePivotdataEvolucaoPescados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Pescado%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            \r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoPescados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoPescados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoPescados'), 20000)\r\n            })\r\n\r\n\r\n            var wherePivotdataEvolucaoSuinos = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Su%no%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','Documentação Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoSuinos, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoSuinos(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoSuinos'), 20000)\r\n            })\r\n\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Jéssica') AND Unidade NOT IN ('Serviços', 'Shipping') \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEContasGlobais(json)\r\n                setTimeout(arrumaTabela3niveis('clContasGlobais'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialFamilia = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND Nm_Marca_rac in ('SEARA GOURMET','SEARA INCRIVEL','SEARA NATURE','SEARA ROTISSERIE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \"  and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS','AVANTI','Serviços','Shipping') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n            api.getSearaBaseRAC2niveis([whereTableRACAberturaLinhaEspecialFamilia,\" Nm_Marca_rac CAMPO1, Nm_Classe_rac CAMPO2, NULL CAMPO3 \",\" Nm_Marca_rac, Nm_Classe_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialFamilia(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRACAberturaLinhaEspecialFamilia'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealAves = \"\"\r\n            + \" AND Origem IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"\r\n            + \" AND ([Regional Qual] LIKE '%AVES%' or [Regional Qual] IN ('Outros','Itajaí')) AND ([Regional Prod] LIKE '%AVES%' or [Regional Prod] IN ('Itajaí - Aves')) \"\r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealAves,\" [Negócio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [Negócio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealAves(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealAves'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealPreparados = \"\"\r\n            + \" AND Origem IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"\r\n            \r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" AND (([Regional Qual] LIKE '%Prepar%' or [Regional Qual] IN ('Outros', 'Itajaí')) AND ([Regional Prod] IN ('Outros','Preparados', 'Fatiados') ) OR UNIDADE = 'ITAJAI INDUSTRIALIZADOS') \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealPreparados,\" [Negócio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [Negócio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealPreparados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealPreparados'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealSuinos = \"\"\r\n            + \" AND Origem IN ('Documentação Unidade','EXPEDIÇÃO FÁBRICA','EXPEDIÇÃO FÁBRICA FFO','FÁBRICA PRODUÇÃO FFO','FABRICAÇÃO') \"\r\n            \r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" AND (([Regional Qual] LIKE '%Su%no%' or [Regional Qual] IN ('Outros')) AND ([Regional Prod] LIKE '%Su%no%' ) OR UNIDADE = 'ITAJAI SUINOS') \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealSuinos,\" [Negócio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [Negócio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealSuinos(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealSuinos'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoGourmet = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA GOURMET') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoGourmet,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoGourmet(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoGourmet'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoIncrivel = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA INCRIVEL') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoIncrivel,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoIncrivel(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoIncrivel'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoNature = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA NATURE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoNature,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoNature(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoNature'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoRotisserie = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÊNCIA NACIONAL FS','ITAJAÍ','ITAJAI ÓLEO COMESTÍVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÍTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA ROTISSERIE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoRotisserie,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoRotisserie(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoRotisserie'), 20000)\r\n            })\r\n\r\n            //////\r\n            var whereTableRacRACD3InNatura = \"\"\r\n            + \" WHERE 1=1\tAND Data_rac =  \"  \r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'  \"\r\n            + \" AND ([Regional Qual] like '%Ave%' or [Regional Qual] like '%suín%') \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRacRACD3InNatura,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacRACD3InNatura(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRacRACD3InNatura'), 20000)\r\n            })\r\n\r\n             var whereTableRacRACD0InNatura = \"\"\r\n             + \" WHERE 1=1\tAND Data_rac =  \"   \t\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'   \"\r\n            + \" AND ([Regional Qual] like '%Ave%' or [Regional Qual] like '%suín%') \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n \r\n             api.getSearaBaseRAC3niveis([whereTableRacRACD0InNatura,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableRacRACD0InNatura(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableRacRACD0InNatura'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableRacRACD3Preparados = \"\"\r\n            + \" WHERE 1=1\tAND Data_rac =  \"  \r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'   \"\r\n            + \" AND Negocio = 'preparados'\"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','Documentação Unidade') ) \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRacRACD3Preparados,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacRACD3Preparados(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRacRACD3Preparados'), 20000)\r\n            })\r\n\r\n             var whereTableRacRACD0Preparados = \"\"\r\n             + \" WHERE 1=1\tAND Data_rac = \"   \t\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n             + \" AND Tipo_rac = 'Real'   \"\r\n             + \" AND Negocio = 'preparados'\"\r\n             + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'Concessão', 'Crítica','Elogio','Negociação Comercial','Obrigação', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento Voluntário') \"\r\n             + \" OR Tipo_Atendimento_rac IS NULL) \"\r\n             + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÓLEO COMESTÍVEIS') OR Unidade IS NULL) \"\r\n             + \" AND (Origem  IN ('EXPEDIÇÃO FÁBRICA','FABRICAÇÃO','Documentação Unidade') ) \"\r\n \r\n \r\n             api.getSearaBaseRAC3niveis([whereTableRacRACD0Preparados,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableRacRACD0Preparados(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableRacRACD0Preparados'), 20000)\r\n             })\r\n\r\n\r\n             var whereTableNNCLogD3 = \"\"\r\n             + \" WHERE 1=1 \"\r\n             \r\n             + \" AND [DT ABERTURA] = case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\" \r\n             + \" and [Regional (Qualidade)] not in ('Logística', 'Terceiro', 'Outros') and [Área Responsável] not in ('WRAP PIZZA', 'RASTREABILIDADE HUB', 'NNC OCORRÊNCIA PRODUTO; PROCESSO NAS FILIAIS') \"\r\n \r\n             api.getSearaBaseNNCLog3niveis([whereTableNNCLogD3,\" Fornecedor CAMPO1, [Grupo Problema] CAMPO2, [Tipo Problema] CAMPO3  \",\" Fornecedor, [Tipo Problema], [Grupo Problema] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCLogD3(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCLogD3'), 20000)\r\n             })\r\n\r\n             var whereTableNNCLogD0 = \"\"\r\n        \r\n             + \" WHERE 1=1 \"\r\n             + \" AND [DT ABERTURA] =  \"\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n             + \" and [Regional (Qualidade)] not in ('Logística', 'Terceiro', 'Outros') and [Área Responsável] not in ('WRAP PIZZA', 'RASTREABILIDADE HUB', 'NNC OCORRÊNCIA PRODUTO; PROCESSO NAS FILIAIS') \"\r\n \r\n \r\n             api.getSearaBaseNNCLog3niveis([whereTableNNCLogD0,\"  Fornecedor CAMPO1, [Grupo Problema] CAMPO2, [Tipo Problema] CAMPO3  \",\" Fornecedor, [Tipo Problema], [Grupo Problema] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCLogD0(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCLogD0'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableNNCMPD3InNatura = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n            + \" AND ([Reg. Qual] LIKE '%AVES%' OR [Reg. Qual] like '%suí%') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] = \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\"\r\n\r\n            api.getSearaBaseNNCMP3niveis([whereTableNNCMPD3InNatura,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableNNCMPD3InNatura(json)\r\n                setTimeout(arrumaTabela3niveis('clTableNNCMPD3InNatura'), 20000)\r\n            })\r\n\r\n             var whereTableNNCMPD0InNatura = \"\"\r\n             + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n            + \" AND ([Reg. Qual] LIKE '%AVES%' OR [Reg. Qual] like '%suí%') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPD0InNatura,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPD0InNatura(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPD0InNatura'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableNNCMPD3Preparados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n            + \" AND [Reg. Prod.] IN ('PREPARADOS') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\"\r\n\r\n            api.getSearaBaseNNCMP3niveis([whereTableNNCMPD3Preparados,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableNNCMPD3Preparados(json)\r\n                setTimeout(arrumaTabela3niveis('clTableNNCMPD3Preparados'), 20000)\r\n            })\r\n\r\n             var whereTableNNCMPD0Preparados = \"\"\r\n             + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n            + \" AND [Reg. Prod.] IN ('PREPARADOS') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPD0Preparados,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPD0Preparados(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPD0Preparados'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssos = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNC3niveisPIVOTDIA([whereTableNNCMPCEOssos,\" Cliente Coluna1, Fornecedor Coluna2, Produto Coluna3 \",\" Cliente, Fornecedor, Produto \", \" [MES-DIA] \", \" [MES-DIA] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 \r\n                 for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n                 setTableNNCMPCEOssos(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPCEOssos'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssosFornecedor = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPCEOssosFornecedor,\" [Negócio] CAMPO1, Fornecedor CAMPO2, null CAMPO3 \",\" [Negócio], Fornecedor \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPCEOssosFornecedor(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCMPCEOssosFornecedor'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssosUnidadesReclamantes = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÍ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÁRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNCMP2niveis([whereTableNNCMPCEOssosUnidadesReclamantes,\" [Negócio] CAMPO1, [Filial] CAMPO2, null CAMPO3 \",\" [Negócio], [Filial] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPCEOssosUnidadesReclamantes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCMPCEOssosUnidadesReclamantes'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhos = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND [Origem] IN ('FABRICAÇÃO','EXPEDIÇÃO FÁBRICA','P&D','PRODUÇÃO EM TERCEIRO') \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n             + \"and [Tipo CE] in ('Inerente', 'Não Inerente') \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhos, \"[Negócio Qualidade] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Negócio Qualidade], Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhos(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhos'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhosInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [Origem] IN ('FABRICAÇÃO','EXPEDIÇÃO FÁBRICA','P&D','PRODUÇÃO EM TERCEIRO') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n             + \"and [Tipo CE] = 'Inerente' \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosInerente, \"[Negócio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Negócio Qualidade] , Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosInerentes'), 20000)\r\n             })\r\n*/\r\n             var whereTableRacCorposEstranhosNaoInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND [Origem] IN ('FABRICAÇÃO','EXPEDIÇÃO FÁBRICA','P&D','PRODUÇÃO EM TERCEIRO') \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n             + \"and [Tipo CE] = 'Não Inerente' \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosNaoInerente, \"[Negócio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Negócio Qualidade] , Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                 \r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosNaoInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosNaoInerentes'), 20000)\r\n             })\r\n  \r\n\r\n             var whereTableRacCorposEstranhosInerenteNaoInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÍSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [Origem] IN ('FABRICAÇÃO','EXPEDIÇÃO FÁBRICA','P&D','PRODUÇÃO EM TERCEIRO') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÍTICA','ELOGIO','NEGOCIAÇÃO COMERCIAL','OBRIGAÇÃO','RAC CAIXA','RAC COMPLEMENTAR', 'RECLAMAÇÃO FFO', 'RAC CONSUMIDOR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÁRIO') \"\r\n             + \"and [Tipo CE] in ('Inerente', 'Não Inerente') \"\r\n            \r\n             \r\n\r\n             api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosInerenteNaoInerente, \"[Negócio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \" [Negócio Qualidade] , Unidade\", \" [Tipo CE] \" ]).then((response) => {\r\n\r\n                \r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['Nº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosInerentesNaoInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosInerentesNaoInerentes'), 20000)\r\n             })\r\n\r\n            flagTable = true;\r\n\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    const buscarDados = (response, funcao, graficoRetorno, funcaoRetorno) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        let json = JSON.parse(response.data)\r\n\r\n        if (json.length == 0) return\r\n\r\n        let datasets = [];\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(json);\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Carregando dados</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div>\r\n            <canvas style={{ display: 'none' }} ref={canvasRef} />\r\n           \r\n            <Row>\r\n                <Col lg={12} className=\"cssSeara2021\">\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                Relatório KPI Seara\r\n                                    <br />\r\n                                <small>por GRX Soluções</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                {/* <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={buscarDados}>Atualizar</button>\r\n                                </div>   */}\r\n\r\n                                <Pdf targetRef={ref} filename=\"KPI.pdf\" options={options} x={1} scale={1}>\r\n                                    {({ toPdf }) => (\r\n                                        <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={toPdf} id=\"btnPDF\">Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                         \r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* Botão aplicar */}\r\n            {/* {isUpdatingData ? (<div> </div>) : ( */}\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px', display: \"none\" }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar} id=\"btnAplicar\">Aplicar</button>\r\n                </Row>\r\n            {/* )} */}\r\n\r\n\r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-1 col-12 cssSeara2021\">\r\n                        <h1></h1>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                \r\n\r\n                <reg id=\"region RAC - +18\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Totais\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCE} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Inerente\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCEInerente} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +19\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Não inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCENaoInerente} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Plástico\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCEPlastico} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +20\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Inseto\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesInseto} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacInseto()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +21\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Cabelo\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCabelo} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCabelo()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +22\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Plástico\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesPlastico} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacPlastico()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +23\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Metal\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesMetal} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacMetal()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +24\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Intoxicação\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesIntoxicacao} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacIntoxicacao()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +25\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Larva\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesLarva} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacLarva()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +26\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhos()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +27\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosInerentes()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +28\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos Não Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosNaoInerentes()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +29\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos Inerentes e Não Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-6 col-md-6 col-sm-6 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosInerentesNaoInerentes()\r\n\r\n                                )} \r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +30\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Habilitador Corpos Estranhos Não Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableHabilitadorCorposEstranhosNaoInerentes()\r\n                                    //inexistente\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n               \r\n\r\n                    \r\n                \r\n               \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;",{"ruleId":"1156","replacedBy":"1157"},{"ruleId":"1158","replacedBy":"1159"},{"ruleId":"1160","severity":1,"message":"1161","line":6,"column":8,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":17},{"ruleId":"1160","severity":1,"message":"1164","line":28,"column":7,"nodeType":"1162","messageId":"1163","endLine":28,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1165","line":41,"column":11,"nodeType":"1162","messageId":"1163","endLine":41,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1166","line":45,"column":12,"nodeType":"1162","messageId":"1163","endLine":45,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1167","line":81,"column":11,"nodeType":"1162","messageId":"1163","endLine":81,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1168","line":135,"column":11,"nodeType":"1162","messageId":"1163","endLine":135,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1169","line":3,"column":5,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1170","line":4,"column":5,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1171","line":5,"column":5,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1172","line":6,"column":5,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1173","line":7,"column":5,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1174","line":8,"column":5,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":24},{"ruleId":"1160","severity":1,"message":"1175","line":10,"column":10,"nodeType":"1162","messageId":"1163","endLine":10,"endColumn":16},{"ruleId":"1176","severity":1,"message":"1177","line":21,"column":1,"nodeType":"1178","endLine":542,"endColumn":2},{"ruleId":"1179","severity":1,"message":"1180","line":25,"column":32,"nodeType":"1181","endLine":25,"endColumn":79},{"ruleId":"1179","severity":1,"message":"1180","line":30,"column":21,"nodeType":"1181","endLine":30,"endColumn":107},{"ruleId":"1160","severity":1,"message":"1182","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1183","line":1,"column":27,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1184","line":1,"column":38,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1185","line":4,"column":8,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1186","line":5,"column":10,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1187","line":7,"column":10,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1188","line":8,"column":10,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1189","line":10,"column":8,"nodeType":"1162","messageId":"1163","endLine":10,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1161","line":11,"column":8,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":17},{"ruleId":"1160","severity":1,"message":"1190","line":17,"column":10,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1191","line":19,"column":10,"nodeType":"1162","messageId":"1163","endLine":19,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1192","line":20,"column":10,"nodeType":"1162","messageId":"1163","endLine":20,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1193","line":22,"column":8,"nodeType":"1162","messageId":"1163","endLine":22,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1194","line":35,"column":18,"nodeType":"1162","messageId":"1163","endLine":35,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1195","line":45,"column":10,"nodeType":"1162","messageId":"1163","endLine":45,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1196","line":55,"column":5,"nodeType":"1162","messageId":"1163","endLine":55,"endColumn":9},{"ruleId":"1197","severity":1,"message":"1198","line":95,"column":8,"nodeType":"1199","endLine":95,"endColumn":10,"suggestions":"1200"},{"ruleId":"1201","severity":1,"message":"1202","line":131,"column":28,"nodeType":"1203","messageId":"1204","endLine":131,"endColumn":30},{"ruleId":"1201","severity":1,"message":"1202","line":133,"column":34,"nodeType":"1203","messageId":"1204","endLine":133,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":135,"column":33,"nodeType":"1203","messageId":"1204","endLine":135,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1202","line":137,"column":33,"nodeType":"1203","messageId":"1204","endLine":137,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1205","line":296,"column":11,"nodeType":"1162","messageId":"1163","endLine":296,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":381,"column":23,"nodeType":"1203","messageId":"1204","endLine":381,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":422,"column":30,"nodeType":"1203","messageId":"1204","endLine":422,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":464,"column":30,"nodeType":"1203","messageId":"1204","endLine":464,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":506,"column":30,"nodeType":"1203","messageId":"1204","endLine":506,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":548,"column":30,"nodeType":"1203","messageId":"1204","endLine":548,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":590,"column":30,"nodeType":"1203","messageId":"1204","endLine":590,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":632,"column":30,"nodeType":"1203","messageId":"1204","endLine":632,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":674,"column":30,"nodeType":"1203","messageId":"1204","endLine":674,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1206","line":721,"column":11,"nodeType":"1162","messageId":"1163","endLine":721,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1167","line":725,"column":11,"nodeType":"1162","messageId":"1163","endLine":725,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1182","line":2,"column":17,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1183","line":2,"column":27,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1184","line":2,"column":38,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1207","line":3,"column":8,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1208","line":3,"column":27,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1209","line":3,"column":41,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1210","line":3,"column":63,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":74},{"ruleId":"1160","severity":1,"message":"1211","line":4,"column":8,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1185","line":7,"column":8,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1186","line":8,"column":10,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1187","line":10,"column":10,"nodeType":"1162","messageId":"1163","endLine":10,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1188","line":11,"column":10,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1189","line":13,"column":8,"nodeType":"1162","messageId":"1163","endLine":13,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1161","line":14,"column":8,"nodeType":"1162","messageId":"1163","endLine":14,"endColumn":17},{"ruleId":"1160","severity":1,"message":"1191","line":22,"column":10,"nodeType":"1162","messageId":"1163","endLine":22,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1192","line":23,"column":10,"nodeType":"1162","messageId":"1163","endLine":23,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1193","line":25,"column":8,"nodeType":"1162","messageId":"1163","endLine":25,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1175","line":38,"column":10,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1194","line":38,"column":18,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1212","line":40,"column":9,"nodeType":"1162","messageId":"1163","endLine":40,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1169","line":43,"column":5,"nodeType":"1162","messageId":"1163","endLine":43,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1170","line":44,"column":5,"nodeType":"1162","messageId":"1163","endLine":44,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1171","line":45,"column":5,"nodeType":"1162","messageId":"1163","endLine":45,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1172","line":46,"column":5,"nodeType":"1162","messageId":"1163","endLine":46,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1173","line":47,"column":5,"nodeType":"1162","messageId":"1163","endLine":47,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1195","line":51,"column":10,"nodeType":"1162","messageId":"1163","endLine":51,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1213","line":54,"column":10,"nodeType":"1162","messageId":"1163","endLine":54,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1214","line":56,"column":8,"nodeType":"1162","messageId":"1163","endLine":56,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1196","line":65,"column":5,"nodeType":"1162","messageId":"1163","endLine":65,"endColumn":9},{"ruleId":"1201","severity":1,"message":"1202","line":96,"column":35,"nodeType":"1203","messageId":"1204","endLine":96,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1215","line":293,"column":10,"nodeType":"1162","messageId":"1163","endLine":293,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1216","line":293,"column":25,"nodeType":"1162","messageId":"1163","endLine":293,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1217","line":390,"column":10,"nodeType":"1162","messageId":"1163","endLine":390,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1218","line":390,"column":47,"nodeType":"1162","messageId":"1163","endLine":390,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1219","line":391,"column":10,"nodeType":"1162","messageId":"1163","endLine":391,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1220","line":391,"column":49,"nodeType":"1162","messageId":"1163","endLine":391,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1221","line":413,"column":10,"nodeType":"1162","messageId":"1163","endLine":413,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1222","line":413,"column":37,"nodeType":"1162","messageId":"1163","endLine":413,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1223","line":419,"column":10,"nodeType":"1162","messageId":"1163","endLine":419,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1224","line":419,"column":37,"nodeType":"1162","messageId":"1163","endLine":419,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1225","line":425,"column":10,"nodeType":"1162","messageId":"1163","endLine":425,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1226","line":425,"column":39,"nodeType":"1162","messageId":"1163","endLine":425,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1227","line":431,"column":10,"nodeType":"1162","messageId":"1163","endLine":431,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1228","line":431,"column":36,"nodeType":"1162","messageId":"1163","endLine":431,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1229","line":437,"column":10,"nodeType":"1162","messageId":"1163","endLine":437,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1230","line":437,"column":42,"nodeType":"1162","messageId":"1163","endLine":437,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1231","line":443,"column":10,"nodeType":"1162","messageId":"1163","endLine":443,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1232","line":443,"column":36,"nodeType":"1162","messageId":"1163","endLine":443,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1233","line":446,"column":10,"nodeType":"1162","messageId":"1163","endLine":446,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1234","line":446,"column":33,"nodeType":"1162","messageId":"1163","endLine":446,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1235","line":449,"column":10,"nodeType":"1162","messageId":"1163","endLine":449,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1236","line":449,"column":41,"nodeType":"1162","messageId":"1163","endLine":449,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1237","line":452,"column":10,"nodeType":"1162","messageId":"1163","endLine":452,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1238","line":452,"column":44,"nodeType":"1162","messageId":"1163","endLine":452,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1239","line":455,"column":10,"nodeType":"1162","messageId":"1163","endLine":455,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1240","line":455,"column":52,"nodeType":"1162","messageId":"1163","endLine":455,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1241","line":458,"column":10,"nodeType":"1162","messageId":"1163","endLine":458,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1242","line":458,"column":46,"nodeType":"1162","messageId":"1163","endLine":458,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1243","line":491,"column":10,"nodeType":"1162","messageId":"1163","endLine":491,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1244","line":491,"column":31,"nodeType":"1162","messageId":"1163","endLine":491,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1245","line":502,"column":10,"nodeType":"1162","messageId":"1163","endLine":502,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1246","line":502,"column":31,"nodeType":"1162","messageId":"1163","endLine":502,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1247","line":509,"column":10,"nodeType":"1162","messageId":"1163","endLine":509,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1248","line":516,"column":10,"nodeType":"1162","messageId":"1163","endLine":516,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1249","line":523,"column":10,"nodeType":"1162","messageId":"1163","endLine":523,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1250","line":530,"column":10,"nodeType":"1162","messageId":"1163","endLine":530,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1251","line":537,"column":10,"nodeType":"1162","messageId":"1163","endLine":537,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1252","line":544,"column":10,"nodeType":"1162","messageId":"1163","endLine":544,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1253","line":551,"column":10,"nodeType":"1162","messageId":"1163","endLine":551,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1254","line":673,"column":5,"nodeType":"1162","messageId":"1163","endLine":673,"endColumn":15},{"ruleId":"1201","severity":1,"message":"1202","line":687,"column":53,"nodeType":"1203","messageId":"1204","endLine":687,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":689,"column":59,"nodeType":"1203","messageId":"1204","endLine":689,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":691,"column":59,"nodeType":"1203","messageId":"1204","endLine":691,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":693,"column":59,"nodeType":"1203","messageId":"1204","endLine":693,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":695,"column":59,"nodeType":"1203","messageId":"1204","endLine":695,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":709,"column":21,"nodeType":"1162","messageId":"1257","endLine":709,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":710,"column":25,"nodeType":"1162","messageId":"1257","endLine":710,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":711,"column":57,"nodeType":"1203","messageId":"1204","endLine":711,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":713,"column":63,"nodeType":"1203","messageId":"1204","endLine":713,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":715,"column":63,"nodeType":"1203","messageId":"1204","endLine":715,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":721,"column":70,"nodeType":"1203","messageId":"1204","endLine":721,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":721,"column":137,"nodeType":"1203","messageId":"1204","endLine":721,"endColumn":139},{"ruleId":"1201","severity":1,"message":"1202","line":744,"column":53,"nodeType":"1203","messageId":"1204","endLine":744,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":746,"column":59,"nodeType":"1203","messageId":"1204","endLine":746,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":748,"column":59,"nodeType":"1203","messageId":"1204","endLine":748,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":750,"column":59,"nodeType":"1203","messageId":"1204","endLine":750,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":752,"column":59,"nodeType":"1203","messageId":"1204","endLine":752,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":766,"column":21,"nodeType":"1162","messageId":"1257","endLine":766,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":767,"column":25,"nodeType":"1162","messageId":"1257","endLine":767,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":768,"column":57,"nodeType":"1203","messageId":"1204","endLine":768,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":770,"column":63,"nodeType":"1203","messageId":"1204","endLine":770,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":772,"column":63,"nodeType":"1203","messageId":"1204","endLine":772,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":781,"column":70,"nodeType":"1203","messageId":"1204","endLine":781,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":781,"column":137,"nodeType":"1203","messageId":"1204","endLine":781,"endColumn":139},{"ruleId":"1201","severity":1,"message":"1202","line":806,"column":53,"nodeType":"1203","messageId":"1204","endLine":806,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":808,"column":59,"nodeType":"1203","messageId":"1204","endLine":808,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":810,"column":59,"nodeType":"1203","messageId":"1204","endLine":810,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":812,"column":59,"nodeType":"1203","messageId":"1204","endLine":812,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":814,"column":59,"nodeType":"1203","messageId":"1204","endLine":814,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":831,"column":21,"nodeType":"1162","messageId":"1257","endLine":831,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":832,"column":25,"nodeType":"1162","messageId":"1257","endLine":832,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":833,"column":57,"nodeType":"1203","messageId":"1204","endLine":833,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":835,"column":63,"nodeType":"1203","messageId":"1204","endLine":835,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":837,"column":63,"nodeType":"1203","messageId":"1204","endLine":837,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":843,"column":70,"nodeType":"1203","messageId":"1204","endLine":843,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":843,"column":137,"nodeType":"1203","messageId":"1204","endLine":843,"endColumn":139},{"ruleId":"1259","severity":1,"message":"1260","line":899,"column":144,"nodeType":"1261","messageId":"1262","endLine":899,"endColumn":145,"suggestions":"1263"},{"ruleId":"1259","severity":1,"message":"1260","line":899,"column":156,"nodeType":"1261","messageId":"1262","endLine":899,"endColumn":157,"suggestions":"1264"},{"ruleId":"1259","severity":1,"message":"1260","line":900,"column":138,"nodeType":"1261","messageId":"1262","endLine":900,"endColumn":139,"suggestions":"1265"},{"ruleId":"1259","severity":1,"message":"1260","line":900,"column":150,"nodeType":"1261","messageId":"1262","endLine":900,"endColumn":151,"suggestions":"1266"},{"ruleId":"1259","severity":1,"message":"1260","line":905,"column":138,"nodeType":"1261","messageId":"1262","endLine":905,"endColumn":139,"suggestions":"1267"},{"ruleId":"1259","severity":1,"message":"1260","line":905,"column":146,"nodeType":"1261","messageId":"1262","endLine":905,"endColumn":147,"suggestions":"1268"},{"ruleId":"1259","severity":1,"message":"1260","line":906,"column":132,"nodeType":"1261","messageId":"1262","endLine":906,"endColumn":133,"suggestions":"1269"},{"ruleId":"1259","severity":1,"message":"1260","line":906,"column":140,"nodeType":"1261","messageId":"1262","endLine":906,"endColumn":141,"suggestions":"1270"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":149,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":150,"suggestions":"1271"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":161,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":162,"suggestions":"1272"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":164,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":165,"suggestions":"1273"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":178,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":179,"suggestions":"1274"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":181,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":182,"suggestions":"1275"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":195,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":196,"suggestions":"1276"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":198,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":199,"suggestions":"1277"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":212,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":213,"suggestions":"1278"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":216,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":217,"suggestions":"1279"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":224,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":225,"suggestions":"1280"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":227,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":228,"suggestions":"1281"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":235,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":236,"suggestions":"1282"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":239,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":240,"suggestions":"1283"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":249,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":250,"suggestions":"1284"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":269,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":270,"suggestions":"1285"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":281,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":282,"suggestions":"1286"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":284,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":285,"suggestions":"1287"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":292,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":293,"suggestions":"1288"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":296,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":297,"suggestions":"1289"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":314,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":315,"suggestions":"1290"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":318,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":319,"suggestions":"1291"},{"ruleId":"1259","severity":1,"message":"1260","line":913,"column":328,"nodeType":"1261","messageId":"1262","endLine":913,"endColumn":329,"suggestions":"1292"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":149,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":150,"suggestions":"1293"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":161,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":162,"suggestions":"1294"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":164,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":165,"suggestions":"1295"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":178,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":179,"suggestions":"1296"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":181,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":182,"suggestions":"1297"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":195,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":196,"suggestions":"1298"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":198,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":199,"suggestions":"1299"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":212,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":213,"suggestions":"1300"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":216,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":217,"suggestions":"1301"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":224,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":225,"suggestions":"1302"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":227,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":228,"suggestions":"1303"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":235,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":236,"suggestions":"1304"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":239,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":240,"suggestions":"1305"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":249,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":250,"suggestions":"1306"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":269,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":270,"suggestions":"1307"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":281,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":282,"suggestions":"1308"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":284,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":285,"suggestions":"1309"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":292,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":293,"suggestions":"1310"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":296,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":297,"suggestions":"1311"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":314,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":315,"suggestions":"1312"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":318,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":319,"suggestions":"1313"},{"ruleId":"1259","severity":1,"message":"1260","line":914,"column":328,"nodeType":"1261","messageId":"1262","endLine":914,"endColumn":329,"suggestions":"1314"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":108,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":109,"suggestions":"1315"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":114,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":115,"suggestions":"1316"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":148,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":149,"suggestions":"1317"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":156,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":157,"suggestions":"1318"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":160,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":161,"suggestions":"1319"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":168,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":169,"suggestions":"1320"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":202,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":203,"suggestions":"1321"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":222,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":223,"suggestions":"1322"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":226,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":227,"suggestions":"1323"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":234,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":235,"suggestions":"1324"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":238,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":239,"suggestions":"1325"},{"ruleId":"1259","severity":1,"message":"1260","line":933,"column":246,"nodeType":"1261","messageId":"1262","endLine":933,"endColumn":247,"suggestions":"1326"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":111,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":112,"suggestions":"1327"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":117,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":118,"suggestions":"1328"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":151,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":152,"suggestions":"1329"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":159,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":160,"suggestions":"1330"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":163,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":164,"suggestions":"1331"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":171,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":172,"suggestions":"1332"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":205,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":206,"suggestions":"1333"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":225,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":226,"suggestions":"1334"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":229,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":230,"suggestions":"1335"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":237,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":238,"suggestions":"1336"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":241,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":242,"suggestions":"1337"},{"ruleId":"1259","severity":1,"message":"1260","line":934,"column":249,"nodeType":"1261","messageId":"1262","endLine":934,"endColumn":250,"suggestions":"1338"},{"ruleId":"1259","severity":1,"message":"1260","line":936,"column":135,"nodeType":"1261","messageId":"1262","endLine":936,"endColumn":136,"suggestions":"1339"},{"ruleId":"1259","severity":1,"message":"1260","line":936,"column":141,"nodeType":"1261","messageId":"1262","endLine":936,"endColumn":142,"suggestions":"1340"},{"ruleId":"1259","severity":1,"message":"1260","line":937,"column":138,"nodeType":"1261","messageId":"1262","endLine":937,"endColumn":139,"suggestions":"1341"},{"ruleId":"1259","severity":1,"message":"1260","line":937,"column":144,"nodeType":"1261","messageId":"1262","endLine":937,"endColumn":145,"suggestions":"1342"},{"ruleId":"1197","severity":1,"message":"1343","line":1094,"column":8,"nodeType":"1199","endLine":1094,"endColumn":10,"suggestions":"1344"},{"ruleId":"1201","severity":1,"message":"1202","line":1289,"column":32,"nodeType":"1203","messageId":"1204","endLine":1289,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":1516,"column":24,"nodeType":"1203","messageId":"1204","endLine":1516,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":1517,"column":71,"nodeType":"1203","messageId":"1204","endLine":1517,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1518,"column":31,"nodeType":"1203","messageId":"1204","endLine":1518,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1519,"column":71,"nodeType":"1203","messageId":"1204","endLine":1519,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1520,"column":31,"nodeType":"1203","messageId":"1204","endLine":1520,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1521,"column":71,"nodeType":"1203","messageId":"1204","endLine":1521,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1522,"column":31,"nodeType":"1203","messageId":"1204","endLine":1522,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1523,"column":71,"nodeType":"1203","messageId":"1204","endLine":1523,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1625,"column":32,"nodeType":"1203","messageId":"1204","endLine":1625,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":1626,"column":69,"nodeType":"1203","messageId":"1204","endLine":1626,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1627,"column":69,"nodeType":"1203","messageId":"1204","endLine":1627,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1762,"column":24,"nodeType":"1203","messageId":"1204","endLine":1762,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":1763,"column":71,"nodeType":"1203","messageId":"1204","endLine":1763,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1764,"column":31,"nodeType":"1203","messageId":"1204","endLine":1764,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1765,"column":71,"nodeType":"1203","messageId":"1204","endLine":1765,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1766,"column":31,"nodeType":"1203","messageId":"1204","endLine":1766,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1767,"column":71,"nodeType":"1203","messageId":"1204","endLine":1767,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1768,"column":31,"nodeType":"1203","messageId":"1204","endLine":1768,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1769,"column":71,"nodeType":"1203","messageId":"1204","endLine":1769,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1871,"column":32,"nodeType":"1203","messageId":"1204","endLine":1871,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":1872,"column":69,"nodeType":"1203","messageId":"1204","endLine":1872,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1873,"column":69,"nodeType":"1203","messageId":"1204","endLine":1873,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1907,"column":24,"nodeType":"1203","messageId":"1204","endLine":1907,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2015,"column":24,"nodeType":"1203","messageId":"1204","endLine":2015,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2016,"column":71,"nodeType":"1203","messageId":"1204","endLine":2016,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2017,"column":31,"nodeType":"1203","messageId":"1204","endLine":2017,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2018,"column":71,"nodeType":"1203","messageId":"1204","endLine":2018,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2019,"column":31,"nodeType":"1203","messageId":"1204","endLine":2019,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2020,"column":71,"nodeType":"1203","messageId":"1204","endLine":2020,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2021,"column":31,"nodeType":"1203","messageId":"1204","endLine":2021,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2022,"column":71,"nodeType":"1203","messageId":"1204","endLine":2022,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2124,"column":32,"nodeType":"1203","messageId":"1204","endLine":2124,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":2125,"column":69,"nodeType":"1203","messageId":"1204","endLine":2125,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2126,"column":69,"nodeType":"1203","messageId":"1204","endLine":2126,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2160,"column":24,"nodeType":"1203","messageId":"1204","endLine":2160,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2160,"column":44,"nodeType":"1203","messageId":"1204","endLine":2160,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1202","line":2160,"column":74,"nodeType":"1203","messageId":"1204","endLine":2160,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":2265,"column":24,"nodeType":"1203","messageId":"1204","endLine":2265,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2266,"column":71,"nodeType":"1203","messageId":"1204","endLine":2266,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2267,"column":31,"nodeType":"1203","messageId":"1204","endLine":2267,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2268,"column":71,"nodeType":"1203","messageId":"1204","endLine":2268,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2269,"column":31,"nodeType":"1203","messageId":"1204","endLine":2269,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2270,"column":71,"nodeType":"1203","messageId":"1204","endLine":2270,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2271,"column":31,"nodeType":"1203","messageId":"1204","endLine":2271,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2272,"column":71,"nodeType":"1203","messageId":"1204","endLine":2272,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2370,"column":32,"nodeType":"1203","messageId":"1204","endLine":2370,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":2371,"column":69,"nodeType":"1203","messageId":"1204","endLine":2371,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2372,"column":69,"nodeType":"1203","messageId":"1204","endLine":2372,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2405,"column":24,"nodeType":"1203","messageId":"1204","endLine":2405,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2405,"column":44,"nodeType":"1203","messageId":"1204","endLine":2405,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1345","line":2491,"column":13,"nodeType":"1162","messageId":"1163","endLine":2491,"endColumn":20},{"ruleId":"1346","severity":1,"message":"1347","line":2515,"column":55,"nodeType":"1203","messageId":"1348","endLine":2515,"endColumn":62},{"ruleId":"1160","severity":1,"message":"1349","line":2581,"column":11,"nodeType":"1162","messageId":"1163","endLine":2581,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":3222,"column":23,"nodeType":"1203","messageId":"1204","endLine":3222,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":3236,"column":27,"nodeType":"1203","messageId":"1204","endLine":3236,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":3257,"column":23,"nodeType":"1203","messageId":"1204","endLine":3257,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":3271,"column":27,"nodeType":"1203","messageId":"1204","endLine":3271,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1350","line":3299,"column":13,"nodeType":"1162","messageId":"1163","endLine":3299,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3583,"column":13,"nodeType":"1162","messageId":"1163","endLine":3583,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3611,"column":13,"nodeType":"1162","messageId":"1163","endLine":3611,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3637,"column":13,"nodeType":"1162","messageId":"1163","endLine":3637,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3663,"column":13,"nodeType":"1162","messageId":"1163","endLine":3663,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3689,"column":13,"nodeType":"1162","messageId":"1163","endLine":3689,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3715,"column":13,"nodeType":"1162","messageId":"1163","endLine":3715,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3741,"column":13,"nodeType":"1162","messageId":"1163","endLine":3741,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3767,"column":13,"nodeType":"1162","messageId":"1163","endLine":3767,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3793,"column":13,"nodeType":"1162","messageId":"1163","endLine":3793,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3821,"column":13,"nodeType":"1162","messageId":"1163","endLine":3821,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3847,"column":13,"nodeType":"1162","messageId":"1163","endLine":3847,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3873,"column":13,"nodeType":"1162","messageId":"1163","endLine":3873,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1350","line":3899,"column":13,"nodeType":"1162","messageId":"1163","endLine":3899,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1351","line":3942,"column":11,"nodeType":"1162","messageId":"1163","endLine":3942,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1352","line":4479,"column":11,"nodeType":"1162","messageId":"1163","endLine":4479,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1353","line":6507,"column":13,"nodeType":"1162","messageId":"1163","endLine":6507,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":6511,"column":25,"nodeType":"1203","messageId":"1204","endLine":6511,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1354","line":6513,"column":13,"nodeType":"1162","messageId":"1163","endLine":6513,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1355","line":6514,"column":13,"nodeType":"1162","messageId":"1163","endLine":6514,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1206","line":6524,"column":11,"nodeType":"1162","messageId":"1163","endLine":6524,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1167","line":6528,"column":11,"nodeType":"1162","messageId":"1163","endLine":6528,"endColumn":20},{"ruleId":"1356","severity":1,"message":"1357","line":6595,"column":25,"nodeType":"1181","endLine":6595,"endColumn":29},{"ruleId":"1176","severity":1,"message":"1177","line":13,"column":1,"nodeType":"1178","endLine":25,"endColumn":2},{"ruleId":"1358","severity":1,"message":"1359","line":18,"column":5,"nodeType":"1360","messageId":"1204","endLine":18,"endColumn":15},{"ruleId":"1160","severity":1,"message":"1361","line":53,"column":15,"nodeType":"1162","messageId":"1163","endLine":53,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1362","line":99,"column":23,"nodeType":"1162","messageId":"1163","endLine":99,"endColumn":31},{"ruleId":"1179","severity":1,"message":"1180","line":216,"column":78,"nodeType":"1181","endLine":216,"endColumn":89},{"ruleId":"1176","severity":1,"message":"1177","line":13,"column":1,"nodeType":"1178","endLine":59,"endColumn":2},{"ruleId":"1160","severity":1,"message":"1363","line":1,"column":7,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1182","line":2,"column":17,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1183","line":2,"column":27,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1184","line":2,"column":38,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1207","line":3,"column":8,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1208","line":3,"column":27,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1209","line":3,"column":41,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1210","line":3,"column":63,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":74},{"ruleId":"1160","severity":1,"message":"1211","line":4,"column":8,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1185","line":7,"column":8,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1186","line":8,"column":10,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1187","line":10,"column":10,"nodeType":"1162","messageId":"1163","endLine":10,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1188","line":11,"column":10,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1189","line":13,"column":8,"nodeType":"1162","messageId":"1163","endLine":13,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1161","line":14,"column":8,"nodeType":"1162","messageId":"1163","endLine":14,"endColumn":17},{"ruleId":"1160","severity":1,"message":"1191","line":22,"column":10,"nodeType":"1162","messageId":"1163","endLine":22,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1192","line":23,"column":10,"nodeType":"1162","messageId":"1163","endLine":23,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1193","line":25,"column":8,"nodeType":"1162","messageId":"1163","endLine":25,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1175","line":38,"column":10,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1194","line":38,"column":18,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1364","line":38,"column":44,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":62},{"ruleId":"1160","severity":1,"message":"1212","line":40,"column":9,"nodeType":"1162","messageId":"1163","endLine":40,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1169","line":43,"column":5,"nodeType":"1162","messageId":"1163","endLine":43,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1170","line":44,"column":5,"nodeType":"1162","messageId":"1163","endLine":44,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1171","line":45,"column":5,"nodeType":"1162","messageId":"1163","endLine":45,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1172","line":46,"column":5,"nodeType":"1162","messageId":"1163","endLine":46,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1173","line":47,"column":5,"nodeType":"1162","messageId":"1163","endLine":47,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1195","line":51,"column":10,"nodeType":"1162","messageId":"1163","endLine":51,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1213","line":54,"column":10,"nodeType":"1162","messageId":"1163","endLine":54,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1214","line":56,"column":8,"nodeType":"1162","messageId":"1163","endLine":56,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1196","line":65,"column":5,"nodeType":"1162","messageId":"1163","endLine":65,"endColumn":9},{"ruleId":"1201","severity":1,"message":"1202","line":86,"column":35,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1365","line":100,"column":10,"nodeType":"1162","messageId":"1163","endLine":100,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1366","line":100,"column":34,"nodeType":"1162","messageId":"1163","endLine":100,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1367","line":101,"column":10,"nodeType":"1162","messageId":"1163","endLine":101,"endColumn":24},{"ruleId":"1160","severity":1,"message":"1368","line":101,"column":26,"nodeType":"1162","messageId":"1163","endLine":101,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1369","line":103,"column":10,"nodeType":"1162","messageId":"1163","endLine":103,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1370","line":103,"column":39,"nodeType":"1162","messageId":"1163","endLine":103,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1371","line":104,"column":10,"nodeType":"1162","messageId":"1163","endLine":104,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1372","line":104,"column":31,"nodeType":"1162","messageId":"1163","endLine":104,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1373","line":106,"column":10,"nodeType":"1162","messageId":"1163","endLine":106,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1374","line":106,"column":37,"nodeType":"1162","messageId":"1163","endLine":106,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1375","line":107,"column":10,"nodeType":"1162","messageId":"1163","endLine":107,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1376","line":107,"column":29,"nodeType":"1162","messageId":"1163","endLine":107,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1377","line":109,"column":10,"nodeType":"1162","messageId":"1163","endLine":109,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1378","line":109,"column":30,"nodeType":"1162","messageId":"1163","endLine":109,"endColumn":51},{"ruleId":"1160","severity":1,"message":"1379","line":110,"column":10,"nodeType":"1162","messageId":"1163","endLine":110,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1380","line":110,"column":22,"nodeType":"1162","messageId":"1163","endLine":110,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1381","line":112,"column":10,"nodeType":"1162","messageId":"1163","endLine":112,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1382","line":112,"column":32,"nodeType":"1162","messageId":"1163","endLine":112,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1383","line":113,"column":10,"nodeType":"1162","messageId":"1163","endLine":113,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1384","line":113,"column":24,"nodeType":"1162","messageId":"1163","endLine":113,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1385","line":116,"column":10,"nodeType":"1162","messageId":"1163","endLine":116,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1386","line":116,"column":45,"nodeType":"1162","messageId":"1163","endLine":116,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1387","line":117,"column":10,"nodeType":"1162","messageId":"1163","endLine":117,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1388","line":117,"column":37,"nodeType":"1162","messageId":"1163","endLine":117,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1389","line":119,"column":10,"nodeType":"1162","messageId":"1163","endLine":119,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1390","line":119,"column":50,"nodeType":"1162","messageId":"1163","endLine":119,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1391","line":120,"column":10,"nodeType":"1162","messageId":"1163","endLine":120,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1392","line":120,"column":42,"nodeType":"1162","messageId":"1163","endLine":120,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1393","line":122,"column":10,"nodeType":"1162","messageId":"1163","endLine":122,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1394","line":122,"column":48,"nodeType":"1162","messageId":"1163","endLine":122,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1395","line":123,"column":10,"nodeType":"1162","messageId":"1163","endLine":123,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1396","line":123,"column":40,"nodeType":"1162","messageId":"1163","endLine":123,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1397","line":125,"column":10,"nodeType":"1162","messageId":"1163","endLine":125,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1398","line":125,"column":41,"nodeType":"1162","messageId":"1163","endLine":125,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1399","line":126,"column":10,"nodeType":"1162","messageId":"1163","endLine":126,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1400","line":126,"column":33,"nodeType":"1162","messageId":"1163","endLine":126,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1401","line":128,"column":10,"nodeType":"1162","messageId":"1163","endLine":128,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1402","line":128,"column":43,"nodeType":"1162","messageId":"1163","endLine":128,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1403","line":129,"column":10,"nodeType":"1162","messageId":"1163","endLine":129,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1404","line":129,"column":35,"nodeType":"1162","messageId":"1163","endLine":129,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1405","line":132,"column":10,"nodeType":"1162","messageId":"1163","endLine":132,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1406","line":132,"column":47,"nodeType":"1162","messageId":"1163","endLine":132,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1407","line":133,"column":10,"nodeType":"1162","messageId":"1163","endLine":133,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1408","line":133,"column":39,"nodeType":"1162","messageId":"1163","endLine":133,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1409","line":135,"column":10,"nodeType":"1162","messageId":"1163","endLine":135,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1410","line":135,"column":52,"nodeType":"1162","messageId":"1163","endLine":135,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1411","line":136,"column":10,"nodeType":"1162","messageId":"1163","endLine":136,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1412","line":136,"column":44,"nodeType":"1162","messageId":"1163","endLine":136,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1413","line":138,"column":10,"nodeType":"1162","messageId":"1163","endLine":138,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1414","line":138,"column":50,"nodeType":"1162","messageId":"1163","endLine":138,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1415","line":139,"column":10,"nodeType":"1162","messageId":"1163","endLine":139,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1416","line":139,"column":42,"nodeType":"1162","messageId":"1163","endLine":139,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1417","line":141,"column":10,"nodeType":"1162","messageId":"1163","endLine":141,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1418","line":141,"column":43,"nodeType":"1162","messageId":"1163","endLine":141,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1419","line":142,"column":10,"nodeType":"1162","messageId":"1163","endLine":142,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1420","line":142,"column":35,"nodeType":"1162","messageId":"1163","endLine":142,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1421","line":144,"column":10,"nodeType":"1162","messageId":"1163","endLine":144,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1422","line":144,"column":45,"nodeType":"1162","messageId":"1163","endLine":144,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1423","line":145,"column":10,"nodeType":"1162","messageId":"1163","endLine":145,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1424","line":145,"column":37,"nodeType":"1162","messageId":"1163","endLine":145,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1425","line":148,"column":10,"nodeType":"1162","messageId":"1163","endLine":148,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1426","line":148,"column":47,"nodeType":"1162","messageId":"1163","endLine":148,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1427","line":149,"column":10,"nodeType":"1162","messageId":"1163","endLine":149,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1428","line":149,"column":39,"nodeType":"1162","messageId":"1163","endLine":149,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1429","line":151,"column":10,"nodeType":"1162","messageId":"1163","endLine":151,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1430","line":151,"column":52,"nodeType":"1162","messageId":"1163","endLine":151,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1431","line":152,"column":10,"nodeType":"1162","messageId":"1163","endLine":152,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1432","line":152,"column":44,"nodeType":"1162","messageId":"1163","endLine":152,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1433","line":154,"column":10,"nodeType":"1162","messageId":"1163","endLine":154,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1434","line":154,"column":50,"nodeType":"1162","messageId":"1163","endLine":154,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1435","line":155,"column":10,"nodeType":"1162","messageId":"1163","endLine":155,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1436","line":155,"column":42,"nodeType":"1162","messageId":"1163","endLine":155,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1437","line":157,"column":10,"nodeType":"1162","messageId":"1163","endLine":157,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1438","line":157,"column":43,"nodeType":"1162","messageId":"1163","endLine":157,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1439","line":158,"column":10,"nodeType":"1162","messageId":"1163","endLine":158,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1440","line":158,"column":35,"nodeType":"1162","messageId":"1163","endLine":158,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1441","line":160,"column":10,"nodeType":"1162","messageId":"1163","endLine":160,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1442","line":160,"column":45,"nodeType":"1162","messageId":"1163","endLine":160,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1443","line":161,"column":10,"nodeType":"1162","messageId":"1163","endLine":161,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1444","line":161,"column":37,"nodeType":"1162","messageId":"1163","endLine":161,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1445","line":164,"column":10,"nodeType":"1162","messageId":"1163","endLine":164,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1446","line":164,"column":47,"nodeType":"1162","messageId":"1163","endLine":164,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1447","line":165,"column":10,"nodeType":"1162","messageId":"1163","endLine":165,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1448","line":165,"column":39,"nodeType":"1162","messageId":"1163","endLine":165,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1449","line":167,"column":10,"nodeType":"1162","messageId":"1163","endLine":167,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1450","line":167,"column":52,"nodeType":"1162","messageId":"1163","endLine":167,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1451","line":168,"column":10,"nodeType":"1162","messageId":"1163","endLine":168,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1452","line":168,"column":44,"nodeType":"1162","messageId":"1163","endLine":168,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1453","line":170,"column":10,"nodeType":"1162","messageId":"1163","endLine":170,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1454","line":170,"column":50,"nodeType":"1162","messageId":"1163","endLine":170,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1455","line":171,"column":10,"nodeType":"1162","messageId":"1163","endLine":171,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1456","line":171,"column":42,"nodeType":"1162","messageId":"1163","endLine":171,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1457","line":173,"column":10,"nodeType":"1162","messageId":"1163","endLine":173,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1458","line":173,"column":43,"nodeType":"1162","messageId":"1163","endLine":173,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1459","line":174,"column":10,"nodeType":"1162","messageId":"1163","endLine":174,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1460","line":174,"column":35,"nodeType":"1162","messageId":"1163","endLine":174,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1461","line":176,"column":10,"nodeType":"1162","messageId":"1163","endLine":176,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1462","line":176,"column":45,"nodeType":"1162","messageId":"1163","endLine":176,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1463","line":177,"column":10,"nodeType":"1162","messageId":"1163","endLine":177,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1464","line":177,"column":37,"nodeType":"1162","messageId":"1163","endLine":177,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1465","line":180,"column":10,"nodeType":"1162","messageId":"1163","endLine":180,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1466","line":180,"column":43,"nodeType":"1162","messageId":"1163","endLine":180,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1467","line":181,"column":10,"nodeType":"1162","messageId":"1163","endLine":181,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1468","line":181,"column":35,"nodeType":"1162","messageId":"1163","endLine":181,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1469","line":183,"column":10,"nodeType":"1162","messageId":"1163","endLine":183,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1470","line":183,"column":48,"nodeType":"1162","messageId":"1163","endLine":183,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1471","line":184,"column":10,"nodeType":"1162","messageId":"1163","endLine":184,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1472","line":184,"column":40,"nodeType":"1162","messageId":"1163","endLine":184,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1473","line":186,"column":10,"nodeType":"1162","messageId":"1163","endLine":186,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1474","line":186,"column":46,"nodeType":"1162","messageId":"1163","endLine":186,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1475","line":187,"column":10,"nodeType":"1162","messageId":"1163","endLine":187,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1476","line":187,"column":38,"nodeType":"1162","messageId":"1163","endLine":187,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1477","line":189,"column":10,"nodeType":"1162","messageId":"1163","endLine":189,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1478","line":189,"column":39,"nodeType":"1162","messageId":"1163","endLine":189,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1479","line":190,"column":10,"nodeType":"1162","messageId":"1163","endLine":190,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1480","line":190,"column":31,"nodeType":"1162","messageId":"1163","endLine":190,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1481","line":192,"column":10,"nodeType":"1162","messageId":"1163","endLine":192,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1482","line":192,"column":41,"nodeType":"1162","messageId":"1163","endLine":192,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1483","line":193,"column":10,"nodeType":"1162","messageId":"1163","endLine":193,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1484","line":193,"column":33,"nodeType":"1162","messageId":"1163","endLine":193,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1485","line":196,"column":10,"nodeType":"1162","messageId":"1163","endLine":196,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1486","line":196,"column":40,"nodeType":"1162","messageId":"1163","endLine":196,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1487","line":197,"column":10,"nodeType":"1162","messageId":"1163","endLine":197,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1488","line":197,"column":32,"nodeType":"1162","messageId":"1163","endLine":197,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1489","line":199,"column":10,"nodeType":"1162","messageId":"1163","endLine":199,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1490","line":199,"column":45,"nodeType":"1162","messageId":"1163","endLine":199,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1491","line":200,"column":10,"nodeType":"1162","messageId":"1163","endLine":200,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1492","line":200,"column":37,"nodeType":"1162","messageId":"1163","endLine":200,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1493","line":202,"column":10,"nodeType":"1162","messageId":"1163","endLine":202,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1494","line":202,"column":43,"nodeType":"1162","messageId":"1163","endLine":202,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1495","line":203,"column":10,"nodeType":"1162","messageId":"1163","endLine":203,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1496","line":203,"column":35,"nodeType":"1162","messageId":"1163","endLine":203,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1497","line":205,"column":10,"nodeType":"1162","messageId":"1163","endLine":205,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1498","line":205,"column":36,"nodeType":"1162","messageId":"1163","endLine":205,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1499","line":206,"column":10,"nodeType":"1162","messageId":"1163","endLine":206,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1500","line":206,"column":28,"nodeType":"1162","messageId":"1163","endLine":206,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1501","line":208,"column":10,"nodeType":"1162","messageId":"1163","endLine":208,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1502","line":208,"column":38,"nodeType":"1162","messageId":"1163","endLine":208,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1503","line":209,"column":10,"nodeType":"1162","messageId":"1163","endLine":209,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1504","line":209,"column":30,"nodeType":"1162","messageId":"1163","endLine":209,"endColumn":51},{"ruleId":"1160","severity":1,"message":"1505","line":212,"column":10,"nodeType":"1162","messageId":"1163","endLine":212,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1506","line":212,"column":44,"nodeType":"1162","messageId":"1163","endLine":212,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1507","line":213,"column":10,"nodeType":"1162","messageId":"1163","endLine":213,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1508","line":213,"column":36,"nodeType":"1162","messageId":"1163","endLine":213,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1509","line":215,"column":10,"nodeType":"1162","messageId":"1163","endLine":215,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1510","line":215,"column":49,"nodeType":"1162","messageId":"1163","endLine":215,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1511","line":216,"column":10,"nodeType":"1162","messageId":"1163","endLine":216,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1512","line":216,"column":41,"nodeType":"1162","messageId":"1163","endLine":216,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1513","line":218,"column":10,"nodeType":"1162","messageId":"1163","endLine":218,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1514","line":218,"column":47,"nodeType":"1162","messageId":"1163","endLine":218,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1515","line":219,"column":10,"nodeType":"1162","messageId":"1163","endLine":219,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1516","line":219,"column":39,"nodeType":"1162","messageId":"1163","endLine":219,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1517","line":221,"column":10,"nodeType":"1162","messageId":"1163","endLine":221,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1518","line":221,"column":40,"nodeType":"1162","messageId":"1163","endLine":221,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1519","line":222,"column":10,"nodeType":"1162","messageId":"1163","endLine":222,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1520","line":222,"column":32,"nodeType":"1162","messageId":"1163","endLine":222,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1521","line":224,"column":10,"nodeType":"1162","messageId":"1163","endLine":224,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1522","line":224,"column":42,"nodeType":"1162","messageId":"1163","endLine":224,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1523","line":225,"column":10,"nodeType":"1162","messageId":"1163","endLine":225,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1524","line":225,"column":34,"nodeType":"1162","messageId":"1163","endLine":225,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1525","line":228,"column":10,"nodeType":"1162","messageId":"1163","endLine":228,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1526","line":228,"column":49,"nodeType":"1162","messageId":"1163","endLine":228,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1527","line":229,"column":10,"nodeType":"1162","messageId":"1163","endLine":229,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1528","line":229,"column":41,"nodeType":"1162","messageId":"1163","endLine":229,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1529","line":230,"column":10,"nodeType":"1162","messageId":"1163","endLine":230,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1530","line":230,"column":50,"nodeType":"1162","messageId":"1163","endLine":230,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1531","line":231,"column":10,"nodeType":"1162","messageId":"1163","endLine":231,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1532","line":231,"column":42,"nodeType":"1162","messageId":"1163","endLine":231,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1533","line":233,"column":10,"nodeType":"1162","messageId":"1163","endLine":233,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1534","line":233,"column":51,"nodeType":"1162","messageId":"1163","endLine":233,"endColumn":93},{"ruleId":"1160","severity":1,"message":"1535","line":234,"column":10,"nodeType":"1162","messageId":"1163","endLine":234,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1536","line":234,"column":43,"nodeType":"1162","messageId":"1163","endLine":234,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1537","line":235,"column":10,"nodeType":"1162","messageId":"1163","endLine":235,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1538","line":235,"column":52,"nodeType":"1162","messageId":"1163","endLine":235,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1539","line":236,"column":10,"nodeType":"1162","messageId":"1163","endLine":236,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1540","line":236,"column":44,"nodeType":"1162","messageId":"1163","endLine":236,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1541","line":238,"column":10,"nodeType":"1162","messageId":"1163","endLine":238,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1542","line":238,"column":51,"nodeType":"1162","messageId":"1163","endLine":238,"endColumn":93},{"ruleId":"1160","severity":1,"message":"1543","line":239,"column":10,"nodeType":"1162","messageId":"1163","endLine":239,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1544","line":239,"column":43,"nodeType":"1162","messageId":"1163","endLine":239,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1545","line":240,"column":10,"nodeType":"1162","messageId":"1163","endLine":240,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1546","line":240,"column":52,"nodeType":"1162","messageId":"1163","endLine":240,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1547","line":241,"column":10,"nodeType":"1162","messageId":"1163","endLine":241,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1548","line":241,"column":44,"nodeType":"1162","messageId":"1163","endLine":241,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1549","line":243,"column":10,"nodeType":"1162","messageId":"1163","endLine":243,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1550","line":243,"column":51,"nodeType":"1162","messageId":"1163","endLine":243,"endColumn":93},{"ruleId":"1160","severity":1,"message":"1551","line":244,"column":10,"nodeType":"1162","messageId":"1163","endLine":244,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1552","line":244,"column":43,"nodeType":"1162","messageId":"1163","endLine":244,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1553","line":245,"column":10,"nodeType":"1162","messageId":"1163","endLine":245,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1554","line":245,"column":52,"nodeType":"1162","messageId":"1163","endLine":245,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1555","line":246,"column":10,"nodeType":"1162","messageId":"1163","endLine":246,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1556","line":246,"column":44,"nodeType":"1162","messageId":"1163","endLine":246,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1557","line":248,"column":10,"nodeType":"1162","messageId":"1163","endLine":248,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1558","line":248,"column":47,"nodeType":"1162","messageId":"1163","endLine":248,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1559","line":249,"column":10,"nodeType":"1162","messageId":"1163","endLine":249,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1560","line":249,"column":39,"nodeType":"1162","messageId":"1163","endLine":249,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1561","line":250,"column":10,"nodeType":"1162","messageId":"1163","endLine":250,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1562","line":250,"column":48,"nodeType":"1162","messageId":"1163","endLine":250,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1563","line":251,"column":10,"nodeType":"1162","messageId":"1163","endLine":251,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1564","line":251,"column":40,"nodeType":"1162","messageId":"1163","endLine":251,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1565","line":253,"column":10,"nodeType":"1162","messageId":"1163","endLine":253,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1566","line":253,"column":44,"nodeType":"1162","messageId":"1163","endLine":253,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1567","line":254,"column":10,"nodeType":"1162","messageId":"1163","endLine":254,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1568","line":254,"column":36,"nodeType":"1162","messageId":"1163","endLine":254,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1569","line":255,"column":10,"nodeType":"1162","messageId":"1163","endLine":255,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1570","line":255,"column":45,"nodeType":"1162","messageId":"1163","endLine":255,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1571","line":256,"column":10,"nodeType":"1162","messageId":"1163","endLine":256,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1572","line":256,"column":37,"nodeType":"1162","messageId":"1163","endLine":256,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1573","line":258,"column":10,"nodeType":"1162","messageId":"1163","endLine":258,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1574","line":258,"column":48,"nodeType":"1162","messageId":"1163","endLine":258,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1575","line":259,"column":10,"nodeType":"1162","messageId":"1163","endLine":259,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1576","line":259,"column":40,"nodeType":"1162","messageId":"1163","endLine":259,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1577","line":260,"column":10,"nodeType":"1162","messageId":"1163","endLine":260,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1578","line":260,"column":49,"nodeType":"1162","messageId":"1163","endLine":260,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1579","line":261,"column":10,"nodeType":"1162","messageId":"1163","endLine":261,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1580","line":261,"column":41,"nodeType":"1162","messageId":"1163","endLine":261,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1581","line":263,"column":10,"nodeType":"1162","messageId":"1163","endLine":263,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1582","line":263,"column":32,"nodeType":"1162","messageId":"1163","endLine":263,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1583","line":264,"column":10,"nodeType":"1162","messageId":"1163","endLine":264,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1584","line":264,"column":24,"nodeType":"1162","messageId":"1163","endLine":264,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1585","line":266,"column":30,"nodeType":"1162","messageId":"1163","endLine":266,"endColumn":51},{"ruleId":"1160","severity":1,"message":"1586","line":268,"column":10,"nodeType":"1162","messageId":"1163","endLine":268,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1587","line":268,"column":32,"nodeType":"1162","messageId":"1163","endLine":268,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1588","line":269,"column":10,"nodeType":"1162","messageId":"1163","endLine":269,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1589","line":269,"column":24,"nodeType":"1162","messageId":"1163","endLine":269,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1590","line":271,"column":42,"nodeType":"1162","messageId":"1163","endLine":271,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1591","line":272,"column":36,"nodeType":"1162","messageId":"1163","endLine":272,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1592","line":273,"column":35,"nodeType":"1162","messageId":"1163","endLine":273,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1593","line":275,"column":34,"nodeType":"1162","messageId":"1163","endLine":275,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1594","line":276,"column":44,"nodeType":"1162","messageId":"1163","endLine":276,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1595","line":277,"column":43,"nodeType":"1162","messageId":"1163","endLine":277,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1596","line":279,"column":48,"nodeType":"1162","messageId":"1163","endLine":279,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1597","line":280,"column":57,"nodeType":"1162","messageId":"1163","endLine":280,"endColumn":105},{"ruleId":"1160","severity":1,"message":"1598","line":281,"column":58,"nodeType":"1162","messageId":"1163","endLine":281,"endColumn":107},{"ruleId":"1160","severity":1,"message":"1599","line":282,"column":56,"nodeType":"1162","messageId":"1163","endLine":282,"endColumn":103},{"ruleId":"1160","severity":1,"message":"1600","line":283,"column":60,"nodeType":"1162","messageId":"1163","endLine":283,"endColumn":111},{"ruleId":"1160","severity":1,"message":"1215","line":285,"column":10,"nodeType":"1162","messageId":"1163","endLine":285,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1216","line":285,"column":25,"nodeType":"1162","messageId":"1163","endLine":285,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1601","line":286,"column":22,"nodeType":"1162","messageId":"1163","endLine":286,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1602","line":288,"column":27,"nodeType":"1162","messageId":"1163","endLine":288,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1603","line":289,"column":27,"nodeType":"1162","messageId":"1163","endLine":289,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1604","line":290,"column":29,"nodeType":"1162","messageId":"1163","endLine":290,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1605","line":291,"column":28,"nodeType":"1162","messageId":"1163","endLine":291,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1606","line":292,"column":27,"nodeType":"1162","messageId":"1163","endLine":292,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1607","line":293,"column":29,"nodeType":"1162","messageId":"1163","endLine":293,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1608","line":296,"column":10,"nodeType":"1162","messageId":"1163","endLine":296,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1609","line":296,"column":41,"nodeType":"1162","messageId":"1163","endLine":296,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1610","line":297,"column":10,"nodeType":"1162","messageId":"1163","endLine":297,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1611","line":297,"column":33,"nodeType":"1162","messageId":"1163","endLine":297,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1612","line":300,"column":10,"nodeType":"1162","messageId":"1163","endLine":300,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1613","line":300,"column":40,"nodeType":"1162","messageId":"1163","endLine":300,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1614","line":301,"column":10,"nodeType":"1162","messageId":"1163","endLine":301,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1615","line":301,"column":32,"nodeType":"1162","messageId":"1163","endLine":301,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1616","line":304,"column":10,"nodeType":"1162","messageId":"1163","endLine":304,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1617","line":304,"column":43,"nodeType":"1162","messageId":"1163","endLine":304,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1618","line":305,"column":10,"nodeType":"1162","messageId":"1163","endLine":305,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1619","line":305,"column":35,"nodeType":"1162","messageId":"1163","endLine":305,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1620","line":308,"column":10,"nodeType":"1162","messageId":"1163","endLine":308,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1621","line":308,"column":43,"nodeType":"1162","messageId":"1163","endLine":308,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1622","line":309,"column":10,"nodeType":"1162","messageId":"1163","endLine":309,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1623","line":309,"column":35,"nodeType":"1162","messageId":"1163","endLine":309,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1624","line":312,"column":10,"nodeType":"1162","messageId":"1163","endLine":312,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1625","line":312,"column":41,"nodeType":"1162","messageId":"1163","endLine":312,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1626","line":313,"column":10,"nodeType":"1162","messageId":"1163","endLine":313,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1627","line":313,"column":33,"nodeType":"1162","messageId":"1163","endLine":313,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1628","line":316,"column":10,"nodeType":"1162","messageId":"1163","endLine":316,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1629","line":316,"column":40,"nodeType":"1162","messageId":"1163","endLine":316,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1630","line":317,"column":10,"nodeType":"1162","messageId":"1163","endLine":317,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1631","line":317,"column":32,"nodeType":"1162","messageId":"1163","endLine":317,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1632","line":320,"column":10,"nodeType":"1162","messageId":"1163","endLine":320,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1633","line":320,"column":46,"nodeType":"1162","messageId":"1163","endLine":320,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1634","line":321,"column":10,"nodeType":"1162","messageId":"1163","endLine":321,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1635","line":321,"column":38,"nodeType":"1162","messageId":"1163","endLine":321,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1636","line":323,"column":39,"nodeType":"1162","messageId":"1163","endLine":323,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1637","line":326,"column":10,"nodeType":"1162","messageId":"1163","endLine":326,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1638","line":326,"column":47,"nodeType":"1162","messageId":"1163","endLine":326,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1639","line":327,"column":10,"nodeType":"1162","messageId":"1163","endLine":327,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1640","line":327,"column":39,"nodeType":"1162","messageId":"1163","endLine":327,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1641","line":330,"column":10,"nodeType":"1162","messageId":"1163","endLine":330,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1642","line":330,"column":41,"nodeType":"1162","messageId":"1163","endLine":330,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1643","line":331,"column":10,"nodeType":"1162","messageId":"1163","endLine":331,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1644","line":331,"column":33,"nodeType":"1162","messageId":"1163","endLine":331,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1645","line":333,"column":10,"nodeType":"1162","messageId":"1163","endLine":333,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1646","line":333,"column":49,"nodeType":"1162","messageId":"1163","endLine":333,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1647","line":334,"column":10,"nodeType":"1162","messageId":"1163","endLine":334,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1648","line":334,"column":41,"nodeType":"1162","messageId":"1163","endLine":334,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1649","line":336,"column":34,"nodeType":"1162","messageId":"1163","endLine":336,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1650","line":339,"column":10,"nodeType":"1162","messageId":"1163","endLine":339,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1651","line":339,"column":45,"nodeType":"1162","messageId":"1163","endLine":339,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1652","line":340,"column":10,"nodeType":"1162","messageId":"1163","endLine":340,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1653","line":340,"column":37,"nodeType":"1162","messageId":"1163","endLine":340,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1654","line":342,"column":38,"nodeType":"1162","messageId":"1163","endLine":342,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1655","line":345,"column":44,"nodeType":"1162","messageId":"1163","endLine":345,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1656","line":348,"column":43,"nodeType":"1162","messageId":"1163","endLine":348,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1657","line":350,"column":25,"nodeType":"1162","messageId":"1163","endLine":350,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1658","line":351,"column":31,"nodeType":"1162","messageId":"1163","endLine":351,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1659","line":352,"column":25,"nodeType":"1162","messageId":"1163","endLine":352,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1660","line":353,"column":28,"nodeType":"1162","messageId":"1163","endLine":353,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1661","line":354,"column":26,"nodeType":"1162","messageId":"1163","endLine":354,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1662","line":355,"column":26,"nodeType":"1162","messageId":"1163","endLine":355,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1663","line":358,"column":43,"nodeType":"1162","messageId":"1163","endLine":358,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1664","line":361,"column":49,"nodeType":"1162","messageId":"1163","endLine":361,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1665","line":364,"column":47,"nodeType":"1162","messageId":"1163","endLine":364,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1666","line":367,"column":47,"nodeType":"1162","messageId":"1163","endLine":367,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1667","line":370,"column":49,"nodeType":"1162","messageId":"1163","endLine":370,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1668","line":373,"column":45,"nodeType":"1162","messageId":"1163","endLine":373,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1669","line":376,"column":45,"nodeType":"1162","messageId":"1163","endLine":376,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1670","line":379,"column":10,"nodeType":"1162","messageId":"1163","endLine":379,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1671","line":379,"column":47,"nodeType":"1162","messageId":"1163","endLine":379,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1672","line":380,"column":10,"nodeType":"1162","messageId":"1163","endLine":380,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1673","line":380,"column":39,"nodeType":"1162","messageId":"1163","endLine":380,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1217","line":382,"column":10,"nodeType":"1162","messageId":"1163","endLine":382,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1218","line":382,"column":47,"nodeType":"1162","messageId":"1163","endLine":382,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1219","line":383,"column":10,"nodeType":"1162","messageId":"1163","endLine":383,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1220","line":383,"column":49,"nodeType":"1162","messageId":"1163","endLine":383,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1221","line":405,"column":10,"nodeType":"1162","messageId":"1163","endLine":405,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1222","line":405,"column":37,"nodeType":"1162","messageId":"1163","endLine":405,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1223","line":411,"column":10,"nodeType":"1162","messageId":"1163","endLine":411,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1224","line":411,"column":37,"nodeType":"1162","messageId":"1163","endLine":411,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1225","line":417,"column":10,"nodeType":"1162","messageId":"1163","endLine":417,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1226","line":417,"column":39,"nodeType":"1162","messageId":"1163","endLine":417,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1227","line":423,"column":10,"nodeType":"1162","messageId":"1163","endLine":423,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1228","line":423,"column":36,"nodeType":"1162","messageId":"1163","endLine":423,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1229","line":429,"column":10,"nodeType":"1162","messageId":"1163","endLine":429,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1230","line":429,"column":42,"nodeType":"1162","messageId":"1163","endLine":429,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1231","line":435,"column":10,"nodeType":"1162","messageId":"1163","endLine":435,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1232","line":435,"column":36,"nodeType":"1162","messageId":"1163","endLine":435,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1233","line":438,"column":10,"nodeType":"1162","messageId":"1163","endLine":438,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1234","line":438,"column":33,"nodeType":"1162","messageId":"1163","endLine":438,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1235","line":441,"column":10,"nodeType":"1162","messageId":"1163","endLine":441,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1236","line":441,"column":41,"nodeType":"1162","messageId":"1163","endLine":441,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1237","line":444,"column":10,"nodeType":"1162","messageId":"1163","endLine":444,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1238","line":444,"column":44,"nodeType":"1162","messageId":"1163","endLine":444,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1239","line":447,"column":10,"nodeType":"1162","messageId":"1163","endLine":447,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1240","line":447,"column":52,"nodeType":"1162","messageId":"1163","endLine":447,"endColumn":95},{"ruleId":"1160","severity":1,"message":"1241","line":450,"column":10,"nodeType":"1162","messageId":"1163","endLine":450,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1242","line":450,"column":46,"nodeType":"1162","messageId":"1163","endLine":450,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1674","line":453,"column":33,"nodeType":"1162","messageId":"1163","endLine":453,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1675","line":456,"column":35,"nodeType":"1162","messageId":"1163","endLine":456,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1676","line":459,"column":33,"nodeType":"1162","messageId":"1163","endLine":459,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1677","line":462,"column":35,"nodeType":"1162","messageId":"1163","endLine":462,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1678","line":465,"column":10,"nodeType":"1162","messageId":"1163","endLine":465,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1679","line":465,"column":46,"nodeType":"1162","messageId":"1163","endLine":465,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1680","line":466,"column":10,"nodeType":"1162","messageId":"1163","endLine":466,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1681","line":466,"column":38,"nodeType":"1162","messageId":"1163","endLine":466,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1682","line":469,"column":10,"nodeType":"1162","messageId":"1163","endLine":469,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1683","line":469,"column":45,"nodeType":"1162","messageId":"1163","endLine":469,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1684","line":470,"column":10,"nodeType":"1162","messageId":"1163","endLine":470,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1685","line":470,"column":37,"nodeType":"1162","messageId":"1163","endLine":470,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1686","line":473,"column":10,"nodeType":"1162","messageId":"1163","endLine":473,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1687","line":473,"column":51,"nodeType":"1162","messageId":"1163","endLine":473,"endColumn":93},{"ruleId":"1160","severity":1,"message":"1688","line":474,"column":10,"nodeType":"1162","messageId":"1163","endLine":474,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1689","line":474,"column":43,"nodeType":"1162","messageId":"1163","endLine":474,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1690","line":477,"column":10,"nodeType":"1162","messageId":"1163","endLine":477,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1691","line":477,"column":47,"nodeType":"1162","messageId":"1163","endLine":477,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1692","line":478,"column":10,"nodeType":"1162","messageId":"1163","endLine":478,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1693","line":478,"column":39,"nodeType":"1162","messageId":"1163","endLine":478,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1243","line":481,"column":10,"nodeType":"1162","messageId":"1163","endLine":481,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1244","line":481,"column":31,"nodeType":"1162","messageId":"1163","endLine":481,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1694","line":484,"column":25,"nodeType":"1162","messageId":"1163","endLine":484,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1695","line":486,"column":25,"nodeType":"1162","messageId":"1163","endLine":486,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1696","line":489,"column":10,"nodeType":"1162","messageId":"1163","endLine":489,"endColumn":24},{"ruleId":"1160","severity":1,"message":"1697","line":489,"column":26,"nodeType":"1162","messageId":"1163","endLine":489,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1245","line":492,"column":10,"nodeType":"1162","messageId":"1163","endLine":492,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1246","line":492,"column":31,"nodeType":"1162","messageId":"1163","endLine":492,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1698","line":494,"column":31,"nodeType":"1162","messageId":"1163","endLine":494,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1699","line":496,"column":37,"nodeType":"1162","messageId":"1163","endLine":496,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1247","line":499,"column":10,"nodeType":"1162","messageId":"1163","endLine":499,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1700","line":499,"column":41,"nodeType":"1162","messageId":"1163","endLine":499,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1701","line":500,"column":10,"nodeType":"1162","messageId":"1163","endLine":500,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1702","line":500,"column":33,"nodeType":"1162","messageId":"1163","endLine":500,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1703","line":501,"column":10,"nodeType":"1162","messageId":"1163","endLine":501,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1704","line":501,"column":49,"nodeType":"1162","messageId":"1163","endLine":501,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1705","line":502,"column":10,"nodeType":"1162","messageId":"1163","endLine":502,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1706","line":502,"column":41,"nodeType":"1162","messageId":"1163","endLine":502,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1707","line":503,"column":10,"nodeType":"1162","messageId":"1163","endLine":503,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1708","line":503,"column":50,"nodeType":"1162","messageId":"1163","endLine":503,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1709","line":504,"column":10,"nodeType":"1162","messageId":"1163","endLine":504,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1710","line":504,"column":42,"nodeType":"1162","messageId":"1163","endLine":504,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1248","line":506,"column":10,"nodeType":"1162","messageId":"1163","endLine":506,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1711","line":506,"column":36,"nodeType":"1162","messageId":"1163","endLine":506,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1712","line":507,"column":10,"nodeType":"1162","messageId":"1163","endLine":507,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1713","line":507,"column":28,"nodeType":"1162","messageId":"1163","endLine":507,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1714","line":508,"column":10,"nodeType":"1162","messageId":"1163","endLine":508,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1715","line":508,"column":44,"nodeType":"1162","messageId":"1163","endLine":508,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1716","line":509,"column":10,"nodeType":"1162","messageId":"1163","endLine":509,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1717","line":509,"column":36,"nodeType":"1162","messageId":"1163","endLine":509,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1718","line":510,"column":10,"nodeType":"1162","messageId":"1163","endLine":510,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1719","line":510,"column":45,"nodeType":"1162","messageId":"1163","endLine":510,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1720","line":511,"column":10,"nodeType":"1162","messageId":"1163","endLine":511,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1721","line":511,"column":37,"nodeType":"1162","messageId":"1163","endLine":511,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1249","line":513,"column":10,"nodeType":"1162","messageId":"1163","endLine":513,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1722","line":513,"column":36,"nodeType":"1162","messageId":"1163","endLine":513,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1723","line":514,"column":10,"nodeType":"1162","messageId":"1163","endLine":514,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1724","line":514,"column":28,"nodeType":"1162","messageId":"1163","endLine":514,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1725","line":515,"column":10,"nodeType":"1162","messageId":"1163","endLine":515,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1726","line":515,"column":44,"nodeType":"1162","messageId":"1163","endLine":515,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1727","line":516,"column":10,"nodeType":"1162","messageId":"1163","endLine":516,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1728","line":516,"column":36,"nodeType":"1162","messageId":"1163","endLine":516,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1729","line":517,"column":10,"nodeType":"1162","messageId":"1163","endLine":517,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1730","line":517,"column":45,"nodeType":"1162","messageId":"1163","endLine":517,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1731","line":518,"column":10,"nodeType":"1162","messageId":"1163","endLine":518,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1732","line":518,"column":37,"nodeType":"1162","messageId":"1163","endLine":518,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1250","line":520,"column":10,"nodeType":"1162","messageId":"1163","endLine":520,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1733","line":520,"column":36,"nodeType":"1162","messageId":"1163","endLine":520,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1734","line":521,"column":10,"nodeType":"1162","messageId":"1163","endLine":521,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1735","line":521,"column":28,"nodeType":"1162","messageId":"1163","endLine":521,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1736","line":522,"column":10,"nodeType":"1162","messageId":"1163","endLine":522,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1737","line":522,"column":44,"nodeType":"1162","messageId":"1163","endLine":522,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1738","line":523,"column":10,"nodeType":"1162","messageId":"1163","endLine":523,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1739","line":523,"column":36,"nodeType":"1162","messageId":"1163","endLine":523,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1740","line":524,"column":10,"nodeType":"1162","messageId":"1163","endLine":524,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1741","line":524,"column":45,"nodeType":"1162","messageId":"1163","endLine":524,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1742","line":525,"column":10,"nodeType":"1162","messageId":"1163","endLine":525,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1743","line":525,"column":37,"nodeType":"1162","messageId":"1163","endLine":525,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1251","line":527,"column":10,"nodeType":"1162","messageId":"1163","endLine":527,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1744","line":527,"column":39,"nodeType":"1162","messageId":"1163","endLine":527,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1745","line":528,"column":10,"nodeType":"1162","messageId":"1163","endLine":528,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1746","line":528,"column":31,"nodeType":"1162","messageId":"1163","endLine":528,"endColumn":53},{"ruleId":"1160","severity":1,"message":"1747","line":529,"column":10,"nodeType":"1162","messageId":"1163","endLine":529,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1748","line":529,"column":47,"nodeType":"1162","messageId":"1163","endLine":529,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1749","line":530,"column":10,"nodeType":"1162","messageId":"1163","endLine":530,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1750","line":530,"column":39,"nodeType":"1162","messageId":"1163","endLine":530,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1751","line":531,"column":10,"nodeType":"1162","messageId":"1163","endLine":531,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1752","line":531,"column":48,"nodeType":"1162","messageId":"1163","endLine":531,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1753","line":532,"column":10,"nodeType":"1162","messageId":"1163","endLine":532,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1754","line":532,"column":40,"nodeType":"1162","messageId":"1163","endLine":532,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1252","line":534,"column":10,"nodeType":"1162","messageId":"1163","endLine":534,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1755","line":534,"column":36,"nodeType":"1162","messageId":"1163","endLine":534,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1756","line":535,"column":10,"nodeType":"1162","messageId":"1163","endLine":535,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1757","line":535,"column":28,"nodeType":"1162","messageId":"1163","endLine":535,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1758","line":536,"column":10,"nodeType":"1162","messageId":"1163","endLine":536,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1759","line":536,"column":44,"nodeType":"1162","messageId":"1163","endLine":536,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1760","line":537,"column":10,"nodeType":"1162","messageId":"1163","endLine":537,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1761","line":537,"column":36,"nodeType":"1162","messageId":"1163","endLine":537,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1762","line":538,"column":10,"nodeType":"1162","messageId":"1163","endLine":538,"endColumn":43},{"ruleId":"1160","severity":1,"message":"1763","line":538,"column":45,"nodeType":"1162","messageId":"1163","endLine":538,"endColumn":81},{"ruleId":"1160","severity":1,"message":"1764","line":539,"column":10,"nodeType":"1162","messageId":"1163","endLine":539,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1765","line":539,"column":37,"nodeType":"1162","messageId":"1163","endLine":539,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1253","line":541,"column":10,"nodeType":"1162","messageId":"1163","endLine":541,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1766","line":541,"column":40,"nodeType":"1162","messageId":"1163","endLine":541,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1767","line":542,"column":10,"nodeType":"1162","messageId":"1163","endLine":542,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1768","line":542,"column":32,"nodeType":"1162","messageId":"1163","endLine":542,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1769","line":543,"column":10,"nodeType":"1162","messageId":"1163","endLine":543,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1770","line":543,"column":48,"nodeType":"1162","messageId":"1163","endLine":543,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1771","line":544,"column":10,"nodeType":"1162","messageId":"1163","endLine":544,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1772","line":544,"column":40,"nodeType":"1162","messageId":"1163","endLine":544,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1773","line":545,"column":10,"nodeType":"1162","messageId":"1163","endLine":545,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1774","line":545,"column":49,"nodeType":"1162","messageId":"1163","endLine":545,"endColumn":89},{"ruleId":"1160","severity":1,"message":"1775","line":546,"column":10,"nodeType":"1162","messageId":"1163","endLine":546,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1776","line":546,"column":41,"nodeType":"1162","messageId":"1163","endLine":546,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1777","line":549,"column":10,"nodeType":"1162","messageId":"1163","endLine":549,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1778","line":549,"column":37,"nodeType":"1162","messageId":"1163","endLine":549,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1779","line":550,"column":10,"nodeType":"1162","messageId":"1163","endLine":550,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1780","line":550,"column":29,"nodeType":"1162","messageId":"1163","endLine":550,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1781","line":552,"column":10,"nodeType":"1162","messageId":"1163","endLine":552,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1782","line":552,"column":40,"nodeType":"1162","messageId":"1163","endLine":552,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1783","line":553,"column":10,"nodeType":"1162","messageId":"1163","endLine":553,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1784","line":553,"column":32,"nodeType":"1162","messageId":"1163","endLine":553,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1785","line":555,"column":10,"nodeType":"1162","messageId":"1163","endLine":555,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1786","line":555,"column":43,"nodeType":"1162","messageId":"1163","endLine":555,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1787","line":556,"column":10,"nodeType":"1162","messageId":"1163","endLine":556,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1788","line":556,"column":35,"nodeType":"1162","messageId":"1163","endLine":556,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1789","line":558,"column":10,"nodeType":"1162","messageId":"1163","endLine":558,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1790","line":558,"column":37,"nodeType":"1162","messageId":"1163","endLine":558,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1791","line":559,"column":10,"nodeType":"1162","messageId":"1163","endLine":559,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1792","line":559,"column":29,"nodeType":"1162","messageId":"1163","endLine":559,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1793","line":561,"column":10,"nodeType":"1162","messageId":"1163","endLine":561,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1794","line":561,"column":40,"nodeType":"1162","messageId":"1163","endLine":561,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1795","line":562,"column":10,"nodeType":"1162","messageId":"1163","endLine":562,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1796","line":562,"column":32,"nodeType":"1162","messageId":"1163","endLine":562,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1797","line":564,"column":10,"nodeType":"1162","messageId":"1163","endLine":564,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1798","line":564,"column":37,"nodeType":"1162","messageId":"1163","endLine":564,"endColumn":65},{"ruleId":"1160","severity":1,"message":"1799","line":565,"column":10,"nodeType":"1162","messageId":"1163","endLine":565,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1800","line":565,"column":29,"nodeType":"1162","messageId":"1163","endLine":565,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1801","line":569,"column":32,"nodeType":"1162","messageId":"1163","endLine":569,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1802","line":572,"column":34,"nodeType":"1162","messageId":"1163","endLine":572,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1803","line":575,"column":32,"nodeType":"1162","messageId":"1163","endLine":575,"endColumn":55},{"ruleId":"1160","severity":1,"message":"1804","line":578,"column":34,"nodeType":"1162","messageId":"1163","endLine":578,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1805","line":580,"column":29,"nodeType":"1162","messageId":"1163","endLine":580,"endColumn":49},{"ruleId":"1160","severity":1,"message":"1806","line":581,"column":39,"nodeType":"1162","messageId":"1163","endLine":581,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1807","line":582,"column":48,"nodeType":"1162","messageId":"1163","endLine":582,"endColumn":87},{"ruleId":"1160","severity":1,"message":"1808","line":584,"column":35,"nodeType":"1162","messageId":"1163","endLine":584,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1809","line":585,"column":44,"nodeType":"1162","messageId":"1163","endLine":585,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1810","line":590,"column":30,"nodeType":"1162","messageId":"1163","endLine":590,"endColumn":51},{"ruleId":"1160","severity":1,"message":"1811","line":591,"column":27,"nodeType":"1162","messageId":"1163","endLine":591,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1812","line":592,"column":27,"nodeType":"1162","messageId":"1163","endLine":592,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1813","line":593,"column":22,"nodeType":"1162","messageId":"1163","endLine":593,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1814","line":594,"column":41,"nodeType":"1162","messageId":"1163","endLine":594,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1815","line":600,"column":10,"nodeType":"1162","messageId":"1163","endLine":600,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1816","line":600,"column":41,"nodeType":"1162","messageId":"1163","endLine":600,"endColumn":73},{"ruleId":"1160","severity":1,"message":"1817","line":601,"column":10,"nodeType":"1162","messageId":"1163","endLine":601,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1818","line":601,"column":33,"nodeType":"1162","messageId":"1163","endLine":601,"endColumn":57},{"ruleId":"1160","severity":1,"message":"1819","line":603,"column":10,"nodeType":"1162","messageId":"1163","endLine":603,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1820","line":603,"column":44,"nodeType":"1162","messageId":"1163","endLine":603,"endColumn":79},{"ruleId":"1160","severity":1,"message":"1821","line":604,"column":10,"nodeType":"1162","messageId":"1163","endLine":604,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1822","line":604,"column":36,"nodeType":"1162","messageId":"1163","endLine":604,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1823","line":606,"column":10,"nodeType":"1162","messageId":"1163","endLine":606,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1824","line":606,"column":43,"nodeType":"1162","messageId":"1163","endLine":606,"endColumn":77},{"ruleId":"1160","severity":1,"message":"1825","line":607,"column":10,"nodeType":"1162","messageId":"1163","endLine":607,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1826","line":607,"column":35,"nodeType":"1162","messageId":"1163","endLine":607,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1827","line":609,"column":10,"nodeType":"1162","messageId":"1163","endLine":609,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1828","line":609,"column":46,"nodeType":"1162","messageId":"1163","endLine":609,"endColumn":83},{"ruleId":"1160","severity":1,"message":"1829","line":610,"column":10,"nodeType":"1162","messageId":"1163","endLine":610,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1830","line":610,"column":38,"nodeType":"1162","messageId":"1163","endLine":610,"endColumn":67},{"ruleId":"1160","severity":1,"message":"1831","line":612,"column":10,"nodeType":"1162","messageId":"1163","endLine":612,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1832","line":612,"column":47,"nodeType":"1162","messageId":"1163","endLine":612,"endColumn":85},{"ruleId":"1160","severity":1,"message":"1833","line":613,"column":10,"nodeType":"1162","messageId":"1163","endLine":613,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1834","line":613,"column":39,"nodeType":"1162","messageId":"1163","endLine":613,"endColumn":69},{"ruleId":"1160","severity":1,"message":"1835","line":615,"column":10,"nodeType":"1162","messageId":"1163","endLine":615,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1836","line":615,"column":50,"nodeType":"1162","messageId":"1163","endLine":615,"endColumn":91},{"ruleId":"1160","severity":1,"message":"1837","line":616,"column":10,"nodeType":"1162","messageId":"1163","endLine":616,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1838","line":616,"column":42,"nodeType":"1162","messageId":"1163","endLine":616,"endColumn":75},{"ruleId":"1160","severity":1,"message":"1839","line":646,"column":5,"nodeType":"1162","messageId":"1163","endLine":646,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1254","line":668,"column":5,"nodeType":"1162","messageId":"1163","endLine":668,"endColumn":15},{"ruleId":"1160","severity":1,"message":"1840","line":672,"column":5,"nodeType":"1162","messageId":"1163","endLine":672,"endColumn":15},{"ruleId":"1160","severity":1,"message":"1841","line":676,"column":14,"nodeType":"1162","messageId":"1163","endLine":676,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":682,"column":53,"nodeType":"1203","messageId":"1204","endLine":682,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":684,"column":59,"nodeType":"1203","messageId":"1204","endLine":684,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":686,"column":59,"nodeType":"1203","messageId":"1204","endLine":686,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":688,"column":59,"nodeType":"1203","messageId":"1204","endLine":688,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":690,"column":59,"nodeType":"1203","messageId":"1204","endLine":690,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":704,"column":21,"nodeType":"1162","messageId":"1257","endLine":704,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":705,"column":25,"nodeType":"1162","messageId":"1257","endLine":705,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":706,"column":57,"nodeType":"1203","messageId":"1204","endLine":706,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":708,"column":63,"nodeType":"1203","messageId":"1204","endLine":708,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":710,"column":63,"nodeType":"1203","messageId":"1204","endLine":710,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":716,"column":70,"nodeType":"1203","messageId":"1204","endLine":716,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":716,"column":137,"nodeType":"1203","messageId":"1204","endLine":716,"endColumn":139},{"ruleId":"1201","severity":1,"message":"1202","line":739,"column":53,"nodeType":"1203","messageId":"1204","endLine":739,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":741,"column":59,"nodeType":"1203","messageId":"1204","endLine":741,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":743,"column":59,"nodeType":"1203","messageId":"1204","endLine":743,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":745,"column":59,"nodeType":"1203","messageId":"1204","endLine":745,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":747,"column":59,"nodeType":"1203","messageId":"1204","endLine":747,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":761,"column":21,"nodeType":"1162","messageId":"1257","endLine":761,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":762,"column":25,"nodeType":"1162","messageId":"1257","endLine":762,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":763,"column":57,"nodeType":"1203","messageId":"1204","endLine":763,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":765,"column":63,"nodeType":"1203","messageId":"1204","endLine":765,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":767,"column":63,"nodeType":"1203","messageId":"1204","endLine":767,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":776,"column":70,"nodeType":"1203","messageId":"1204","endLine":776,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":776,"column":137,"nodeType":"1203","messageId":"1204","endLine":776,"endColumn":139},{"ruleId":"1160","severity":1,"message":"1842","line":795,"column":14,"nodeType":"1162","messageId":"1163","endLine":795,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":801,"column":53,"nodeType":"1203","messageId":"1204","endLine":801,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":803,"column":59,"nodeType":"1203","messageId":"1204","endLine":803,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":805,"column":59,"nodeType":"1203","messageId":"1204","endLine":805,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":807,"column":59,"nodeType":"1203","messageId":"1204","endLine":807,"endColumn":61},{"ruleId":"1201","severity":1,"message":"1202","line":809,"column":59,"nodeType":"1203","messageId":"1204","endLine":809,"endColumn":61},{"ruleId":"1255","severity":1,"message":"1256","line":822,"column":21,"nodeType":"1162","messageId":"1257","endLine":822,"endColumn":22},{"ruleId":"1255","severity":1,"message":"1258","line":823,"column":25,"nodeType":"1162","messageId":"1257","endLine":823,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":824,"column":57,"nodeType":"1203","messageId":"1204","endLine":824,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":826,"column":63,"nodeType":"1203","messageId":"1204","endLine":826,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":828,"column":63,"nodeType":"1203","messageId":"1204","endLine":828,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":834,"column":70,"nodeType":"1203","messageId":"1204","endLine":834,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":834,"column":137,"nodeType":"1203","messageId":"1204","endLine":834,"endColumn":139},{"ruleId":"1197","severity":1,"message":"1843","line":1090,"column":8,"nodeType":"1199","endLine":1090,"endColumn":10,"suggestions":"1844"},{"ruleId":"1201","severity":1,"message":"1202","line":1285,"column":32,"nodeType":"1203","messageId":"1204","endLine":1285,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1845","line":1483,"column":11,"nodeType":"1162","messageId":"1163","endLine":1483,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":1512,"column":24,"nodeType":"1203","messageId":"1204","endLine":1512,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":1513,"column":71,"nodeType":"1203","messageId":"1204","endLine":1513,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1514,"column":31,"nodeType":"1203","messageId":"1204","endLine":1514,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1515,"column":71,"nodeType":"1203","messageId":"1204","endLine":1515,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1516,"column":31,"nodeType":"1203","messageId":"1204","endLine":1516,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1517,"column":71,"nodeType":"1203","messageId":"1204","endLine":1517,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1518,"column":31,"nodeType":"1203","messageId":"1204","endLine":1518,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1519,"column":71,"nodeType":"1203","messageId":"1204","endLine":1519,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1621,"column":32,"nodeType":"1203","messageId":"1204","endLine":1621,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":1622,"column":69,"nodeType":"1203","messageId":"1204","endLine":1622,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1623,"column":69,"nodeType":"1203","messageId":"1204","endLine":1623,"endColumn":71},{"ruleId":"1160","severity":1,"message":"1846","line":1727,"column":11,"nodeType":"1162","messageId":"1163","endLine":1727,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1202","line":1758,"column":24,"nodeType":"1203","messageId":"1204","endLine":1758,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":1759,"column":71,"nodeType":"1203","messageId":"1204","endLine":1759,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1760,"column":31,"nodeType":"1203","messageId":"1204","endLine":1760,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1761,"column":71,"nodeType":"1203","messageId":"1204","endLine":1761,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1762,"column":31,"nodeType":"1203","messageId":"1204","endLine":1762,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1763,"column":71,"nodeType":"1203","messageId":"1204","endLine":1763,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1764,"column":31,"nodeType":"1203","messageId":"1204","endLine":1764,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":1765,"column":71,"nodeType":"1203","messageId":"1204","endLine":1765,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":1867,"column":32,"nodeType":"1203","messageId":"1204","endLine":1867,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":1868,"column":69,"nodeType":"1203","messageId":"1204","endLine":1868,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1869,"column":69,"nodeType":"1203","messageId":"1204","endLine":1869,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":1903,"column":24,"nodeType":"1203","messageId":"1204","endLine":1903,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1847","line":1979,"column":11,"nodeType":"1162","messageId":"1163","endLine":1979,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1202","line":2011,"column":24,"nodeType":"1203","messageId":"1204","endLine":2011,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2012,"column":71,"nodeType":"1203","messageId":"1204","endLine":2012,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2013,"column":31,"nodeType":"1203","messageId":"1204","endLine":2013,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2014,"column":71,"nodeType":"1203","messageId":"1204","endLine":2014,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2015,"column":31,"nodeType":"1203","messageId":"1204","endLine":2015,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2016,"column":71,"nodeType":"1203","messageId":"1204","endLine":2016,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2017,"column":31,"nodeType":"1203","messageId":"1204","endLine":2017,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2018,"column":71,"nodeType":"1203","messageId":"1204","endLine":2018,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2120,"column":32,"nodeType":"1203","messageId":"1204","endLine":2120,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":2121,"column":69,"nodeType":"1203","messageId":"1204","endLine":2121,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2122,"column":69,"nodeType":"1203","messageId":"1204","endLine":2122,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2156,"column":24,"nodeType":"1203","messageId":"1204","endLine":2156,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2156,"column":44,"nodeType":"1203","messageId":"1204","endLine":2156,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1202","line":2156,"column":74,"nodeType":"1203","messageId":"1204","endLine":2156,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":2261,"column":24,"nodeType":"1203","messageId":"1204","endLine":2261,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2262,"column":71,"nodeType":"1203","messageId":"1204","endLine":2262,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2263,"column":31,"nodeType":"1203","messageId":"1204","endLine":2263,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2264,"column":71,"nodeType":"1203","messageId":"1204","endLine":2264,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2265,"column":31,"nodeType":"1203","messageId":"1204","endLine":2265,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2266,"column":71,"nodeType":"1203","messageId":"1204","endLine":2266,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2267,"column":31,"nodeType":"1203","messageId":"1204","endLine":2267,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":2268,"column":71,"nodeType":"1203","messageId":"1204","endLine":2268,"endColumn":73},{"ruleId":"1201","severity":1,"message":"1202","line":2366,"column":32,"nodeType":"1203","messageId":"1204","endLine":2366,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":2367,"column":69,"nodeType":"1203","messageId":"1204","endLine":2367,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2368,"column":69,"nodeType":"1203","messageId":"1204","endLine":2368,"endColumn":71},{"ruleId":"1201","severity":1,"message":"1202","line":2401,"column":24,"nodeType":"1203","messageId":"1204","endLine":2401,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":2401,"column":44,"nodeType":"1203","messageId":"1204","endLine":2401,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1848","line":2479,"column":11,"nodeType":"1162","messageId":"1163","endLine":2479,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1345","line":2487,"column":13,"nodeType":"1162","messageId":"1163","endLine":2487,"endColumn":20},{"ruleId":"1346","severity":1,"message":"1347","line":2511,"column":55,"nodeType":"1203","messageId":"1348","endLine":2511,"endColumn":62},{"ruleId":"1160","severity":1,"message":"1349","line":2577,"column":11,"nodeType":"1162","messageId":"1163","endLine":2577,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1849","line":2609,"column":11,"nodeType":"1162","messageId":"1163","endLine":2609,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1850","line":2644,"column":11,"nodeType":"1162","messageId":"1163","endLine":2644,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1851","line":2679,"column":11,"nodeType":"1162","messageId":"1163","endLine":2679,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1852","line":2714,"column":11,"nodeType":"1162","messageId":"1163","endLine":2714,"endColumn":31},{"ruleId":"1160","severity":1,"message":"1853","line":2749,"column":11,"nodeType":"1162","messageId":"1163","endLine":2749,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1854","line":2784,"column":11,"nodeType":"1162","messageId":"1163","endLine":2784,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1855","line":2819,"column":11,"nodeType":"1162","messageId":"1163","endLine":2819,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1856","line":2845,"column":11,"nodeType":"1162","messageId":"1163","endLine":2845,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1857","line":2871,"column":11,"nodeType":"1162","messageId":"1163","endLine":2871,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1858","line":2897,"column":11,"nodeType":"1162","messageId":"1163","endLine":2897,"endColumn":38},{"ruleId":"1160","severity":1,"message":"1859","line":2925,"column":11,"nodeType":"1162","messageId":"1163","endLine":2925,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1860","line":2951,"column":11,"nodeType":"1162","messageId":"1163","endLine":2951,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1861","line":2977,"column":11,"nodeType":"1162","messageId":"1163","endLine":2977,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1862","line":3004,"column":11,"nodeType":"1162","messageId":"1163","endLine":3004,"endColumn":51},{"ruleId":"1160","severity":1,"message":"1863","line":3030,"column":11,"nodeType":"1162","messageId":"1163","endLine":3030,"endColumn":60},{"ruleId":"1160","severity":1,"message":"1864","line":3056,"column":11,"nodeType":"1162","messageId":"1163","endLine":3056,"endColumn":61},{"ruleId":"1160","severity":1,"message":"1865","line":3082,"column":11,"nodeType":"1162","messageId":"1163","endLine":3082,"endColumn":59},{"ruleId":"1160","severity":1,"message":"1866","line":3108,"column":11,"nodeType":"1162","messageId":"1163","endLine":3108,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1867","line":3136,"column":11,"nodeType":"1162","messageId":"1163","endLine":3136,"endColumn":32},{"ruleId":"1160","severity":1,"message":"1868","line":3161,"column":11,"nodeType":"1162","messageId":"1163","endLine":3161,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1869","line":3185,"column":11,"nodeType":"1162","messageId":"1163","endLine":3185,"endColumn":51},{"ruleId":"1201","severity":1,"message":"1202","line":3218,"column":23,"nodeType":"1203","messageId":"1204","endLine":3218,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":3232,"column":27,"nodeType":"1203","messageId":"1204","endLine":3232,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":3253,"column":23,"nodeType":"1203","messageId":"1204","endLine":3253,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":3267,"column":27,"nodeType":"1203","messageId":"1204","endLine":3267,"endColumn":29},{"ruleId":"1160","severity":1,"message":"1870","line":3281,"column":11,"nodeType":"1162","messageId":"1163","endLine":3281,"endColumn":42},{"ruleId":"1160","severity":1,"message":"1350","line":3295,"column":13,"nodeType":"1162","messageId":"1163","endLine":3295,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1871","line":3310,"column":11,"nodeType":"1162","messageId":"1163","endLine":3310,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1872","line":3361,"column":11,"nodeType":"1162","messageId":"1163","endLine":3361,"endColumn":52},{"ruleId":"1160","severity":1,"message":"1873","line":3412,"column":11,"nodeType":"1162","messageId":"1163","endLine":3412,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1874","line":3574,"column":11,"nodeType":"1162","messageId":"1163","endLine":3574,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1350","line":3585,"column":13,"nodeType":"1162","messageId":"1163","endLine":3585,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1875","line":3602,"column":11,"nodeType":"1162","messageId":"1163","endLine":3602,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1350","line":3613,"column":13,"nodeType":"1162","messageId":"1163","endLine":3613,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1876","line":3628,"column":11,"nodeType":"1162","messageId":"1163","endLine":3628,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1350","line":3639,"column":13,"nodeType":"1162","messageId":"1163","endLine":3639,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1877","line":3654,"column":11,"nodeType":"1162","messageId":"1163","endLine":3654,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1350","line":3665,"column":13,"nodeType":"1162","messageId":"1163","endLine":3665,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1878","line":3680,"column":11,"nodeType":"1162","messageId":"1163","endLine":3680,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1350","line":3691,"column":13,"nodeType":"1162","messageId":"1163","endLine":3691,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1879","line":3706,"column":11,"nodeType":"1162","messageId":"1163","endLine":3706,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1350","line":3717,"column":13,"nodeType":"1162","messageId":"1163","endLine":3717,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1880","line":3732,"column":11,"nodeType":"1162","messageId":"1163","endLine":3732,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1350","line":3743,"column":13,"nodeType":"1162","messageId":"1163","endLine":3743,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1881","line":3760,"column":11,"nodeType":"1162","messageId":"1163","endLine":3760,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1350","line":3771,"column":13,"nodeType":"1162","messageId":"1163","endLine":3771,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1882","line":3786,"column":11,"nodeType":"1162","messageId":"1163","endLine":3786,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1350","line":3797,"column":13,"nodeType":"1162","messageId":"1163","endLine":3797,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1883","line":3812,"column":11,"nodeType":"1162","messageId":"1163","endLine":3812,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1350","line":3823,"column":13,"nodeType":"1162","messageId":"1163","endLine":3823,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1884","line":3838,"column":11,"nodeType":"1162","messageId":"1163","endLine":3838,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1350","line":3849,"column":13,"nodeType":"1162","messageId":"1163","endLine":3849,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1885","line":3867,"column":11,"nodeType":"1162","messageId":"1163","endLine":3867,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1351","line":3892,"column":11,"nodeType":"1162","messageId":"1163","endLine":3892,"endColumn":40},{"ruleId":"1160","severity":1,"message":"1886","line":3917,"column":11,"nodeType":"1162","messageId":"1163","endLine":3917,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1887","line":3942,"column":11,"nodeType":"1162","messageId":"1163","endLine":3942,"endColumn":47},{"ruleId":"1160","severity":1,"message":"1888","line":4044,"column":11,"nodeType":"1162","messageId":"1163","endLine":4044,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1889","line":4069,"column":11,"nodeType":"1162","messageId":"1163","endLine":4069,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1890","line":4094,"column":11,"nodeType":"1162","messageId":"1163","endLine":4094,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1891","line":4119,"column":11,"nodeType":"1162","messageId":"1163","endLine":4119,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1892","line":4173,"column":11,"nodeType":"1162","messageId":"1163","endLine":4173,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1893","line":4275,"column":11,"nodeType":"1162","messageId":"1163","endLine":4275,"endColumn":46},{"ruleId":"1160","severity":1,"message":"1894","line":4300,"column":11,"nodeType":"1162","messageId":"1163","endLine":4300,"endColumn":52},{"ruleId":"1160","severity":1,"message":"1895","line":4325,"column":11,"nodeType":"1162","messageId":"1163","endLine":4325,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1896","line":4350,"column":11,"nodeType":"1162","messageId":"1163","endLine":4350,"endColumn":50},{"ruleId":"1160","severity":1,"message":"1897","line":4375,"column":11,"nodeType":"1162","messageId":"1163","endLine":4375,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1352","line":4404,"column":11,"nodeType":"1162","messageId":"1163","endLine":4404,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1353","line":6337,"column":13,"nodeType":"1162","messageId":"1163","endLine":6337,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":6341,"column":25,"nodeType":"1203","messageId":"1204","endLine":6341,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1354","line":6343,"column":13,"nodeType":"1162","messageId":"1163","endLine":6343,"endColumn":21},{"ruleId":"1160","severity":1,"message":"1355","line":6344,"column":13,"nodeType":"1162","messageId":"1163","endLine":6344,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1206","line":6354,"column":11,"nodeType":"1162","messageId":"1163","endLine":6354,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1167","line":6358,"column":11,"nodeType":"1162","messageId":"1163","endLine":6358,"endColumn":20},{"ruleId":"1356","severity":1,"message":"1357","line":6425,"column":25,"nodeType":"1181","endLine":6425,"endColumn":29},"no-native-reassign",["1898"],"no-negated-in-lhs",["1899"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'ContactUs' is assigned a value but never used.","'userKpiDigitalTemp' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'showError' is assigned a value but never used.","'loginfooter' is assigned a value but never used.","'SetDateInJsonArrayToQueryOverObjects' is defined but never used.","'SetParamsToQuery' is defined but never used.","'AddLineMockData' is defined but never used.","'AddDataByFilters' is defined but never used.","'GetIndicators' is defined but never used.","'AddItensToJsonArray' is defined but never used.","'months' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ChartDataLabels' is defined but never used.","'Button' is defined but never used.","'InputText' is defined but never used.","'Password' is defined but never used.","'axios' is defined but never used.","'ColumnGroup' is defined but never used.","'Ripple' is defined but never used.","'Dropdown' is defined but never used.","'classNames' is defined but never used.","'colorsBars' is defined but never used.","'LoadingSkeletonSquare' is defined but never used.","'cors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'GraficoCE_Total', 'GraficoNNCLog_Total', 'GraficoNNCMP_Total', 'GraficoRAC_Aves', 'GraficoRAC_Outros', 'GraficoRAC_Preparados', 'GraficoRAC_Suinos', and 'GraficoRAC_Total'. Either include them or remove the dependency array.","ArrayExpression",["1900"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DataTableColGroupDemo' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'ReactDOM' is defined but never used.","'testeSQLPivotRollup' is defined but never used.","'LineWeight' is defined but never used.","'Funcao' is defined but never used.","'responseTable' is assigned a value but never used.","'setresponseTable' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'TableRacRACDetalhesInseto' is assigned a value but never used.","'setTableRacRACDetalhesInseto' is assigned a value but never used.","'TableRacRACDetalhesCabelo' is assigned a value but never used.","'setTableRacRACDetalhesCabelo' is assigned a value but never used.","'TableRacRACDetalhesPlastico' is assigned a value but never used.","'setTableRacRACDetalhesPlastico' is assigned a value but never used.","'TableRacRACDetalhesMetal' is assigned a value but never used.","'setTableRacRACDetalhesMetal' is assigned a value but never used.","'TableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'setTableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'TableRacRACDetalhesLarva' is assigned a value but never used.","'setTableRacRACDetalhesLarva' is assigned a value but never used.","'TableRacRACDetalhesCE' is assigned a value but never used.","'setTableRacRACDetalhesCE' is assigned a value but never used.","'TableRacRACDetalhesCEInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerente' is assigned a value but never used.","'TableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'TableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'TableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'TableNNCLogEvolucao' is assigned a value but never used.","'setTableNNCLogEvolucao' is assigned a value but never used.","'TableNNCEvolucaoDia' is assigned a value but never used.","'setTableNNCEvolucaoDia' is assigned a value but never used.","'responseGraficoNNCAvesPesadas' is assigned a value but never used.","'responseGraficoNNCAvesRS' is assigned a value but never used.","'responseGraficoNNCAvesSP' is assigned a value but never used.","'responseGraficoNNCAvesPR' is assigned a value but never used.","'responseGraficoNNCAvesLeves' is assigned a value but never used.","'responseGraficoNNCSuinos' is assigned a value but never used.","'responseGraficoNNCPreparados' is assigned a value but never used.","'whereRACCE' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["1901","1902"],["1903","1904"],["1905","1906"],["1907","1908"],["1909","1910"],["1911","1912"],["1913","1914"],["1915","1916"],["1917","1918"],["1919","1920"],["1921","1922"],["1923","1924"],["1925","1926"],["1927","1928"],["1929","1930"],["1931","1932"],["1933","1934"],["1935","1936"],["1937","1938"],["1939","1940"],["1941","1942"],["1943","1944"],["1945","1946"],["1947","1948"],["1949","1950"],["1951","1952"],["1953","1954"],["1955","1956"],["1957","1958"],["1959","1960"],["1961","1962"],["1963","1964"],["1965","1966"],["1967","1968"],["1969","1970"],["1971","1972"],["1973","1974"],["1975","1976"],["1977","1978"],["1979","1980"],["1981","1982"],["1983","1984"],["1985","1986"],["1987","1988"],["1989","1990"],["1991","1992"],["1993","1994"],["1995","1996"],["1997","1998"],["1999","2000"],["2001","2002"],["2003","2004"],["2005","2006"],["2007","2008"],["2009","2010"],["2011","2012"],["2013","2014"],["2015","2016"],["2017","2018"],["2019","2020"],["2021","2022"],["2023","2024"],["2025","2026"],["2027","2028"],["2029","2030"],["2031","2032"],["2033","2034"],["2035","2036"],["2037","2038"],["2039","2040"],["2041","2042"],["2043","2044"],["2045","2046"],["2047","2048"],["2049","2050"],["2051","2052"],["2053","2054"],["2055","2056"],["2057","2058"],["2059","2060"],"React Hook React.useEffect has missing dependencies: 'GraficoCETotal', 'GraficoCETotalAvesLeves', 'GraficoCETotalAvesPesadas', 'GraficoCETotalAvesPesadasPR', 'GraficoCETotalAvesPesadasRS', 'GraficoCETotalAvesPesadasSP', 'GraficoCETotalPreparados', 'GraficoCETotalSuinos', 'GraficoICIndicadoresAves', 'GraficoICIndicadoresPreparados', 'GraficoICIndicadoresSuinos', 'GraficoICUnidadesAves', 'GraficoICUnidadesPreparados', 'GraficoICUnidadesSuinos', 'GraficoNCCMP', 'GraficoNCCMPAvesLeves', 'GraficoNCCMPAvesPesadas', 'GraficoNCCMPAvesPesadasPR', 'GraficoNCCMPAvesPesadasRS', 'GraficoNCCMPAvesPesadasSP', 'GraficoNCCMPPreparados', 'GraficoNCCMPSuinos', 'GraficoNNCAvesLeves', 'GraficoNNCAvesLevesProblemas', 'GraficoNNCAvesLevesUnidades', 'GraficoNNCAvesPR', 'GraficoNNCAvesPRProblemas', 'GraficoNNCAvesPRUnidades', 'GraficoNNCAvesPesadas', 'GraficoNNCAvesPesadasProblemas', 'GraficoNNCAvesPesadasUnidades', 'GraficoNNCAvesRS', 'GraficoNNCAvesRSProblemas', 'GraficoNNCAvesRSUnidades', 'GraficoNNCAvesSP', 'GraficoNNCAvesSPProblemas', 'GraficoNNCAvesSPUnidades', 'GraficoNNCCEInerente', 'GraficoNNCCEMetal', 'GraficoNNCCENaoInerente', 'GraficoNNCCEOssos', 'GraficoNNCCEPlastico', 'GraficoNNCCETotal', 'GraficoNNCLogDetalhesAves', 'GraficoNNCLogDetalhesPreparados', 'GraficoNNCLogDetalhesSuinos', 'GraficoNNCLogDetalhesTotal', 'GraficoNNCMPTotalCE', 'GraficoNNCMPTotalCEAvesLeves', 'GraficoNNCMPTotalCEAvesPesadas', 'GraficoNNCMPTotalCEAvesPesadasPR', 'GraficoNNCMPTotalCEAvesPesadasRS', 'GraficoNNCMPTotalCEAvesPesadasSP', 'GraficoNNCMPTotalCEPreparados', 'GraficoNNCMPTotalCESuinos', 'GraficoNNCPreparados', 'GraficoNNCPreparadosProblemas', 'GraficoNNCPreparadosUnidades', 'GraficoNNCSuinos', 'GraficoNNCSuinosProblemas', 'GraficoNNCSuinosUnidades', 'GraficoRAC', 'GraficoRACAvesLeves', 'GraficoRACAvesPesadas', 'GraficoRACAvesPesadasPR', 'GraficoRACAvesPesadasRS', 'GraficoRACAvesPesadasSP', 'GraficoRACDetalhesAC', 'GraficoRACDetalhesAberturaPDV', 'GraficoRACDetalhesCE', 'GraficoRACDetalhesCEInerente', 'GraficoRACDetalhesCENaoInerente', 'GraficoRACDetalhesCEPlastico', 'GraficoRACDetalhesCabelo', 'GraficoRACDetalhesCritica', 'GraficoRACDetalhesDoc', 'GraficoRACDetalhesEspeciais', 'GraficoRACDetalhesFFO', 'GraficoRACDetalhesInseto', 'GraficoRACDetalhesIntoxicacao', 'GraficoRACDetalhesLarva', 'GraficoRACDetalhesLogME', 'GraficoRACDetalhesLogMI', 'GraficoRACDetalhesMassatake', 'GraficoRACDetalhesMetal', 'GraficoRACDetalhesPDV', 'GraficoRACDetalhesPlastico', 'GraficoRACDetalhesTT', 'GraficoRACDetalhesTerceiro', 'GraficoRACME', 'GraficoRACMI', 'GraficoRACPreparados', 'GraficoRACProblemasAvesLeves', 'GraficoRACProblemasAvesPesadas', 'GraficoRACProblemasAvesPesadasPR', 'GraficoRACProblemasAvesPesadasRS', 'GraficoRACProblemasAvesPesadasSP', 'GraficoRACProblemasPreparados', 'GraficoRACProblemasSuinos', 'GraficoRACSuinos', 'GraficoRACTotalCE', 'GraficoRACTotalCEAvesLeves', 'GraficoRACTotalCEAvesPesadas', 'GraficoRACTotalCEAvesPesadasPR', 'GraficoRACTotalCEAvesPesadasRS', 'GraficoRACTotalCEAvesPesadasSP', 'GraficoRACTotalCEPreparados', 'GraficoRACTotalCESuinos', 'GraficoRACUnidadesAvesLeves', 'GraficoRACUnidadesAvesPesadas', 'GraficoRACUnidadesAvesPesadasPR', 'GraficoRACUnidadesAvesPesadasRS', 'GraficoRACUnidadesAvesPesadasSP', 'GraficoRACUnidadesPreparados', 'GraficoRACUnidadesSuinos', 'buscarDadosTable', 'chamarAPI', 'whereNNCMP', and 'whereRACPreparados'. Either include them or remove the dependency array.",["2061"],"'groupBy' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'DataTableRACME' is assigned a value but never used.","'retorno' is assigned a value but never used.","'DataTableNNCEvolucaoMesTotais' is assigned a value but never used.","'buscarTabelaRACUnicoProblema' is assigned a value but never used.","'parm' is assigned a value but never used.","'datasets' is assigned a value but never used.","'indicators' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-dupe-keys","Duplicate key 'SelectRole'.","ObjectExpression","'user' is assigned a value but never used.","'response' is assigned a value but never used.","'testeSQLPivotRollup' is assigned a value but never used.","'optionsComparativo' is defined but never used.","'responseGraficoCETotal' is assigned a value but never used.","'setresponseGraficoCETotal' is assigned a value but never used.","'GraficoCETotal' is assigned a value but never used.","'setGraficoCETotal' is assigned a value but never used.","'responseGraficoNNCMPTotalCE' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCE' is assigned a value but never used.","'GraficoNNCMPTotalCE' is assigned a value but never used.","'setGraficoNNCMPTotalCE' is assigned a value but never used.","'responseGraficoRACTotalCE' is assigned a value but never used.","'setresponseGraficoRACTotalCE' is assigned a value but never used.","'GraficoRACTotalCE' is assigned a value but never used.","'setGraficoRACTotalCE' is assigned a value but never used.","'responseGraficoRAC' is assigned a value but never used.","'setresponseGraficoRAC' is assigned a value but never used.","'GraficoRAC' is assigned a value but never used.","'setGraficoRAC' is assigned a value but never used.","'responseGraficoNCCMP' is assigned a value but never used.","'setresponseGraficoNCCMP' is assigned a value but never used.","'GraficoNCCMP' is assigned a value but never used.","'setGraficoNCCMP' is assigned a value but never used.","'responseGraficoCETotalAvesPesadas' is assigned a value but never used.","'setresponseGraficoCETotalAvesPesadas' is assigned a value but never used.","'GraficoCETotalAvesPesadas' is assigned a value but never used.","'setGraficoCETotalAvesPesadas' is assigned a value but never used.","'responseGraficoNNCMPTotalCEAvesPesadas' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEAvesPesadas' is assigned a value but never used.","'GraficoNNCMPTotalCEAvesPesadas' is assigned a value but never used.","'setGraficoNNCMPTotalCEAvesPesadas' is assigned a value but never used.","'responseGraficoRACTotalCEAvesPesadas' is assigned a value but never used.","'setresponseGraficoRACTotalCEAvesPesadas' is assigned a value but never used.","'GraficoRACTotalCEAvesPesadas' is assigned a value but never used.","'setGraficoRACTotalCEAvesPesadas' is assigned a value but never used.","'responseGraficoRACAvesPesadas' is assigned a value but never used.","'setresponseGraficoRACAvesPesadas' is assigned a value but never used.","'GraficoRACAvesPesadas' is assigned a value but never used.","'setGraficoRACAvesPesadas' is assigned a value but never used.","'responseGraficoNCCMPAvesPesadas' is assigned a value but never used.","'setresponseGraficoNCCMPAvesPesadas' is assigned a value but never used.","'GraficoNCCMPAvesPesadas' is assigned a value but never used.","'setGraficoNCCMPAvesPesadas' is assigned a value but never used.","'responseGraficoCETotalAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoCETotalAvesPesadasPR' is assigned a value but never used.","'GraficoCETotalAvesPesadasPR' is assigned a value but never used.","'setGraficoCETotalAvesPesadasPR' is assigned a value but never used.","'responseGraficoNNCMPTotalCEAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEAvesPesadasPR' is assigned a value but never used.","'GraficoNNCMPTotalCEAvesPesadasPR' is assigned a value but never used.","'setGraficoNNCMPTotalCEAvesPesadasPR' is assigned a value but never used.","'responseGraficoRACTotalCEAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoRACTotalCEAvesPesadasPR' is assigned a value but never used.","'GraficoRACTotalCEAvesPesadasPR' is assigned a value but never used.","'setGraficoRACTotalCEAvesPesadasPR' is assigned a value but never used.","'responseGraficoRACAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoRACAvesPesadasPR' is assigned a value but never used.","'GraficoRACAvesPesadasPR' is assigned a value but never used.","'setGraficoRACAvesPesadasPR' is assigned a value but never used.","'responseGraficoNCCMPAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoNCCMPAvesPesadasPR' is assigned a value but never used.","'GraficoNCCMPAvesPesadasPR' is assigned a value but never used.","'setGraficoNCCMPAvesPesadasPR' is assigned a value but never used.","'responseGraficoCETotalAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoCETotalAvesPesadasSP' is assigned a value but never used.","'GraficoCETotalAvesPesadasSP' is assigned a value but never used.","'setGraficoCETotalAvesPesadasSP' is assigned a value but never used.","'responseGraficoNNCMPTotalCEAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEAvesPesadasSP' is assigned a value but never used.","'GraficoNNCMPTotalCEAvesPesadasSP' is assigned a value but never used.","'setGraficoNNCMPTotalCEAvesPesadasSP' is assigned a value but never used.","'responseGraficoRACTotalCEAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoRACTotalCEAvesPesadasSP' is assigned a value but never used.","'GraficoRACTotalCEAvesPesadasSP' is assigned a value but never used.","'setGraficoRACTotalCEAvesPesadasSP' is assigned a value but never used.","'responseGraficoRACAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoRACAvesPesadasSP' is assigned a value but never used.","'GraficoRACAvesPesadasSP' is assigned a value but never used.","'setGraficoRACAvesPesadasSP' is assigned a value but never used.","'responseGraficoNCCMPAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoNCCMPAvesPesadasSP' is assigned a value but never used.","'GraficoNCCMPAvesPesadasSP' is assigned a value but never used.","'setGraficoNCCMPAvesPesadasSP' is assigned a value but never used.","'responseGraficoCETotalAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoCETotalAvesPesadasRS' is assigned a value but never used.","'GraficoCETotalAvesPesadasRS' is assigned a value but never used.","'setGraficoCETotalAvesPesadasRS' is assigned a value but never used.","'responseGraficoNNCMPTotalCEAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEAvesPesadasRS' is assigned a value but never used.","'GraficoNNCMPTotalCEAvesPesadasRS' is assigned a value but never used.","'setGraficoNNCMPTotalCEAvesPesadasRS' is assigned a value but never used.","'responseGraficoRACTotalCEAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoRACTotalCEAvesPesadasRS' is assigned a value but never used.","'GraficoRACTotalCEAvesPesadasRS' is assigned a value but never used.","'setGraficoRACTotalCEAvesPesadasRS' is assigned a value but never used.","'responseGraficoRACAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoRACAvesPesadasRS' is assigned a value but never used.","'GraficoRACAvesPesadasRS' is assigned a value but never used.","'setGraficoRACAvesPesadasRS' is assigned a value but never used.","'responseGraficoNCCMPAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoNCCMPAvesPesadasRS' is assigned a value but never used.","'GraficoNCCMPAvesPesadasRS' is assigned a value but never used.","'setGraficoNCCMPAvesPesadasRS' is assigned a value but never used.","'responseGraficoCETotalAvesLeves' is assigned a value but never used.","'setresponseGraficoCETotalAvesLeves' is assigned a value but never used.","'GraficoCETotalAvesLeves' is assigned a value but never used.","'setGraficoCETotalAvesLeves' is assigned a value but never used.","'responseGraficoNNCMPTotalCEAvesLeves' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEAvesLeves' is assigned a value but never used.","'GraficoNNCMPTotalCEAvesLeves' is assigned a value but never used.","'setGraficoNNCMPTotalCEAvesLeves' is assigned a value but never used.","'responseGraficoRACTotalCEAvesLeves' is assigned a value but never used.","'setresponseGraficoRACTotalCEAvesLeves' is assigned a value but never used.","'GraficoRACTotalCEAvesLeves' is assigned a value but never used.","'setGraficoRACTotalCEAvesLeves' is assigned a value but never used.","'responseGraficoRACAvesLeves' is assigned a value but never used.","'setresponseGraficoRACAvesLeves' is assigned a value but never used.","'GraficoRACAvesLeves' is assigned a value but never used.","'setGraficoRACAvesLeves' is assigned a value but never used.","'responseGraficoNCCMPAvesLeves' is assigned a value but never used.","'setresponseGraficoNCCMPAvesLeves' is assigned a value but never used.","'GraficoNCCMPAvesLeves' is assigned a value but never used.","'setGraficoNCCMPAvesLeves' is assigned a value but never used.","'responseGraficoCETotalSuinos' is assigned a value but never used.","'setresponseGraficoCETotalSuinos' is assigned a value but never used.","'GraficoCETotalSuinos' is assigned a value but never used.","'setGraficoCETotalSuinos' is assigned a value but never used.","'responseGraficoNNCMPTotalCESuinos' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCESuinos' is assigned a value but never used.","'GraficoNNCMPTotalCESuinos' is assigned a value but never used.","'setGraficoNNCMPTotalCESuinos' is assigned a value but never used.","'responseGraficoRACTotalCESuinos' is assigned a value but never used.","'setresponseGraficoRACTotalCESuinos' is assigned a value but never used.","'GraficoRACTotalCESuinos' is assigned a value but never used.","'setGraficoRACTotalCESuinos' is assigned a value but never used.","'responseGraficoRACSuinos' is assigned a value but never used.","'setresponseGraficoRACSuinos' is assigned a value but never used.","'GraficoRACSuinos' is assigned a value but never used.","'setGraficoRACSuinos' is assigned a value but never used.","'responseGraficoNCCMPSuinos' is assigned a value but never used.","'setresponseGraficoNCCMPSuinos' is assigned a value but never used.","'GraficoNCCMPSuinos' is assigned a value but never used.","'setGraficoNCCMPSuinos' is assigned a value but never used.","'responseGraficoCETotalPreparados' is assigned a value but never used.","'setresponseGraficoCETotalPreparados' is assigned a value but never used.","'GraficoCETotalPreparados' is assigned a value but never used.","'setGraficoCETotalPreparados' is assigned a value but never used.","'responseGraficoNNCMPTotalCEPreparados' is assigned a value but never used.","'setresponseGraficoNNCMPTotalCEPreparados' is assigned a value but never used.","'GraficoNNCMPTotalCEPreparados' is assigned a value but never used.","'setGraficoNNCMPTotalCEPreparados' is assigned a value but never used.","'responseGraficoRACTotalCEPreparados' is assigned a value but never used.","'setresponseGraficoRACTotalCEPreparados' is assigned a value but never used.","'GraficoRACTotalCEPreparados' is assigned a value but never used.","'setGraficoRACTotalCEPreparados' is assigned a value but never used.","'responseGraficoRACPreparados' is assigned a value but never used.","'setresponseGraficoRACPreparados' is assigned a value but never used.","'GraficoRACPreparados' is assigned a value but never used.","'setGraficoRACPreparados' is assigned a value but never used.","'responseGraficoNCCMPPreparados' is assigned a value but never used.","'setresponseGraficoNCCMPPreparados' is assigned a value but never used.","'GraficoNCCMPPreparados' is assigned a value but never used.","'setGraficoNCCMPPreparados' is assigned a value but never used.","'responseGraficoRACUnidadesAvesPesadas' is assigned a value but never used.","'setresponseGraficoRACUnidadesAvesPesadas' is assigned a value but never used.","'GraficoRACUnidadesAvesPesadas' is assigned a value but never used.","'setGraficoRACUnidadesAvesPesadas' is assigned a value but never used.","'responseGraficoRACProblemasAvesPesadas' is assigned a value but never used.","'setresponseGraficoRACProblemasAvesPesadas' is assigned a value but never used.","'GraficoRACProblemasAvesPesadas' is assigned a value but never used.","'setGraficoRACProblemasAvesPesadas' is assigned a value but never used.","'responseGraficoRACUnidadesAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoRACUnidadesAvesPesadasPR' is assigned a value but never used.","'GraficoRACUnidadesAvesPesadasPR' is assigned a value but never used.","'setGraficoRACUnidadesAvesPesadasPR' is assigned a value but never used.","'responseGraficoRACProblemasAvesPesadasPR' is assigned a value but never used.","'setresponseGraficoRACProblemasAvesPesadasPR' is assigned a value but never used.","'GraficoRACProblemasAvesPesadasPR' is assigned a value but never used.","'setGraficoRACProblemasAvesPesadasPR' is assigned a value but never used.","'responseGraficoRACUnidadesAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoRACUnidadesAvesPesadasSP' is assigned a value but never used.","'GraficoRACUnidadesAvesPesadasSP' is assigned a value but never used.","'setGraficoRACUnidadesAvesPesadasSP' is assigned a value but never used.","'responseGraficoRACProblemasAvesPesadasSP' is assigned a value but never used.","'setresponseGraficoRACProblemasAvesPesadasSP' is assigned a value but never used.","'GraficoRACProblemasAvesPesadasSP' is assigned a value but never used.","'setGraficoRACProblemasAvesPesadasSP' is assigned a value but never used.","'responseGraficoRACUnidadesAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoRACUnidadesAvesPesadasRS' is assigned a value but never used.","'GraficoRACUnidadesAvesPesadasRS' is assigned a value but never used.","'setGraficoRACUnidadesAvesPesadasRS' is assigned a value but never used.","'responseGraficoRACProblemasAvesPesadasRS' is assigned a value but never used.","'setresponseGraficoRACProblemasAvesPesadasRS' is assigned a value but never used.","'GraficoRACProblemasAvesPesadasRS' is assigned a value but never used.","'setGraficoRACProblemasAvesPesadasRS' is assigned a value but never used.","'responseGraficoRACUnidadesAvesLeves' is assigned a value but never used.","'setresponseGraficoRACUnidadesAvesLeves' is assigned a value but never used.","'GraficoRACUnidadesAvesLeves' is assigned a value but never used.","'setGraficoRACUnidadesAvesLeves' is assigned a value but never used.","'responseGraficoRACProblemasAvesLeves' is assigned a value but never used.","'setresponseGraficoRACProblemasAvesLeves' is assigned a value but never used.","'GraficoRACProblemasAvesLeves' is assigned a value but never used.","'setGraficoRACProblemasAvesLeves' is assigned a value but never used.","'responseGraficoRACUnidadesSuinos' is assigned a value but never used.","'setresponseGraficoRACUnidadesSuinos' is assigned a value but never used.","'GraficoRACUnidadesSuinos' is assigned a value but never used.","'setGraficoRACUnidadesSuinos' is assigned a value but never used.","'responseGraficoRACProblemasSuinos' is assigned a value but never used.","'setresponseGraficoRACProblemasSuinos' is assigned a value but never used.","'GraficoRACProblemasSuinos' is assigned a value but never used.","'setGraficoRACProblemasSuinos' is assigned a value but never used.","'responseGraficoRACUnidadesPreparados' is assigned a value but never used.","'setresponseGraficoRACUnidadesPreparados' is assigned a value but never used.","'GraficoRACUnidadesPreparados' is assigned a value but never used.","'setGraficoRACUnidadesPreparados' is assigned a value but never used.","'responseGraficoRACProblemasPreparados' is assigned a value but never used.","'setresponseGraficoRACProblemasPreparados' is assigned a value but never used.","'GraficoRACProblemasPreparados' is assigned a value but never used.","'setGraficoRACProblemasPreparados' is assigned a value but never used.","'responseGraficoRACME' is assigned a value but never used.","'setresponseGraficoRACME' is assigned a value but never used.","'GraficoRACME' is assigned a value but never used.","'setGraficoRACME' is assigned a value but never used.","'setTableRacAberturaME' is assigned a value but never used.","'responseGraficoRACMI' is assigned a value but never used.","'setresponseGraficoRACMI' is assigned a value but never used.","'GraficoRACMI' is assigned a value but never used.","'setGraficoRACMI' is assigned a value but never used.","'setTableRacAberturaMEOrienteMedio' is assigned a value but never used.","'setTableRacAberturaMEEuropa' is assigned a value but never used.","'setTableRacAberturaMEJapao' is assigned a value but never used.","'setTableRacAberturaMEAsia' is assigned a value but never used.","'setTableRacAberturaMEAmericasAfrica' is assigned a value but never used.","'setTableRacAberturaMEContasGlobais' is assigned a value but never used.","'setTableRacAberturaLinhaEspecialFamilia' is assigned a value but never used.","'setTableRacAberturaLinhaEspecialAcumuladoGourmet' is assigned a value but never used.","'setTableRacAberturaLinhaEspecialAcumuladoIncrivel' is assigned a value but never used.","'setTableRacAberturaLinhaEspecialAcumuladoNature' is assigned a value but never used.","'setTableRacAberturaLinhaEspecialAcumuladoRotisserie' is assigned a value but never used.","'setTableRacME' is assigned a value but never used.","'setTableRacFinalME' is assigned a value but never used.","'setTableRacFinalMI' is assigned a value but never used.","'setTableRacFinalRECL' is assigned a value but never used.","'setTableRacFinalPDV' is assigned a value but never used.","'setTableRacFinalTE' is assigned a value but never used.","'setTableRacFinalCRIT' is assigned a value but never used.","'responseGraficoRACDetalhesFFO' is assigned a value but never used.","'setresponseGraficoRACDetalhesFFO' is assigned a value but never used.","'GraficoRACDetalhesFFO' is assigned a value but never used.","'setGraficoRACDetalhesFFO' is assigned a value but never used.","'responseGraficoRACDetalhesAC' is assigned a value but never used.","'setresponseGraficoRACDetalhesAC' is assigned a value but never used.","'GraficoRACDetalhesAC' is assigned a value but never used.","'setGraficoRACDetalhesAC' is assigned a value but never used.","'responseGraficoRACDetalhesLogME' is assigned a value but never used.","'setresponseGraficoRACDetalhesLogME' is assigned a value but never used.","'GraficoRACDetalhesLogME' is assigned a value but never used.","'setGraficoRACDetalhesLogME' is assigned a value but never used.","'responseGraficoRACDetalhesLogMI' is assigned a value but never used.","'setresponseGraficoRACDetalhesLogMI' is assigned a value but never used.","'GraficoRACDetalhesLogMI' is assigned a value but never used.","'setGraficoRACDetalhesLogMI' is assigned a value but never used.","'responseGraficoRACDetalhesDoc' is assigned a value but never used.","'setresponseGraficoRACDetalhesDoc' is assigned a value but never used.","'GraficoRACDetalhesDoc' is assigned a value but never used.","'setGraficoRACDetalhesDoc' is assigned a value but never used.","'responseGraficoRACDetalhesTT' is assigned a value but never used.","'setresponseGraficoRACDetalhesTT' is assigned a value but never used.","'GraficoRACDetalhesTT' is assigned a value but never used.","'setGraficoRACDetalhesTT' is assigned a value but never used.","'responseGraficoRACDetalhesTerceiro' is assigned a value but never used.","'setresponseGraficoRACDetalhesTerceiro' is assigned a value but never used.","'GraficoRACDetalhesTerceiro' is assigned a value but never used.","'setGraficoRACDetalhesTerceiro' is assigned a value but never used.","'setTableRacRACDetalhesTerceiro' is assigned a value but never used.","'responseGraficoRACDetalhesMassatake' is assigned a value but never used.","'setresponseGraficoRACDetalhesMassatake' is assigned a value but never used.","'GraficoRACDetalhesMassatake' is assigned a value but never used.","'setGraficoRACDetalhesMassatake' is assigned a value but never used.","'responseGraficoRACDetalhesPDV' is assigned a value but never used.","'setresponseGraficoRACDetalhesPDV' is assigned a value but never used.","'GraficoRACDetalhesPDV' is assigned a value but never used.","'setGraficoRACDetalhesPDV' is assigned a value but never used.","'responseGraficoRACDetalhesAberturaPDV' is assigned a value but never used.","'setresponseGraficoRACDetalhesAberturaPDV' is assigned a value but never used.","'GraficoRACDetalhesAberturaPDV' is assigned a value but never used.","'setGraficoRACDetalhesAberturaPDV' is assigned a value but never used.","'setTableRacRACDetalhesPDV' is assigned a value but never used.","'responseGraficoRACDetalhesCritica' is assigned a value but never used.","'setresponseGraficoRACDetalhesCritica' is assigned a value but never used.","'GraficoRACDetalhesCritica' is assigned a value but never used.","'setGraficoRACDetalhesCritica' is assigned a value but never used.","'setTableRacRACDetalhesCritica' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoTotal' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoAves' is assigned a value but never used.","'setTableRacLarva' is assigned a value but never used.","'setTableRacIntoxicacao' is assigned a value but never used.","'setTableRacMetal' is assigned a value but never used.","'setTableRacPlastico' is assigned a value but never used.","'setTableRacCabelo' is assigned a value but never used.","'setTableRacInseto' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealAves' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoPreparados' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoFatiados' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoPescados' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealPreparados' is assigned a value but never used.","'setTableRacRACDetalhesEvolucaoSuinos' is assigned a value but never used.","'setTableRacRACDetalhesMetaRealSuinos' is assigned a value but never used.","'responseGraficoRACDetalhesEspeciais' is assigned a value but never used.","'setresponseGraficoRACDetalhesEspeciais' is assigned a value but never used.","'GraficoRACDetalhesEspeciais' is assigned a value but never used.","'setGraficoRACDetalhesEspeciais' is assigned a value but never used.","'setTableRacRACD3InNatura' is assigned a value but never used.","'setTableRacRACD3Preparados' is assigned a value but never used.","'setTableRacRACD0InNatura' is assigned a value but never used.","'setTableRacRACD0Preparados' is assigned a value but never used.","'responseGraficoNNCLogDetalhesTotal' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesTotal' is assigned a value but never used.","'GraficoNNCLogDetalhesTotal' is assigned a value but never used.","'setGraficoNNCLogDetalhesTotal' is assigned a value but never used.","'responseGraficoNNCLogDetalhesAves' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesAves' is assigned a value but never used.","'GraficoNNCLogDetalhesAves' is assigned a value but never used.","'setGraficoNNCLogDetalhesAves' is assigned a value but never used.","'responseGraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'GraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'setGraficoNNCLogDetalhesPreparados' is assigned a value but never used.","'responseGraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'setresponseGraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'GraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'setGraficoNNCLogDetalhesSuinos' is assigned a value but never used.","'setTableNNCLogD3' is assigned a value but never used.","'setTableNNCLogD0' is assigned a value but never used.","'TableNNCTotais' is assigned a value but never used.","'setTableNNCTotais' is assigned a value but never used.","'setTableNNCEvolucaoMes' is assigned a value but never used.","'setTableNNCEvolucaoMesTotais' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadas' is assigned a value but never used.","'GraficoNNCAvesPesadas' is assigned a value but never used.","'setGraficoNNCAvesPesadas' is assigned a value but never used.","'responseGraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'GraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'setGraficoNNCAvesPesadasUnidades' is assigned a value but never used.","'responseGraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'GraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'setGraficoNNCAvesPesadasProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesRS' is assigned a value but never used.","'GraficoNNCAvesRS' is assigned a value but never used.","'setGraficoNNCAvesRS' is assigned a value but never used.","'responseGraficoNNCAvesRSUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesRSUnidades' is assigned a value but never used.","'GraficoNNCAvesRSUnidades' is assigned a value but never used.","'setGraficoNNCAvesRSUnidades' is assigned a value but never used.","'responseGraficoNNCAvesRSProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesRSProblemas' is assigned a value but never used.","'GraficoNNCAvesRSProblemas' is assigned a value but never used.","'setGraficoNNCAvesRSProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesSP' is assigned a value but never used.","'GraficoNNCAvesSP' is assigned a value but never used.","'setGraficoNNCAvesSP' is assigned a value but never used.","'responseGraficoNNCAvesSPUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesSPUnidades' is assigned a value but never used.","'GraficoNNCAvesSPUnidades' is assigned a value but never used.","'setGraficoNNCAvesSPUnidades' is assigned a value but never used.","'responseGraficoNNCAvesSPProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesSPProblemas' is assigned a value but never used.","'GraficoNNCAvesSPProblemas' is assigned a value but never used.","'setGraficoNNCAvesSPProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesPR' is assigned a value but never used.","'GraficoNNCAvesPR' is assigned a value but never used.","'setGraficoNNCAvesPR' is assigned a value but never used.","'responseGraficoNNCAvesPRUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesPRUnidades' is assigned a value but never used.","'GraficoNNCAvesPRUnidades' is assigned a value but never used.","'setGraficoNNCAvesPRUnidades' is assigned a value but never used.","'responseGraficoNNCAvesPRProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesPRProblemas' is assigned a value but never used.","'GraficoNNCAvesPRProblemas' is assigned a value but never used.","'setGraficoNNCAvesPRProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesLeves' is assigned a value but never used.","'GraficoNNCAvesLeves' is assigned a value but never used.","'setGraficoNNCAvesLeves' is assigned a value but never used.","'responseGraficoNNCAvesLevesUnidades' is assigned a value but never used.","'setresponseGraficoNNCAvesLevesUnidades' is assigned a value but never used.","'GraficoNNCAvesLevesUnidades' is assigned a value but never used.","'setGraficoNNCAvesLevesUnidades' is assigned a value but never used.","'responseGraficoNNCAvesLevesProblemas' is assigned a value but never used.","'setresponseGraficoNNCAvesLevesProblemas' is assigned a value but never used.","'GraficoNNCAvesLevesProblemas' is assigned a value but never used.","'setGraficoNNCAvesLevesProblemas' is assigned a value but never used.","'setresponseGraficoNNCSuinos' is assigned a value but never used.","'GraficoNNCSuinos' is assigned a value but never used.","'setGraficoNNCSuinos' is assigned a value but never used.","'responseGraficoNNCSuinosUnidades' is assigned a value but never used.","'setresponseGraficoNNCSuinosUnidades' is assigned a value but never used.","'GraficoNNCSuinosUnidades' is assigned a value but never used.","'setGraficoNNCSuinosUnidades' is assigned a value but never used.","'responseGraficoNNCSuinosProblemas' is assigned a value but never used.","'setresponseGraficoNNCSuinosProblemas' is assigned a value but never used.","'GraficoNNCSuinosProblemas' is assigned a value but never used.","'setGraficoNNCSuinosProblemas' is assigned a value but never used.","'setresponseGraficoNNCPreparados' is assigned a value but never used.","'GraficoNNCPreparados' is assigned a value but never used.","'setGraficoNNCPreparados' is assigned a value but never used.","'responseGraficoNNCPreparadosUnidades' is assigned a value but never used.","'setresponseGraficoNNCPreparadosUnidades' is assigned a value but never used.","'GraficoNNCPreparadosUnidades' is assigned a value but never used.","'setGraficoNNCPreparadosUnidades' is assigned a value but never used.","'responseGraficoNNCPreparadosProblemas' is assigned a value but never used.","'setresponseGraficoNNCPreparadosProblemas' is assigned a value but never used.","'GraficoNNCPreparadosProblemas' is assigned a value but never used.","'setGraficoNNCPreparadosProblemas' is assigned a value but never used.","'responseGraficoNNCCETotal' is assigned a value but never used.","'setresponseGraficoNNCCETotal' is assigned a value but never used.","'GraficoNNCCETotal' is assigned a value but never used.","'setGraficoNNCCETotal' is assigned a value but never used.","'responseGraficoNNCCEInerente' is assigned a value but never used.","'setresponseGraficoNNCCEInerente' is assigned a value but never used.","'GraficoNNCCEInerente' is assigned a value but never used.","'setGraficoNNCCEInerente' is assigned a value but never used.","'responseGraficoNNCCENaoInerente' is assigned a value but never used.","'setresponseGraficoNNCCENaoInerente' is assigned a value but never used.","'GraficoNNCCENaoInerente' is assigned a value but never used.","'setGraficoNNCCENaoInerente' is assigned a value but never used.","'responseGraficoNNCCEOssos' is assigned a value but never used.","'setresponseGraficoNNCCEOssos' is assigned a value but never used.","'GraficoNNCCEOssos' is assigned a value but never used.","'setGraficoNNCCEOssos' is assigned a value but never used.","'responseGraficoNNCCEPlastico' is assigned a value but never used.","'setresponseGraficoNNCCEPlastico' is assigned a value but never used.","'GraficoNNCCEPlastico' is assigned a value but never used.","'setGraficoNNCCEPlastico' is assigned a value but never used.","'responseGraficoNNCCEMetal' is assigned a value but never used.","'setresponseGraficoNNCCEMetal' is assigned a value but never used.","'GraficoNNCCEMetal' is assigned a value but never used.","'setGraficoNNCCEMetal' is assigned a value but never used.","'setTableNNCMPD3InNatura' is assigned a value but never used.","'setTableNNCMPD3Preparados' is assigned a value but never used.","'setTableNNCMPD0InNatura' is assigned a value but never used.","'setTableNNCMPD0Preparados' is assigned a value but never used.","'setTableNNCMPCEOssos' is assigned a value but never used.","'setTableNNCMPCEOssosFornecedor' is assigned a value but never used.","'setTableNNCMPCEOssosUnidadesReclamantes' is assigned a value but never used.","'setTableRacCorposEstranhos' is assigned a value but never used.","'setTableRacCorposEstranhosInerentes' is assigned a value but never used.","'setTableNNCCEPlastico' is assigned a value but never used.","'setTableNNCCEMetal' is assigned a value but never used.","'setTableNNCCEOssos' is assigned a value but never used.","'setTableNNCCE' is assigned a value but never used.","'setTableNNCCEInerenteNaoInerente' is assigned a value but never used.","'responseGraficoICUnidadesAves' is assigned a value but never used.","'setresponseGraficoICUnidadesAves' is assigned a value but never used.","'GraficoICUnidadesAves' is assigned a value but never used.","'setGraficoICUnidadesAves' is assigned a value but never used.","'responseGraficoICIndicadoresAves' is assigned a value but never used.","'setresponseGraficoICIndicadoresAves' is assigned a value but never used.","'GraficoICIndicadoresAves' is assigned a value but never used.","'setGraficoICIndicadoresAves' is assigned a value but never used.","'responseGraficoICUnidadesSuinos' is assigned a value but never used.","'setresponseGraficoICUnidadesSuinos' is assigned a value but never used.","'GraficoICUnidadesSuinos' is assigned a value but never used.","'setGraficoICUnidadesSuinos' is assigned a value but never used.","'responseGraficoICIndicadoresSuinos' is assigned a value but never used.","'setresponseGraficoICIndicadoresSuinos' is assigned a value but never used.","'GraficoICIndicadoresSuinos' is assigned a value but never used.","'setGraficoICIndicadoresSuinos' is assigned a value but never used.","'responseGraficoICUnidadesPreparados' is assigned a value but never used.","'setresponseGraficoICUnidadesPreparados' is assigned a value but never used.","'GraficoICUnidadesPreparados' is assigned a value but never used.","'setGraficoICUnidadesPreparados' is assigned a value but never used.","'responseGraficoICIndicadoresPreparados' is assigned a value but never used.","'setresponseGraficoICIndicadoresPreparados' is assigned a value but never used.","'GraficoICIndicadoresPreparados' is assigned a value but never used.","'setGraficoICIndicadoresPreparados' is assigned a value but never used.","'whereRACPreparados' is assigned a value but never used.","'whereNNCMP' is assigned a value but never used.","'arrumaTabela1nivel' is defined but never used.","'arrumaTabela3niveis' is defined but never used.","React Hook React.useEffect has missing dependencies: 'GraficoRACDetalhesCE', 'GraficoRACDetalhesCEInerente', 'GraficoRACDetalhesCENaoInerente', 'GraficoRACDetalhesCEPlastico', 'GraficoRACDetalhesCabelo', 'GraficoRACDetalhesInseto', 'GraficoRACDetalhesIntoxicacao', 'GraficoRACDetalhesLarva', 'GraficoRACDetalhesMetal', 'GraficoRACDetalhesPlastico', 'buscarDadosTable', and 'chamarAPI'. Either include them or remove the dependency array.",["2062"],"'GerarGraficoHistorico' is assigned a value but never used.","'GerarGraficoHistoricoAnoAnterior' is assigned a value but never used.","'GerarGraficoHistoricoAnoAnteriorSemMeta' is assigned a value but never used.","'GerarGraficoBarras' is assigned a value but never used.","'DataTableRACFinalME' is assigned a value but never used.","'DataTableRACFinalMI' is assigned a value but never used.","'DataTableRACFinalRECL' is assigned a value but never used.","'DataTableRACFinalPDV' is assigned a value but never used.","'DataTableRACFinalTE' is assigned a value but never used.","'DataTableRACFinalCRIT' is assigned a value but never used.","'DataTableRACAberturaME' is assigned a value but never used.","'DataTableRACAberturaMEOrienteMedio' is assigned a value but never used.","'DataTableRACAberturaMEEuropa' is assigned a value but never used.","'DataTableRACAberturaMEJapao' is assigned a value but never used.","'DataTableRACAberturaMEAsia' is assigned a value but never used.","'DataTableRACAberturaMEAmericasAfrica' is assigned a value but never used.","'DataTableRACAberturaMEContasGlobais' is assigned a value but never used.","'DataTableRACAberturaLinhaEspecialFamilia' is assigned a value but never used.","'DataTableRACAberturaLinhaEspecialAcumuladoGourmet' is assigned a value but never used.","'DataTableRACAberturaLinhaEspecialAcumuladoIncrivel' is assigned a value but never used.","'DataTableRACAberturaLinhaEspecialAcumuladoNature' is assigned a value but never used.","'DataTableRACAberturaLinhaEspecialAcumuladoRotisserie' is assigned a value but never used.","'DataTableNNCMPCEOssos' is assigned a value but never used.","'DataTableNNCMPCEOssosFornecedor' is assigned a value but never used.","'DataTableNNCMPCEOssosUnidadesReclamantes' is assigned a value but never used.","'DataTableRacRACDetalhesTerceiro' is assigned a value but never used.","'DataTableRacRACDetalhesMetaRealAves' is assigned a value but never used.","'DataTableRacRACDetalhesMetaRealPreparados' is assigned a value but never used.","'DataTableRacRACDetalhesMetaRealSuinos' is assigned a value but never used.","'DataTableRacRACDetalhesPDV' is assigned a value but never used.","'DataTableRACD3INNATURA' is assigned a value but never used.","'DataTableRACD0INNATURA' is assigned a value but never used.","'DataTableRACD3Preparados' is assigned a value but never used.","'DataTableRACD0Preparados' is assigned a value but never used.","'DataTableNNCLogD3' is assigned a value but never used.","'DataTableNNCLogD0' is assigned a value but never used.","'DataTableNNCMPD3INNATURA' is assigned a value but never used.","'DataTableNNCMPD0INNATURA' is assigned a value but never used.","'DataTableNNCMPD3Preparados' is assigned a value but never used.","'DataTableNNCMPD0Preparados' is assigned a value but never used.","'DataTableNNCEvolucaoMes' is assigned a value but never used.","'DataTableRacRACDetalhesCritica' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoTotal' is assigned a value but never used.","'DataTableNNCCEPlastico' is assigned a value but never used.","'DataTableNNCCEMetal' is assigned a value but never used.","'DataTableNNCCEOssos' is assigned a value but never used.","'DataTableNNCCE' is assigned a value but never used.","'DataTableNNCCEInerenteNaoInerente' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoAves' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoPreparados' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoFatiados' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoPescados' is assigned a value but never used.","'DataTableRacRACDetalhesEvolucaoSuinos' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"2063","fix":"2064"},{"messageId":"2065","fix":"2066","desc":"2067"},{"messageId":"2068","fix":"2069","desc":"2070"},{"messageId":"2065","fix":"2071","desc":"2067"},{"messageId":"2068","fix":"2072","desc":"2070"},{"messageId":"2065","fix":"2073","desc":"2067"},{"messageId":"2068","fix":"2074","desc":"2070"},{"messageId":"2065","fix":"2075","desc":"2067"},{"messageId":"2068","fix":"2076","desc":"2070"},{"messageId":"2065","fix":"2077","desc":"2067"},{"messageId":"2068","fix":"2078","desc":"2070"},{"messageId":"2065","fix":"2079","desc":"2067"},{"messageId":"2068","fix":"2080","desc":"2070"},{"messageId":"2065","fix":"2081","desc":"2067"},{"messageId":"2068","fix":"2082","desc":"2070"},{"messageId":"2065","fix":"2083","desc":"2067"},{"messageId":"2068","fix":"2084","desc":"2070"},{"messageId":"2065","fix":"2085","desc":"2067"},{"messageId":"2068","fix":"2086","desc":"2070"},{"messageId":"2065","fix":"2087","desc":"2067"},{"messageId":"2068","fix":"2088","desc":"2070"},{"messageId":"2065","fix":"2089","desc":"2067"},{"messageId":"2068","fix":"2090","desc":"2070"},{"messageId":"2065","fix":"2091","desc":"2067"},{"messageId":"2068","fix":"2092","desc":"2070"},{"messageId":"2065","fix":"2093","desc":"2067"},{"messageId":"2068","fix":"2094","desc":"2070"},{"messageId":"2065","fix":"2095","desc":"2067"},{"messageId":"2068","fix":"2096","desc":"2070"},{"messageId":"2065","fix":"2097","desc":"2067"},{"messageId":"2068","fix":"2098","desc":"2070"},{"messageId":"2065","fix":"2099","desc":"2067"},{"messageId":"2068","fix":"2100","desc":"2070"},{"messageId":"2065","fix":"2101","desc":"2067"},{"messageId":"2068","fix":"2102","desc":"2070"},{"messageId":"2065","fix":"2103","desc":"2067"},{"messageId":"2068","fix":"2104","desc":"2070"},{"messageId":"2065","fix":"2105","desc":"2067"},{"messageId":"2068","fix":"2106","desc":"2070"},{"messageId":"2065","fix":"2107","desc":"2067"},{"messageId":"2068","fix":"2108","desc":"2070"},{"messageId":"2065","fix":"2109","desc":"2067"},{"messageId":"2068","fix":"2110","desc":"2070"},{"messageId":"2065","fix":"2111","desc":"2067"},{"messageId":"2068","fix":"2112","desc":"2070"},{"messageId":"2065","fix":"2113","desc":"2067"},{"messageId":"2068","fix":"2114","desc":"2070"},{"messageId":"2065","fix":"2115","desc":"2067"},{"messageId":"2068","fix":"2116","desc":"2070"},{"messageId":"2065","fix":"2117","desc":"2067"},{"messageId":"2068","fix":"2118","desc":"2070"},{"messageId":"2065","fix":"2119","desc":"2067"},{"messageId":"2068","fix":"2120","desc":"2070"},{"messageId":"2065","fix":"2121","desc":"2067"},{"messageId":"2068","fix":"2122","desc":"2070"},{"messageId":"2065","fix":"2123","desc":"2067"},{"messageId":"2068","fix":"2124","desc":"2070"},{"messageId":"2065","fix":"2125","desc":"2067"},{"messageId":"2068","fix":"2126","desc":"2070"},{"messageId":"2065","fix":"2127","desc":"2067"},{"messageId":"2068","fix":"2128","desc":"2070"},{"messageId":"2065","fix":"2129","desc":"2067"},{"messageId":"2068","fix":"2130","desc":"2070"},{"messageId":"2065","fix":"2131","desc":"2067"},{"messageId":"2068","fix":"2132","desc":"2070"},{"messageId":"2065","fix":"2133","desc":"2067"},{"messageId":"2068","fix":"2134","desc":"2070"},{"messageId":"2065","fix":"2135","desc":"2067"},{"messageId":"2068","fix":"2136","desc":"2070"},{"messageId":"2065","fix":"2137","desc":"2067"},{"messageId":"2068","fix":"2138","desc":"2070"},{"messageId":"2065","fix":"2139","desc":"2067"},{"messageId":"2068","fix":"2140","desc":"2070"},{"messageId":"2065","fix":"2141","desc":"2067"},{"messageId":"2068","fix":"2142","desc":"2070"},{"messageId":"2065","fix":"2143","desc":"2067"},{"messageId":"2068","fix":"2144","desc":"2070"},{"messageId":"2065","fix":"2145","desc":"2067"},{"messageId":"2068","fix":"2146","desc":"2070"},{"messageId":"2065","fix":"2147","desc":"2067"},{"messageId":"2068","fix":"2148","desc":"2070"},{"messageId":"2065","fix":"2149","desc":"2067"},{"messageId":"2068","fix":"2150","desc":"2070"},{"messageId":"2065","fix":"2151","desc":"2067"},{"messageId":"2068","fix":"2152","desc":"2070"},{"messageId":"2065","fix":"2153","desc":"2067"},{"messageId":"2068","fix":"2154","desc":"2070"},{"messageId":"2065","fix":"2155","desc":"2067"},{"messageId":"2068","fix":"2156","desc":"2070"},{"messageId":"2065","fix":"2157","desc":"2067"},{"messageId":"2068","fix":"2158","desc":"2070"},{"messageId":"2065","fix":"2159","desc":"2067"},{"messageId":"2068","fix":"2160","desc":"2070"},{"messageId":"2065","fix":"2161","desc":"2067"},{"messageId":"2068","fix":"2162","desc":"2070"},{"messageId":"2065","fix":"2163","desc":"2067"},{"messageId":"2068","fix":"2164","desc":"2070"},{"messageId":"2065","fix":"2165","desc":"2067"},{"messageId":"2068","fix":"2166","desc":"2070"},{"messageId":"2065","fix":"2167","desc":"2067"},{"messageId":"2068","fix":"2168","desc":"2070"},{"messageId":"2065","fix":"2169","desc":"2067"},{"messageId":"2068","fix":"2170","desc":"2070"},{"messageId":"2065","fix":"2171","desc":"2067"},{"messageId":"2068","fix":"2172","desc":"2070"},{"messageId":"2065","fix":"2173","desc":"2067"},{"messageId":"2068","fix":"2174","desc":"2070"},{"messageId":"2065","fix":"2175","desc":"2067"},{"messageId":"2068","fix":"2176","desc":"2070"},{"messageId":"2065","fix":"2177","desc":"2067"},{"messageId":"2068","fix":"2178","desc":"2070"},{"messageId":"2065","fix":"2179","desc":"2067"},{"messageId":"2068","fix":"2180","desc":"2070"},{"messageId":"2065","fix":"2181","desc":"2067"},{"messageId":"2068","fix":"2182","desc":"2070"},{"messageId":"2065","fix":"2183","desc":"2067"},{"messageId":"2068","fix":"2184","desc":"2070"},{"messageId":"2065","fix":"2185","desc":"2067"},{"messageId":"2068","fix":"2186","desc":"2070"},{"messageId":"2065","fix":"2187","desc":"2067"},{"messageId":"2068","fix":"2188","desc":"2070"},{"messageId":"2065","fix":"2189","desc":"2067"},{"messageId":"2068","fix":"2190","desc":"2070"},{"messageId":"2065","fix":"2191","desc":"2067"},{"messageId":"2068","fix":"2192","desc":"2070"},{"messageId":"2065","fix":"2193","desc":"2067"},{"messageId":"2068","fix":"2194","desc":"2070"},{"messageId":"2065","fix":"2195","desc":"2067"},{"messageId":"2068","fix":"2196","desc":"2070"},{"messageId":"2065","fix":"2197","desc":"2067"},{"messageId":"2068","fix":"2198","desc":"2070"},{"messageId":"2065","fix":"2199","desc":"2067"},{"messageId":"2068","fix":"2200","desc":"2070"},{"messageId":"2065","fix":"2201","desc":"2067"},{"messageId":"2068","fix":"2202","desc":"2070"},{"messageId":"2065","fix":"2203","desc":"2067"},{"messageId":"2068","fix":"2204","desc":"2070"},{"messageId":"2065","fix":"2205","desc":"2067"},{"messageId":"2068","fix":"2206","desc":"2070"},{"messageId":"2065","fix":"2207","desc":"2067"},{"messageId":"2068","fix":"2208","desc":"2070"},{"messageId":"2065","fix":"2209","desc":"2067"},{"messageId":"2068","fix":"2210","desc":"2070"},{"messageId":"2065","fix":"2211","desc":"2067"},{"messageId":"2068","fix":"2212","desc":"2070"},{"messageId":"2065","fix":"2213","desc":"2067"},{"messageId":"2068","fix":"2214","desc":"2070"},{"messageId":"2065","fix":"2215","desc":"2067"},{"messageId":"2068","fix":"2216","desc":"2070"},{"messageId":"2065","fix":"2217","desc":"2067"},{"messageId":"2068","fix":"2218","desc":"2070"},{"messageId":"2065","fix":"2219","desc":"2067"},{"messageId":"2068","fix":"2220","desc":"2070"},{"messageId":"2065","fix":"2221","desc":"2067"},{"messageId":"2068","fix":"2222","desc":"2070"},{"messageId":"2065","fix":"2223","desc":"2067"},{"messageId":"2068","fix":"2224","desc":"2070"},{"messageId":"2065","fix":"2225","desc":"2067"},{"messageId":"2068","fix":"2226","desc":"2070"},{"messageId":"2065","fix":"2227","desc":"2067"},{"messageId":"2068","fix":"2228","desc":"2070"},{"desc":"2229","fix":"2230"},{"desc":"2231","fix":"2232"},"Update the dependencies array to be: [GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",{"range":"2233","text":"2234"},"removeEscape",{"range":"2235","text":"2236"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2237","text":"2238"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2239","text":"2236"},{"range":"2240","text":"2238"},{"range":"2241","text":"2236"},{"range":"2242","text":"2238"},{"range":"2243","text":"2236"},{"range":"2244","text":"2238"},{"range":"2245","text":"2236"},{"range":"2246","text":"2238"},{"range":"2247","text":"2236"},{"range":"2248","text":"2238"},{"range":"2249","text":"2236"},{"range":"2250","text":"2238"},{"range":"2251","text":"2236"},{"range":"2252","text":"2238"},{"range":"2253","text":"2236"},{"range":"2254","text":"2238"},{"range":"2255","text":"2236"},{"range":"2256","text":"2238"},{"range":"2257","text":"2236"},{"range":"2258","text":"2238"},{"range":"2259","text":"2236"},{"range":"2260","text":"2238"},{"range":"2261","text":"2236"},{"range":"2262","text":"2238"},{"range":"2263","text":"2236"},{"range":"2264","text":"2238"},{"range":"2265","text":"2236"},{"range":"2266","text":"2238"},{"range":"2267","text":"2236"},{"range":"2268","text":"2238"},{"range":"2269","text":"2236"},{"range":"2270","text":"2238"},{"range":"2271","text":"2236"},{"range":"2272","text":"2238"},{"range":"2273","text":"2236"},{"range":"2274","text":"2238"},{"range":"2275","text":"2236"},{"range":"2276","text":"2238"},{"range":"2277","text":"2236"},{"range":"2278","text":"2238"},{"range":"2279","text":"2236"},{"range":"2280","text":"2238"},{"range":"2281","text":"2236"},{"range":"2282","text":"2238"},{"range":"2283","text":"2236"},{"range":"2284","text":"2238"},{"range":"2285","text":"2236"},{"range":"2286","text":"2238"},{"range":"2287","text":"2236"},{"range":"2288","text":"2238"},{"range":"2289","text":"2236"},{"range":"2290","text":"2238"},{"range":"2291","text":"2236"},{"range":"2292","text":"2238"},{"range":"2293","text":"2236"},{"range":"2294","text":"2238"},{"range":"2295","text":"2236"},{"range":"2296","text":"2238"},{"range":"2297","text":"2236"},{"range":"2298","text":"2238"},{"range":"2299","text":"2236"},{"range":"2300","text":"2238"},{"range":"2301","text":"2236"},{"range":"2302","text":"2238"},{"range":"2303","text":"2236"},{"range":"2304","text":"2238"},{"range":"2305","text":"2236"},{"range":"2306","text":"2238"},{"range":"2307","text":"2236"},{"range":"2308","text":"2238"},{"range":"2309","text":"2236"},{"range":"2310","text":"2238"},{"range":"2311","text":"2236"},{"range":"2312","text":"2238"},{"range":"2313","text":"2236"},{"range":"2314","text":"2238"},{"range":"2315","text":"2236"},{"range":"2316","text":"2238"},{"range":"2317","text":"2236"},{"range":"2318","text":"2238"},{"range":"2319","text":"2236"},{"range":"2320","text":"2238"},{"range":"2321","text":"2236"},{"range":"2322","text":"2238"},{"range":"2323","text":"2236"},{"range":"2324","text":"2238"},{"range":"2325","text":"2236"},{"range":"2326","text":"2238"},{"range":"2327","text":"2236"},{"range":"2328","text":"2238"},{"range":"2329","text":"2236"},{"range":"2330","text":"2238"},{"range":"2331","text":"2236"},{"range":"2332","text":"2238"},{"range":"2333","text":"2236"},{"range":"2334","text":"2238"},{"range":"2335","text":"2236"},{"range":"2336","text":"2238"},{"range":"2337","text":"2236"},{"range":"2338","text":"2238"},{"range":"2339","text":"2236"},{"range":"2340","text":"2238"},{"range":"2341","text":"2236"},{"range":"2342","text":"2238"},{"range":"2343","text":"2236"},{"range":"2344","text":"2238"},{"range":"2345","text":"2236"},{"range":"2346","text":"2238"},{"range":"2347","text":"2236"},{"range":"2348","text":"2238"},{"range":"2349","text":"2236"},{"range":"2350","text":"2238"},{"range":"2351","text":"2236"},{"range":"2352","text":"2238"},{"range":"2353","text":"2236"},{"range":"2354","text":"2238"},{"range":"2355","text":"2236"},{"range":"2356","text":"2238"},{"range":"2357","text":"2236"},{"range":"2358","text":"2238"},{"range":"2359","text":"2236"},{"range":"2360","text":"2238"},{"range":"2361","text":"2236"},{"range":"2362","text":"2238"},{"range":"2363","text":"2236"},{"range":"2364","text":"2238"},{"range":"2365","text":"2236"},{"range":"2366","text":"2238"},{"range":"2367","text":"2236"},{"range":"2368","text":"2238"},{"range":"2369","text":"2236"},{"range":"2370","text":"2238"},{"range":"2371","text":"2236"},{"range":"2372","text":"2238"},{"range":"2373","text":"2236"},{"range":"2374","text":"2238"},{"range":"2375","text":"2236"},{"range":"2376","text":"2238"},{"range":"2377","text":"2236"},{"range":"2378","text":"2238"},{"range":"2379","text":"2236"},{"range":"2380","text":"2238"},{"range":"2381","text":"2236"},{"range":"2382","text":"2238"},{"range":"2383","text":"2236"},{"range":"2384","text":"2238"},{"range":"2385","text":"2236"},{"range":"2386","text":"2238"},{"range":"2387","text":"2236"},{"range":"2388","text":"2238"},{"range":"2389","text":"2236"},{"range":"2390","text":"2238"},{"range":"2391","text":"2236"},{"range":"2392","text":"2238"},{"range":"2393","text":"2236"},{"range":"2394","text":"2238"},{"range":"2395","text":"2236"},{"range":"2396","text":"2238"},"Update the dependencies array to be: [GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoICIndicadoresAves, GraficoICIndicadoresPreparados, GraficoICIndicadoresSuinos, GraficoICUnidadesAves, GraficoICUnidadesPreparados, GraficoICUnidadesSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]",{"range":"2397","text":"2398"},"Update the dependencies array to be: [GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesMetal, GraficoRACDetalhesPlastico, buscarDadosTable, chamarAPI]",{"range":"2399","text":"2400"},[3850,3852],"[GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",[54113,54114],"",[54113,54113],"\\",[54125,54126],[54125,54125],[54360,54361],[54360,54360],[54372,54373],[54372,54372],[55533,55534],[55533,55533],[55541,55542],[55541,55541],[55764,55765],[55764,55764],[55772,55773],[55772,55772],[57200,57201],[57200,57200],[57212,57213],[57212,57212],[57215,57216],[57215,57215],[57229,57230],[57229,57229],[57232,57233],[57232,57232],[57246,57247],[57246,57246],[57249,57250],[57249,57249],[57263,57264],[57263,57263],[57267,57268],[57267,57267],[57275,57276],[57275,57275],[57278,57279],[57278,57278],[57286,57287],[57286,57286],[57290,57291],[57290,57290],[57300,57301],[57300,57300],[57320,57321],[57320,57320],[57332,57333],[57332,57332],[57335,57336],[57335,57335],[57343,57344],[57343,57343],[57347,57348],[57347,57347],[57365,57366],[57365,57365],[57369,57370],[57369,57369],[57379,57380],[57379,57379],[57629,57630],[57629,57629],[57641,57642],[57641,57641],[57644,57645],[57644,57644],[57658,57659],[57658,57658],[57661,57662],[57661,57661],[57675,57676],[57675,57675],[57678,57679],[57678,57678],[57692,57693],[57692,57692],[57696,57697],[57696,57696],[57704,57705],[57704,57704],[57707,57708],[57707,57707],[57715,57716],[57715,57715],[57719,57720],[57719,57719],[57729,57730],[57729,57729],[57749,57750],[57749,57749],[57761,57762],[57761,57761],[57764,57765],[57764,57764],[57772,57773],[57772,57772],[57776,57777],[57776,57776],[57794,57795],[57794,57794],[57798,57799],[57798,57798],[57808,57809],[57808,57808],[65374,65375],[65374,65374],[65380,65381],[65380,65380],[65414,65415],[65414,65414],[65422,65423],[65422,65422],[65426,65427],[65426,65426],[65434,65435],[65434,65434],[65468,65469],[65468,65468],[65488,65489],[65488,65488],[65492,65493],[65492,65492],[65500,65501],[65500,65500],[65504,65505],[65504,65504],[65512,65513],[65512,65512],[66174,66175],[66174,66174],[66180,66181],[66180,66180],[66214,66215],[66214,66214],[66222,66223],[66222,66222],[66226,66227],[66226,66226],[66234,66235],[66234,66234],[66268,66269],[66268,66268],[66288,66289],[66288,66288],[66292,66293],[66292,66292],[66300,66301],[66300,66300],[66304,66305],[66304,66304],[66312,66313],[66312,66312],[66931,66932],[66931,66931],[66937,66938],[66937,66937],[67321,67322],[67321,67321],[67327,67328],[67327,67327],[96845,96847],"[GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoICIndicadoresAves, GraficoICIndicadoresPreparados, GraficoICIndicadoresSuinos, GraficoICUnidadesAves, GraficoICUnidadesPreparados, GraficoICUnidadesSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]",[93423,93425],"[GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesMetal, GraficoRACDetalhesPlastico, buscarDadosTable, chamarAPI]"]