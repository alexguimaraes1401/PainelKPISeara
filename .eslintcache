[{"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js":"1","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js":"2","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js":"3","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js":"4","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js":"5","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js":"6","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js":"7","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js":"8","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js":"9","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js":"10","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js":"11","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js":"12","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js":"13","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js":"14","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js":"15","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js":"16","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js":"17","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js":"18","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js":"19","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js":"20","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js":"21","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js":"22","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js":"23","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js":"24"},{"size":546,"mtime":1622572768672,"results":"25","hashOfConfig":"26"},{"size":8638,"mtime":1623173278819,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1615291765866,"results":"28","hashOfConfig":"26"},{"size":14319,"mtime":1626637015283,"results":"29","hashOfConfig":"26"},{"size":6422,"mtime":1626437577829,"results":"30","hashOfConfig":"26"},{"size":2288,"mtime":1615291765854,"results":"31","hashOfConfig":"26"},{"size":2638,"mtime":1617233353191,"results":"32","hashOfConfig":"26"},{"size":1824,"mtime":1615291765851,"results":"33","hashOfConfig":"26"},{"size":835,"mtime":1615291765852,"results":"34","hashOfConfig":"26"},{"size":1596,"mtime":1615395366826,"results":"35","hashOfConfig":"26"},{"size":580,"mtime":1615928953591,"results":"36","hashOfConfig":"26"},{"size":197,"mtime":1615928953593,"results":"37","hashOfConfig":"26"},{"size":376,"mtime":1615928953599,"results":"38","hashOfConfig":"26"},{"size":34970,"mtime":1618196804244,"results":"39","hashOfConfig":"26"},{"size":191,"mtime":1617233194718,"results":"40","hashOfConfig":"26"},{"size":188,"mtime":1617233204450,"results":"41","hashOfConfig":"26"},{"size":460735,"mtime":1628126466130,"results":"42","hashOfConfig":"26"},{"size":0,"mtime":1623103764544,"results":"43","hashOfConfig":"26"},{"size":765,"mtime":1627923006717,"results":"44","hashOfConfig":"26"},{"size":9914,"mtime":1623173278878,"results":"45","hashOfConfig":"26"},{"size":9658,"mtime":1623173278848,"results":"46","hashOfConfig":"26"},{"size":5521,"mtime":1623173278887,"results":"47","hashOfConfig":"26"},{"size":1562,"mtime":1627923015253,"results":"48","hashOfConfig":"26"},{"size":55056,"mtime":1623345057880,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18gn22y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":236,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\index.js",[],["110","111"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\App.js",["112","113","114","115","116"],"import React, { Suspense, lazy } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// Grab components out of the ReactRouterDOM that we will be using\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\n\r\nimport UserApi from './api/loginApi'\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './index.css';\r\nimport './css/sidebar-desktop.css';\r\nimport './css/login.css';\r\nimport './css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport NavbarMobile from './components/navbarMobile';\r\nimport NavbarDesktop from './components/navbarDesktop';\r\nimport SidebarDesktop from './components/sidebarDesktop';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst ContactUs = lazy(() => import(\"./views/contactUs\"));\r\nconst NotFoundPage = lazy(() => import(\"./views/notFoundPage\"));\r\nconst DashViewAbsorcao = lazy(() => import(\"./views/dashViewAbsorcao\"));\r\nconst DashViewNNCLog = lazy(() => import(\"./views/dashViewNNCLog\"));\r\nconst DashViewNNCMP = lazy(() => import(\"./views/dashViewNNCMP\"));\r\nconst DashViewRac = lazy(() => import(\"./views/rac\"));\r\nconst Home = lazy(() => import(\"./views/home\"));\r\nconst CreateUser = lazy(() => import(\"./views/createUser\"));\r\nconst ListUsers = lazy(() => import(\"./views/listUsers\"));\r\nconst EditUser = lazy(() => import(\"./views/editUser\"));\r\n\r\nfunction App() {\r\n    const userKpiDigitalTemp = { name: 'admin', pass: 'admin' }\r\n    const [state, setState] = React.useState({ username: \"\", password: \"\" });\r\n    // const [password, setPassword] = React.useState(\"\");\r\n    const [user, setUser] = React.useState();\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n    const toast = React.useRef(null);\r\n\r\n    const handleLogin = (e) => {\r\n       \r\n        const user = state;\r\n        \r\n        if(user.username.length < 1 || user.password.length < 1)\r\n        {\r\n            showInfo(\"Dados invÃ¡lidos\", \"Os campos UsuÃ¡rio e Senha sÃ£o obrigatÃ³rios\",  6000)\r\n            return;   \r\n        }\r\n\r\n        UserApi.post(user)\r\n            .then(r => {\r\n                if (r.status === 200) {\r\n                    localStorage.setItem('user', JSON.stringify({ name: user.username, token: r.data }));\r\n                    setIsAuthenticated(true);\r\n                    window.location.reload(false);\r\n                }\r\n            }).catch((e,ex) => {\r\n                if (e.response &&  e.response.status === 404) {\r\n                    showInfo(\"UsuÃ¡rio nÃ£o encontrado\", \"Por favor verifique usuÃ¡rio e senha e tente novamente.\", 6000)\r\n                }else {\r\n                    showInfo(\"Nao foi possivel compeltar esta aÃ§Ã£o\", \"No momento nÃ£o Ã© possÃ­vel completar esta aÃ§Ã£o.\", 6000)\r\n                }\r\n                setIsAuthenticated(false);\r\n            }).finally(() => {\r\n            })\r\n    }\r\n\r\n    const showInfo = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'info', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n    \r\n    const showError = (summaryMesage, detailMessage, time) => {\r\n        // toast.current.clear();\r\n        toast.current.show({ severity: 'error', summary: summaryMesage, detail: detailMessage, life: time ?? 3000 });\r\n    }\r\n\r\n    const handleLogout = (e) => {\r\n        setUser({});\r\n        setState({ username: \"\", password: \"\" })\r\n        localStorage.clear();\r\n        window.location.reload(false);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n        if (loggedInUser) {\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            setUser(foundUser);\r\n        }\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault()\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        let statetemp = { ...state };\r\n        statetemp[name] = value\r\n        setState({ ...statetemp });\r\n    }\r\n\r\n    /* Local Componentes */\r\n\r\n    const Layout = ({ children }) => {\r\n        return (\r\n            <div className=\"pdfsize\">\r\n                <NavbarMobile username={user.name} handleLogout={handleLogout} />\r\n                <NavbarDesktop username={user.name} handleLogout={handleLogout} />\r\n                <SidebarDesktop />\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"main-content\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const ChangePageLoader = () => {\r\n        return (\r\n            <ProgressSpinner style={{ width: '50px', height: '50px' }} strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\" />\r\n        )\r\n    }\r\n\r\n    const loginfooter = <span>\r\n        <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n    </span>;\r\n\r\n    /* Se nao esta logado exibe tela de login: */\r\n    if (!user) {\r\n        return (\r\n            <div className=\"global-container\" >\r\n                <Toast ref={toast} position=\"bottom-right\"></Toast>\r\n                <div className=\"card login-form\">\r\n                    <Card\r\n                        title=\"Bem vindo\"\r\n                        subTitle=\"faÃ§a o login para acessar o sistema\"\r\n                        className=\"card-body\"\r\n                        footer={<span>\r\n                            <Button label=\"Entrar\" onClick={(e) => handleLogin(e.target.value)} style={{ width: '100%', marginRight: '.25em' }} />\r\n                        </span>} >\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    id=\"name1\"\r\n                                    name=\"username\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.username}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                />\r\n                                <label htmlFor=\"name1\">UsuÃ¡rio</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pt-4 p-field p-grid\">\r\n                            <span className=\"p-float-label\">\r\n                                <Password\r\n                                    id=\"pass\"\r\n                                    name=\"password\"\r\n                                    style={{ width: '100%' }}\r\n                                    value={state.password}\r\n                                    onChange={(e) => handleInputChange(e)}\r\n                                    feedback={false}\r\n                                    toggleMask />\r\n                                <label htmlFor=\"pass\">Senha</label>\r\n                            </span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    /*Exibe paginas no Router*/\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<ChangePageLoader />}>\r\n                <Layout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route path='/contact' component={ContactUs} />\r\n                        <Route path='/absorcao' component={DashViewAbsorcao} />\r\n                        <Route path='/cadastro' component={CreateUser} />\r\n                        <Route path='/usuarios' component={ListUsers} />\r\n                        <Route exact path='/usuario/:id' component={EditUser} />\r\n                        <Route path='/nnclog' component={DashViewNNCLog} />\r\n                        <Route path='/nncmp' component={DashViewNNCMP} />\r\n                        <Route path='/rac' component={DashViewRac} />\r\n                        <Route path='404' component={NotFoundPage} />\r\n                        <Route path='*' component={NotFoundPage} />\r\n                    </Switch>\r\n                </Layout>\r\n            </Suspense>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\reportWebVitals.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\api.js",["117","118","119","120","121","122","123","124"],"import axios from 'axios'\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators,\r\n    AddItensToJsonArray,\r\n} from '../domain/kpiservice'\r\nimport { months } from '../domain/constants'\r\n\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://192.168.25.200/KPISeara/APISeara/PainelKPIAdm\"\r\n   //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\n\r\n\r\nexport default {\r\n\r\n    getSearaBaseRac: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseSQLNINJA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/SQLNINJA`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n        getSearaBaseRacIndicadoresSemFiltro2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACTotalIndicadoresSemFiltro2`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacIndicadores: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadores`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRacIndicadores_: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacTotalIndicadoresSemFiltro`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseNNCMPTotalCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    getSearaBaseRACTotalCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RACTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n    getSearaBaseRacCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/RacTotalCE?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n    getSearaBaseRacME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacFinal: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RacFinal`, \r\n            data: {'where': p[0]},\r\n            transformResponse: [\r\n                function (data) {\r\n                    \r\n                    return data;\r\n                }\r\n            ]\r\n            \r\n        }),\r\n\r\n    getSearaBaseNCCMP: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n    \r\n        getSearaBaseNCCMPUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNCCMPProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCMPCE: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMPTotalCE`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseNCCLOG: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLogTotal`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseCE: (params) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/CETotal?where=${params[0]}`, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoUnidade: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoUnidade`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRACUnicoProblema: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACUnicoProblema`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    getSearaBaseRacAberturaME: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRacAberturaME2: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RACAberturaME2`, \r\n            data: {'where': p[0]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCLog2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLog2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP2niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP2niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNCMP3niveis: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCMP3niveis`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseRAC1niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/RAC1niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3]},\r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        getSearaBaseNNCLog1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNCLOG1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC1nivelPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC1nivelPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC2niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC2niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseNNC3niveisPIVOTDIA: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/NNC3niveisPIVOTDIA`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        getSearaBaseCE2niveisPIVOTmesDesvio: (p) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/CE2niveisPIVOTmesDesvio`, \r\n            data: {'where': p[0], 'campos': p[1], 'groupBy': p[2], 'campoPivot': p[3], 'campoPivotAlias': p[4]}, \r\n            params: {\r\n                datatype: \"json\"\r\n            },\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        \r\n\r\n        \r\n  \r\n}\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\constants.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\skeletons.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\kpiservice.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarMobile.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\sidebarDesktop.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\components\\navbarDesktop.js",["125","126"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst NavbarDesktop = (props) => {\r\n\r\n    const capitalize = (str) => {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" className=\"navbar-desk\" >\r\n            <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"https://logodownload.org/wp-content/uploads/2014/12/seara-logo-1-1.png\"\r\n                    //width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                Painel de KPIs\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Bem-vindo: <a href=\"#\" style={{ textDecoration: 'none' }}>{capitalize(props.username)}</a>\r\n                </Navbar.Text>\r\n                &nbsp;\r\n                &nbsp;\r\n                <Navbar.Text>\r\n                    <a href=\"#\" style={{ textDecoration: 'none' }} onClick={(e) => props.handleLogout(e)}>\r\n                        <span style={{ cursor: 'pointer', color: 'rgb(255 255 255 / 50%)' }}>\r\n                            Sair &nbsp;\r\n                            <i style={{ cursor: 'pointer', color: '#fff' }} className=\"pi pi-sign-out\"></i>\r\n                        </span>\r\n                    </a>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarDesktop;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\contactUs.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewAbsorcao.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\notFoundPage.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\rac.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions } from '../domain/constants';\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [970,4000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done ânpm i cors --save-devâ\r\n\r\nfunction Home() {\r\n\r\n    \r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n\r\n    //chamadas\r\n    const [TableRacME, setTableRacME] = React.useState()  \r\n\r\n    const [GraficoRAC_Total, setGraficoRAC_Total] = React.useState()   \r\n    const [GraficoRAC_Aves, setGraficoRAC_Aves] = React.useState() \r\n    const [GraficoRAC_Suinos, setGraficoRAC_Suinos] = React.useState() \r\n    const [GraficoRAC_Preparados, setGraficoRAC_Preparados] = React.useState() \r\n    const [GraficoRAC_Outros, setGraficoRAC_Outros] = React.useState() \r\n    const [GraficoNNCMP_Total, setGraficoNNCMP_Total] = React.useState() \r\n    const [GraficoNNCLog_Total, setGraficoNNCLog_Total] = React.useState() \r\n    const [GraficoCE_Total, setGraficoCE_Total] = React.useState() \r\n    \r\n    let [responseGraficoRAC_Total, setresponseGraficoRAC_Total] = React.useState({})\r\n    let [responseGraficoRAC_Aves, setresponseGraficoRAC_Aves] = React.useState({})\r\n    let [responseGraficoRAC_Suinos, setresponseGraficoRAC_Suinos] = React.useState({})\r\n    let [responseGraficoRAC_Preparados, setresponseGraficoRAC_Preparados] = React.useState({})\r\n    let [responseGraficoRAC_Outros, setresponseGraficoRAC_Outros] = React.useState({})\r\n    let [responseGraficoNNCMP_Total, setresponseGraficoNNCMP_Total] = React.useState({})\r\n    let [responseGraficoNNCLog_Total, setresponseGraficoNNCLog_Total] = React.useState({})\r\n    let [responseGraficoCE_Total, setresponseGraficoCE_Total] = React.useState({})\r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        //debugger\r\n        fetchData(GraficoRAC_Total, \"GraficoRAC_Total\");\r\n        fetchData(GraficoRAC_Aves, \"GraficoRAC_Aves\");\r\n        fetchData(GraficoRAC_Suinos, \"GraficoRAC_Suinos\");\r\n        fetchData(GraficoRAC_Preparados, \"GraficoRAC_Preparados\");\r\n        fetchData(GraficoRAC_Outros, \"GraficoRAC_Outros\");\r\n        fetchData(GraficoNNCMP_Total, \"GraficoNNCMP_Total\");\r\n        fetchData(GraficoNNCLog_Total, \"GraficoNNCLog_Total\");\r\n        fetchData(GraficoCE_Total, \"GraficoCE_Total\");\r\n    }, []);\r\n\r\n    const GerarGrafico = (objeto, numGrafico) => {\r\n        ////debugger\r\n        //if (selectedIndicator1 !== \"\" && selectedIndicator2 !== \"\" && selectedIndicator3 !== \"\") {\r\n            ////debugger\r\n            setIsUpdatingData(true)\r\n            let json = objeto; //GraficoRAC_Total , 2, 3.....\r\n            let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n            let groupBy = function groupBy(list, keyGetter) {\r\n                const map = new Map();\r\n                list.forEach((item) => {\r\n                    const key = keyGetter(item);\r\n                    const collection = map.get(key);\r\n                    if (!collection) {\r\n                        map.set(key, [item]);\r\n                    } else {\r\n                        collection.push(item);\r\n                    }\r\n                });\r\n                return map;\r\n            }\r\n\r\n            // let xaxis = Array.from(groupBy(json, x => x[selectedIndicator1]), ([name, value]) => ({ name, value }));\r\n            // let yaxis = Array.from(groupBy(json, x => x[selectedIndicator2]), ([name, value]) => ({ name }));\r\n\r\n            let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n            let yaxis = [{name:'Evolutivo 2020'},{name:'Evolutivo 2021'},{name:'Evolutivo Meta'},{name:'Meta'},{name:'2019'},{name:'2020'},{name: '2021'}];\r\n\r\n            // xaxis.sort(function (a, b) {\r\n            //     return parseFloat(a.name) - parseFloat(b.name);\r\n            // });\r\n\r\n            xaxis.forEach(x => {\r\n                // x['yaxis'] = Array.from(groupBy(x.value, x => x[selectedIndicator2]), ([name, value]) => ({ name, quantidade: somaX(x, name, selectedIndicator2, \"Quant\") }));\r\n                if (x.name == \"2019\"){\r\n                    x['yaxis'] = [{name: \"2019\", value: x.value[0].Valor}]\r\n                }else if (x.name == \"2020\"){\r\n                    x['yaxis'] = [{name: \"2020\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"Meta\"){\r\n                    x['yaxis'] = [{name: \"Meta\", value: x.value[0].Valor}]\r\n                }else if(x.name == \"2021\"){\r\n                    x['yaxis'] = [{name: \"2021\", value: x.value[0].Valor}]\r\n                }else{\r\n                    x['yaxis'] = [\r\n                                    {name: \"Evolutivo 2020\", value: x.value[0].a2020},\r\n                                    {name: \"Evolutivo Meta\", value: x.value[0].aMeta},\r\n                                    {name: \"Evolutivo 2021\", value: x.value[0].a2021}\r\n                                ]\r\n                }\r\n            })\r\n\r\n            let series = []\r\n            yaxis.forEach((y, index) => {\r\n                let dataset = xaxis.map(xx => {\r\n                    let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                    if (yaxysvalue.length)\r\n                        return yaxysvalue[0].value\r\n\r\n                    return null\r\n                })\r\n\r\n                //let cor = colorsBars[Math.floor(Math.random() * colorsBars.length)]\r\n\r\n                let tipo = 'line'\r\n                let cor = '#bfbfbf'\r\n                let corLabel = '#bfbfbf'\r\n                let yAx = \"B\"\r\n                let varborderDash = [0,0]\r\n\r\n                switch (y.name){\r\n\r\n                    case \"2019\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2020\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#bfbfbf\"\r\n                                    corLabel = \"#bfbfbf\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Meta\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"2021\": \r\n                                    tipo = \"bar\"\r\n                                    cor = \"#cccccc\"\r\n                                    corLabel = \"#cccccc\"\r\n                                    yAx = \"A\"\r\n                                    break\r\n                    case \"Evolutivo 2020\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(166, 166, 166)\"\r\n                                    corLabel = \"rgb(166, 166, 166)\"\r\n                                    varborderDash = [10,5]\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo Meta\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(245,156,0)\"\r\n                                    corLabel = \"rgb(245,156,0)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                    case \"Evolutivo 2021\": \r\n                                    tipo = \"line\"\r\n                                    cor = \"rgb(89,89,89)\"\r\n                                    corLabel = \"rgb(89,89,89)\"\r\n                                    yAx = \"B\"\r\n                                    break\r\n                                 \r\n                    default:\r\n                                    break\r\n\r\n\r\n                }\r\n\r\n                let serie = {\r\n                    type: tipo,\r\n                    yAxisID: yAx,\r\n                    label: y.name,\r\n                    backgroundColor: cor,\r\n                    fill: false,\r\n                    borderColor: cor,\r\n                    borderWidth: 2,\r\n                    pointRadius: 5,\r\n                    pointBackgroundColor: \"transparent\",\r\n                    pointBorderColor: \"transparent\",\r\n                    borderDash: varborderDash, \r\n                    data: dataset,\r\n                    datalabels: {\r\n                    \r\n                        align: \"top\",\r\n                        anchor: \"end\",\r\n                        offset: 10,\r\n                        padding: -2,\r\n                        color: corLabel,\r\n                        //clip: true,\r\n                        font: {\r\n                            size: \"10\",\r\n                        },\r\n                        \r\n                    }\r\n                     \r\n                }\r\n                series.push(serie)\r\n            })\r\n\r\n            let seriesAdd = []\r\n            \r\n                series.filter(s => s.label != null).forEach(element => {\r\n                    seriesAdd.push(element)\r\n                });\r\n           \r\n\r\n            const dashboardData = {\r\n                labels: xaxis.map(r => r.name),\r\n                datasets: seriesAdd,\r\n                indicators\r\n                \r\n            };\r\n            //debugger\r\n            switch (numGrafico){\r\n                case \"GraficoRAC_Total\":\r\n                    setresponseGraficoRAC_Total(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Aves\":\r\n                    setresponseGraficoRAC_Aves(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Suinos\":\r\n                    setresponseGraficoRAC_Suinos(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Preparados\":\r\n                    setresponseGraficoRAC_Preparados(dashboardData)\r\n                    break\r\n                case \"GraficoRAC_Outros\":\r\n                    setresponseGraficoRAC_Outros(dashboardData)\r\n                    break\r\n                case \"GraficoNNCMP_Total\":\r\n                    setresponseGraficoNNCMP_Total(dashboardData)\r\n                    break\r\n                case \"GraficoNNCLog_Total\":\r\n                    setresponseGraficoNNCLog_Total(dashboardData)\r\n                    break\r\n                case \"GraficoCE_Total\":\r\n                    setresponseGraficoCE_Total(dashboardData)\r\n                    break\r\n                default:\r\n                    break\r\n\r\n            }\r\n\r\n            setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableColGroupDemo = () => {\r\n\r\n        if (!GraficoRAC_Total) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < GraficoRAC_Total.length; i++) {\r\n            json.push(GraficoRAC_Total[i])\r\n        }\r\n\r\n        const sales = json\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={sales} sortMode=\"multiple\">\r\n                        <Column field=\"Periodo\" header=\"PerÃ­odo\" sortable></Column>\r\n                        <Column field=\"Valor\" header=\"NÂº RAC HistÃ³rico\" sortable ></Column>\r\n                        <Column field=\"a2020\" header=\"NÂº RAC 2020 Mensal\" sortable></Column>\r\n                        <Column field=\"aMeta\" header=\"NÂº RAC Meta Mensal\" sortable></Column>\r\n                        <Column field=\"a2021\" header=\"NÂº RAC 2021 Mensal\" sortable></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////debugger\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    function aplicar() {\r\n        //debugger\r\n        GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n        GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n        GerarGrafico(GraficoRAC_Suinos, \"GraficoRAC_Suinos\")\r\n        GerarGrafico(GraficoRAC_Preparados, \"GraficoRAC_Preparados\")\r\n        GerarGrafico(GraficoRAC_Outros, \"GraficoRAC_Outros\")\r\n        GerarGrafico(GraficoNNCMP_Total, \"GraficoNNCMP_Total\")\r\n        GerarGrafico(GraficoNNCLog_Total, \"GraficoNNCLog_Total\")\r\n        GerarGrafico(GraficoCE_Total, \"GraficoCE_Total\")\r\n    }\r\n\r\n    const fetchData = (objeto, numGrafico) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n            let json = JSON.parse(response.data)\r\n            setTableRacME(json)\r\n        })\r\n\r\n        if(numGrafico == \"GraficoRAC_Total\"){\r\n            //debugger\r\n            let parametros = ['where 1=1']\r\n            api.getSearaBaseRacCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Total(json)\r\n\r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Total, \"GraficoRAC_Total\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n        }else if (numGrafico == \"GraficoRAC_Aves\"){\r\n            //debugger\r\n            let parametros = ['WHERE NegÃ³cio=\\'AVES\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Aves(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Aves(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Suinos\"){\r\n            //debugger\r\n            let parametros = ['WHERE NegÃ³cio=\\'SUÃ\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Suinos(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Suinos(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Preparados\"){\r\n            //debugger\r\n            let parametros = ['WHERE NegÃ³cio=\\'Preparados\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Preparados(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Preparados(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoRAC_Outros\"){\r\n            //debugger\r\n            let parametros = ['WHERE NegÃ³cio=\\'OUTROS\\'']\r\n            api.getSearaBaseRac(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoRAC_Outros(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoRAC_Outros(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCMP_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCMP_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCMP_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoNNCLog_Total\"){\r\n            \r\n            let parametros = ['WHERE 1=1 ']\r\n            api.getSearaBaseNCCMPCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoNNCLog_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoNNCLog_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }else if (numGrafico == \"GraficoCE_Total\"){\r\n            //debugger\r\n            let parametros = ['WHERE    NegÃ³cio =\\'AVES LEVELS\\' ']\r\n            api.getSearaBaseCE(parametros).then((response) => {\r\n                // Do whatever you want to transform the data\r\n                //debugger\r\n\r\n                let json = JSON.parse(response.data)\r\n                let datasets = [];\r\n                let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n                //AddItensToJsonArray(json, 100000, \"bar\")\r\n                //debugger\r\n                setGraficoCE_Total(json)\r\n              \r\n                console.time(\"ProcessResponseBarChart\")\r\n                let { dateField, field, ano } = SetParamsToQuery();\r\n\r\n                SetDateInJsonArrayToQueryOverObjects(json, dateField);\r\n                let problemas = GetIndicators(json, field);\r\n                AddLineMockData(datasets);\r\n                AddDataByFilters(problemas, json, ano, field, datasets, \"bar\");\r\n                console.timeEnd(\"ProcessResponseBarChart\")\r\n\r\n                const dashboardData = {\r\n                    labels: months,\r\n                    datasets: datasets,\r\n                    indicators\r\n                };\r\n\r\n                setresponseGraficoCE_Total(dashboardData)\r\n\r\n                setIsUpdatingData(false)\r\n\r\n                //GerarGrafico(GraficoRAC_Aves, \"GraficoRAC_Aves\")\r\n\r\n            }).catch(err => {\r\n                // what now?\r\n                console.log(err);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Puxando dados da RAC</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div> \r\n            <Row>\r\n                <Col lg={12}>\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                KPI - RCA\r\n                                    <br />\r\n                                <small>DescriÃ§Ã£o do KPI</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={fetchData}>Atualizar</button>\r\n                                </div>  \r\n\r\n                                <Pdf targetRef={ref} filename=\"rac.pdf\" options={options} x={1} scale={0.8}>\r\n                                    {({toPdf}) => (\r\n                                        <button onClick={toPdf}>Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* BotÃ£o aplicar */}\r\n            {isUpdatingData ? (<div> </div>) : (\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px' }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar}>Aplicar</button>\r\n                </Row>\r\n            )}\r\n\r\n            \r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-5 col-12 \">\r\n                        <h1>RelatÃ³rio de Atendimento ao Consumidor (RAC)</h1>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total Habilitador\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total RAC\" subTitle=\"RA\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Total} options={lightOptions}/>\r\n                            </Card>\r\n                        )}\r\n  \r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                                \r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Total NNC MatÃ©ria-Prima\" subTitle=\"\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Aves\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Aves} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"SuÃ­nos\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Suinos} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Preparados\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Preparados} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Outros\" subTitle=\"RAC\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoRAC_Outros} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {/* mercado externo */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"Corpos estranhos\" subTitle=\"Corpo Estranho\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoCE_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            \r\n                                DataTableRACME()\r\n                            \r\n                        )}\r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                {/* mercado interno */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC MatÃ©rial Prima\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCMP_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                    </Col>\r\n\r\n                </Row>   \r\n\r\n                {/* atendimento comercial */}\r\n                <Row>\r\n                    <Col>\r\n                        {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                            <Card title=\"NNC Log\" subTitle=\"Total\" className=\"mt-5\">\r\n                                <Chart type=\"bar\" data={responseGraficoNNCLog_Total} options={lightOptions} />\r\n                            </Card>\r\n                        )}\r\n                    </Col>\r\n                    <Col>\r\n                        \r\n                        \r\n                    </Col>\r\n\r\n                </Row>  \r\n\r\n                        \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCLog.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\dashViewNNCMP.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\home.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"//#region Imports\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport ReactDOM from 'react-dom'; \r\nimport $ from 'jquery';\r\nimport { Chart } from 'primereact/chart';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport api from '../api/api'\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { ColumnGroup } from 'primereact/columngroup';\r\n\r\nimport { Ripple } from 'primereact/ripple';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../index.css';\r\nimport '../css/sidebar-desktop.css';\r\nimport '../css/login.css';\r\nimport '../css/charts.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\n\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { months, colorsBars, lightOptions, optionsComparativo } from '../domain/constants';\r\n\r\nimport {testeSQLPivotRollup} from '../domain/sql';\r\n\r\nimport {\r\n    SetDateInJsonArrayToQueryOverObjects,\r\n    SetParamsToQuery,\r\n    AddLineMockData,\r\n    AddDataByFilters,\r\n    GetIndicators\r\n} from '../domain/kpiservice';\r\n\r\n\r\nimport { LoadingSkeletonSquare, LoadingSkeletonCard } from '../components/skeletons';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nimport { LineWeight } from '@material-ui/icons';\r\n\r\nimport Funcao from \"./funcoes\"\r\n\r\nconst ref = React.createRef();\r\nconst options = {\r\n    orientation: 'retrait',\r\n    unit: 'px',\r\n    format: [1200, 16000]\r\n};\r\n\r\nvar cors = require('cors'); // Already done ânpm i cors --save-devâ\r\n\r\n//#endregion\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const [isUpdatingData, setIsUpdatingData] = React.useState(false)\r\n    const [estaRodandoAplicar, setEstaRodandoAplicar] = React.useState(false)\r\n    const toast = React.useRef(null);\r\n    const canvasRef = React.useRef();\r\n \r\n    \r\n    var numeroChamados = [false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false,false,false,false,false,false,false,false,false,\r\n        false,false]  \r\n        \r\n        \r\n    const percorreNumeroChamados = () => {\r\n        \r\n        // \r\n        for (var i = 0; i < numeroChamados.length; i++) {\r\n            if (numeroChamados[i] == false) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    let [backgroundGradient, SetBackgroundGradient] = React.useState();\r\n    let [backgroundGradientCinza, SetBackgroundGradientCinza] = React.useState();\r\n\r\n    //chamadas\r\n    let [responseGraficoCETotal, setresponseGraficoCETotal] = React.useState({})\r\n    let [GraficoCETotal, setGraficoCETotal] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE] = React.useState({})\r\n    let [GraficoNNCMPTotalCE, setGraficoNNCMPTotalCE] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCE, setresponseGraficoRACTotalCE] = React.useState({})\r\n    let [GraficoRACTotalCE, setGraficoRACTotalCE] = React.useState()\r\n\r\n    let [responseGraficoRAC, setresponseGraficoRAC] = React.useState({})\r\n    let [GraficoRAC, setGraficoRAC] = React.useState()\r\n\r\n    let [responseGraficoNCCMP, setresponseGraficoNCCMP] = React.useState({})\r\n    let [GraficoNCCMP, setGraficoNCCMP] = React.useState()\r\n\r\n    //Aves pesadas RAC\r\n    let [responseGraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas] = React.useState({})\r\n    let [GraficoCETotalAvesPesadas, setGraficoCETotalAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadas, setGraficoNNCMPTotalCEAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadas, setGraficoRACTotalCEAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas] = React.useState({})\r\n    let [GraficoRACAvesPesadas, setGraficoRACAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadas, setGraficoNCCMPAvesPesadas] = React.useState()\r\n\r\n    //Aves pesadas PR RAC\r\n    let [responseGraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasPR, setGraficoCETotalAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasPR, setGraficoNNCMPTotalCEAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasPR, setGraficoRACTotalCEAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACAvesPesadasPR, setGraficoRACAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasPR, setGraficoNCCMPAvesPesadasPR] = React.useState()\r\n\r\n    //Aves pesadas SP/CO/NE RAC\r\n    let [responseGraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasSP, setGraficoCETotalAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasSP, setGraficoNNCMPTotalCEAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasSP, setGraficoRACTotalCEAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACAvesPesadasSP, setGraficoRACAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasSP, setGraficoNCCMPAvesPesadasSP] = React.useState()\r\n\r\n    //Aves pesadas RS/SC/SP RAC\r\n    let [responseGraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS] = React.useState({})\r\n    let [GraficoCETotalAvesPesadasRS, setGraficoCETotalAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesPesadasRS, setGraficoNNCMPTotalCEAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACTotalCEAvesPesadasRS, setGraficoRACTotalCEAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACAvesPesadasRS, setGraficoRACAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS] = React.useState({})\r\n    let [GraficoNCCMPAvesPesadasRS, setGraficoNCCMPAvesPesadasRS] = React.useState()\r\n\r\n    //Aves Leves RAC\r\n    let [responseGraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves] = React.useState({})\r\n    let [GraficoCETotalAvesLeves, setGraficoCETotalAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves] = React.useState({})\r\n    let [GraficoNNCMPTotalCEAvesLeves, setGraficoNNCMPTotalCEAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves] = React.useState({})\r\n    let [GraficoRACTotalCEAvesLeves, setGraficoRACTotalCEAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACAvesLeves, setresponseGraficoRACAvesLeves] = React.useState({})\r\n    let [GraficoRACAvesLeves, setGraficoRACAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves] = React.useState({})\r\n    let [GraficoNCCMPAvesLeves, setGraficoNCCMPAvesLeves] = React.useState()\r\n\r\n    //SuÃ­nos RAC\r\n    let [responseGraficoCETotalSuinos, setresponseGraficoCETotalSuinos] = React.useState({})\r\n    let [GraficoCETotalSuinos, setGraficoCETotalSuinos] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos] = React.useState({})\r\n    let [GraficoNNCMPTotalCESuinos, setGraficoNNCMPTotalCESuinos] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos] = React.useState({})\r\n    let [GraficoRACTotalCESuinos, setGraficoRACTotalCESuinos] = React.useState()\r\n\r\n    let [responseGraficoRACSuinos, setresponseGraficoRACSuinos] = React.useState({})\r\n    let [GraficoRACSuinos, setGraficoRACSuinos] = React.useState()\r\n\r\n    let [responseGraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos] = React.useState({})\r\n    let [GraficoNCCMPSuinos, setGraficoNCCMPSuinos] = React.useState()\r\n\r\n    //Preparados RAC\r\n    let [responseGraficoCETotalPreparados, setresponseGraficoCETotalPreparados] = React.useState({})\r\n    let [GraficoCETotalPreparados, setGraficoCETotalPreparados] = React.useState()\r\n\r\n    let [responseGraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados] = React.useState({})\r\n    let [GraficoNNCMPTotalCEPreparados, setGraficoNNCMPTotalCEPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados] = React.useState({})\r\n    let [GraficoRACTotalCEPreparados, setGraficoRACTotalCEPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACPreparados, setresponseGraficoRACPreparados] = React.useState({})\r\n    let [GraficoRACPreparados, setGraficoRACPreparados] = React.useState()\r\n\r\n    let [responseGraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados] = React.useState({})\r\n    let [GraficoNCCMPPreparados, setGraficoNCCMPPreparados] = React.useState()\r\n\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadas, setGraficoRACUnidadesAvesPesadas] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadas, setGraficoRACProblemasAvesPesadas] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasPR, setGraficoRACUnidadesAvesPesadasPR] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasPR, setGraficoRACProblemasAvesPesadasPR] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasSP, setGraficoRACUnidadesAvesPesadasSP] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasSP, setGraficoRACProblemasAvesPesadasSP] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACUnidadesAvesPesadasRS, setGraficoRACUnidadesAvesPesadasRS] = React.useState()\r\n    let [responseGraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS] = React.useState({})\r\n    let [GraficoRACProblemasAvesPesadasRS, setGraficoRACProblemasAvesPesadasRS] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves] = React.useState({})\r\n    let [GraficoRACUnidadesAvesLeves, setGraficoRACUnidadesAvesLeves] = React.useState()\r\n    let [responseGraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves] = React.useState({})\r\n    let [GraficoRACProblemasAvesLeves, setGraficoRACProblemasAvesLeves] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos] = React.useState({})\r\n    let [GraficoRACUnidadesSuinos, setGraficoRACUnidadesSuinos] = React.useState()\r\n    let [responseGraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos] = React.useState({})\r\n    let [GraficoRACProblemasSuinos, setGraficoRACProblemasSuinos] = React.useState()\r\n\r\n    let [responseGraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados] = React.useState({})\r\n    let [GraficoRACUnidadesPreparados, setGraficoRACUnidadesPreparados] = React.useState()\r\n    let [responseGraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados] = React.useState({})\r\n    let [GraficoRACProblemasPreparados, setGraficoRACProblemasPreparados] = React.useState()\r\n\r\n    let [responseGraficoRACME, setresponseGraficoRACME] = React.useState({})\r\n    let [GraficoRACME, setGraficoRACME] = React.useState()\r\n\r\n    let [TableRACAberturaME, setTableRacAberturaME] = React.useState()\r\n\r\n    let [responseGraficoRACMI, setresponseGraficoRACMI] = React.useState({})\r\n    let [GraficoRACMI, setGraficoRACMI] = React.useState()\r\n\r\n    let [TableRacAberturaMEOrienteMedio, setTableRacAberturaMEOrienteMedio] = React.useState()\r\n    let [TableRacAberturaMEEuropa, setTableRacAberturaMEEuropa] = React.useState()\r\n    let [TableRacAberturaMEJapao, setTableRacAberturaMEJapao] = React.useState()\r\n\r\n    let [TableRacAberturaMEAsia, setTableRacAberturaMEAsia] = React.useState()\r\n    let [TableRacAberturaMEAmericasAfrica, setTableRacAberturaMEAmericasAfrica] = React.useState()\r\n    let [TableRacAberturaMEContasGlobais, setTableRacAberturaMEContasGlobais] = React.useState()\r\n\r\n    let [TableRacAberturaLinhaEspecialFamilia, setTableRacAberturaLinhaEspecialFamilia] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoGourmet, setTableRacAberturaLinhaEspecialAcumuladoGourmet] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoIncrivel, setTableRacAberturaLinhaEspecialAcumuladoIncrivel] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoNature, setTableRacAberturaLinhaEspecialAcumuladoNature] = React.useState()\r\n    let [TableRacAberturaLinhaEspecialAcumuladoRotisserie, setTableRacAberturaLinhaEspecialAcumuladoRotisserie] = React.useState()\r\n\r\n    let [responseTable, setresponseTable] = React.useState({})\r\n    let [TableRacME, setTableRacME] = React.useState()\r\n\r\n    let [TableRacFinalME, setTableRacFinalME] = React.useState() //ME\r\n    let [TableRacFinalMI, setTableRacFinalMI] = React.useState() //MI\r\n    let [TableRacFinalRECL, setTableRacFinalRECL] = React.useState() //RECLAMAÃÃES ESPECIAIS\r\n    let [TableRacFinalPDV, setTableRacFinalPDV] = React.useState() //PDV ABERTURA\r\n    let [TableRacFinalTE, setTableRacFinalTE] = React.useState() //ABERTURA TERCEIROS\r\n    let [TableRacFinalCRIT, setTableRacFinalCRIT] = React.useState() //CRITICOS\r\n\r\n    //FFO\r\n    let [responseGraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO] = React.useState({})\r\n    let [GraficoRACDetalhesFFO, setGraficoRACDetalhesFFO] = React.useState()\r\n\r\n    //Atendimento Comercial\r\n    let [responseGraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC] = React.useState({})\r\n    let [GraficoRACDetalhesAC, setGraficoRACDetalhesAC] = React.useState()\r\n\r\n    //LogÃ­stica ExportaÃ§Ã£o\r\n    let [responseGraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME] = React.useState({})\r\n    let [GraficoRACDetalhesLogME, setGraficoRACDetalhesLogME] = React.useState()\r\n\r\n    //LogÃ­stica ImportaÃ§Ã£o\r\n    let [responseGraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI] = React.useState({})\r\n    let [GraficoRACDetalhesLogMI, setGraficoRACDetalhesLogMI] = React.useState()\r\n\r\n    //DocumentaÃ§Ã£o\r\n    let [responseGraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc] = React.useState({})\r\n    let [GraficoRACDetalhesDoc, setGraficoRACDetalhesDoc] = React.useState()\r\n\r\n    //Transporte Terrestre\r\n    let [responseGraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT] = React.useState({})\r\n    let [GraficoRACDetalhesTT, setGraficoRACDetalhesTT] = React.useState()\r\n\r\n    //ProduÃ§Ã£o em Terceiro (ex. Massatake)\r\n    let [responseGraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro] = React.useState({})\r\n    let [GraficoRACDetalhesTerceiro, setGraficoRACDetalhesTerceiro] = React.useState()\r\n\r\n    let [TableRacRACDetalhesTerceiro, setTableRacRACDetalhesTerceiro] = React.useState() //ABERTURA TERCEIROS\r\n\r\n    //Massatake\r\n    let [responseGraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake] = React.useState({})\r\n    let [GraficoRACDetalhesMassatake, setGraficoRACDetalhesMassatake] = React.useState()\r\n\r\n    //PDV\r\n    let [responseGraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV] = React.useState({})\r\n    let [GraficoRACDetalhesPDV, setGraficoRACDetalhesPDV] = React.useState()\r\n\r\n    let [responseGraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV] = React.useState({})\r\n    let [GraficoRACDetalhesAberturaPDV, setGraficoRACDetalhesAberturaPDV] = React.useState()\r\n\r\n    let [TableRacRACDetalhesPDV, setTableRacRACDetalhesPDV] = React.useState() //ABERTURA PDV\r\n\r\n    //RAC CrÃ­tica\r\n    let [responseGraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica] = React.useState({})\r\n    let [GraficoRACDetalhesCritica, setGraficoRACDetalhesCritica] = React.useState()\r\n\r\n    let [TableRacRACDetalhesCritica, setTableRacRACDetalhesCritica] = React.useState() //ABERTURA Critica\r\n\r\n    //RAC EvoluÃ§Ã£o - Totais\r\n    let [TableRacRACDetalhesEvolucaoTotal, setTableRacRACDetalhesEvolucaoTotal] = React.useState() \r\n\r\n    //RAC EvoluÃ§Ã£o - Aves\r\n    let [TableRacRACDetalhesEvolucaoAves, setTableRacRACDetalhesEvolucaoAves] = React.useState()\r\n\r\n    let [TableRacLarva, setTableRacLarva] = React.useState()\r\n    let [TableRacIntoxicacao, setTableRacIntoxicacao] = React.useState()\r\n    let [TableRacMetal, setTableRacMetal] = React.useState()\r\n    let [TableRacPlastico, setTableRacPlastico] = React.useState()\r\n    let [TableRacCabelo, setTableRacCabelo] = React.useState()\r\n    let [TableRacInseto, setTableRacInseto] = React.useState()\r\n\r\n    //RAC Meta x Real Aves\r\n    let [TableRacRACDetalhesMetaRealAves, setTableRacRACDetalhesMetaRealAves] = React.useState()\r\n\r\n    //RAC EvoluÃ§Ã£o - Preparados\r\n    let [TableRacRACDetalhesEvolucaoPreparados, setTableRacRACDetalhesEvolucaoPreparados] = React.useState()\r\n\r\n    //RAC EvoluÃ§Ã£o - Fatiados\r\n    let [TableRacRACDetalhesEvolucaoFatiados, setTableRacRACDetalhesEvolucaoFatiados] = React.useState()\r\n\r\n    //RAC EvoluÃ§Ã£o - Pescados\r\n    let [TableRacRACDetalhesEvolucaoPescados, setTableRacRACDetalhesEvolucaoPescados] = React.useState()\r\n\r\n    //RAC Meta x Real Preparados\r\n    let [TableRacRACDetalhesMetaRealPreparados, setTableRacRACDetalhesMetaRealPreparados] = React.useState()\r\n\r\n    //RAC EvoluÃ§Ã£o - SuÃ­nos\r\n    let [TableRacRACDetalhesEvolucaoSuinos, setTableRacRACDetalhesEvolucaoSuinos] = React.useState()\r\n\r\n    //RAC Meta x Real SuÃ­nos\r\n    let [TableRacRACDetalhesMetaRealSuinos, setTableRacRACDetalhesMetaRealSuinos] = React.useState()\r\n\r\n    //RAC Linhas Especiais (Seara Nature, Gourmet, IncrÃ­vel)\r\n    let [responseGraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais] = React.useState({})\r\n    let [GraficoRACDetalhesEspeciais, setGraficoRACDetalhesEspeciais] = React.useState()\r\n\r\n    let [TableRacRACDetalhesEspeciaisFamilia, setTableRacRACDetalhesEspeciaisFamilia] = React.useState() //ABERTURA Especiais Familia\r\n    let [TableRacRACDetalhesEspeciaisAcumulado, setTableRacRACDetalhesEspeciaisAcumulado] = React.useState() //ABERTURA Especiais Acumulado\r\n\r\n    //RAC Corpo Estanho - [Totais]\r\n    let [responseGraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE] = React.useState({})\r\n    let [GraficoRACDetalhesCE, setGraficoRACDetalhesCE] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [Inerente]\r\n    let [responseGraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente] = React.useState({})\r\n    let [GraficoRACDetalhesCEInerente, setGraficoRACDetalhesCEInerente] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [NÃ£o Inerente]\r\n    let [responseGraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente] = React.useState({})\r\n    let [GraficoRACDetalhesCENaoInerente, setGraficoRACDetalhesCENaoInerente] = React.useState()\r\n\r\n    //RAC Corpo Estanho - [PlÃ¡stico]\r\n    let [responseGraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico] = React.useState({})\r\n    let [GraficoRACDetalhesCEPlastico, setGraficoRACDetalhesCEPlastico] = React.useState()\r\n\r\n    //RAC Inseto\r\n    let [responseGraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto] = React.useState({})\r\n    let [GraficoRACDetalhesInseto, setGraficoRACDetalhesInseto] = React.useState()\r\n\r\n    let [TableRacRACDetalhesInseto, setTableRacRACDetalhesInseto] = React.useState() //ABERTURA Insetos\r\n\r\n    //RAC Cabelo\r\n    let [responseGraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo] = React.useState({})\r\n    let [GraficoRACDetalhesCabelo, setGraficoRACDetalhesCabelo] = React.useState()\r\n\r\n    let [TableRacRACDetalhesCabelo, setTableRacRACDetalhesCabelo] = React.useState() //ABERTURA Cabelo\r\n\r\n    //RAC Plastico\r\n    let [responseGraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico] = React.useState({})\r\n    let [GraficoRACDetalhesPlastico, setGraficoRACDetalhesPlastico] = React.useState()\r\n\r\n    let [TableRacRACDetalhesPlastico, setTableRacRACDetalhesPlastico] = React.useState() //ABERTURA Plastico\r\n\r\n    //RAC Metal\r\n    let [responseGraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal] = React.useState({})\r\n    let [GraficoRACDetalhesMetal, setGraficoRACDetalhesMetal] = React.useState()\r\n\r\n    let [TableRacRACDetalhesMetal, setTableRacRACDetalhesMetal] = React.useState() //ABERTURA Metal\r\n\r\n    //RAC IntoxicaÃ§Ã£o\r\n    let [responseGraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao] = React.useState({})\r\n    let [GraficoRACDetalhesIntoxicacao, setGraficoRACDetalhesIntoxicacao] = React.useState()\r\n\r\n    let [TableRacRACDetalhesIntoxicacao, setTableRacRACDetalhesIntoxicacao] = React.useState() //ABERTURA Intoxicacao\r\n\r\n    //RAC Larva\r\n    let [responseGraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva] = React.useState({})\r\n    let [GraficoRACDetalhesLarva, setGraficoRACDetalhesLarva] = React.useState()\r\n\r\n    let [TableRacRACDetalhesLarva, setTableRacRACDetalhesLarva] = React.useState() //ABERTURA Larva\r\n\r\n    //tabela Corpos Estranhos\r\n    let [TableRacRACDetalhesCE, setTableRacRACDetalhesCE] = React.useState() //ABERTURA CE\r\n\r\n    //tabela Corpos Estranhos Inerente\r\n    let [TableRacRACDetalhesCEInerente, setTableRacRACDetalhesCEInerente] = React.useState() //ABERTURA CE Inerente\r\n\r\n    //tabela Corpos Estranhos NÃ£o Inerente\r\n    let [TableRacRACDetalhesCENaoInerente, setTableRacRACDetalhesCENaoInerente] = React.useState() //ABERTURA CE Nao Inerente\r\n\r\n    //tabela Corpos Estranhos Inerente e NÃ£o inerente\r\n    let [TableRacRACDetalhesCEInerenteNaoInerente, setTableRacRACDetalhesCEInerenteNaoInerente] = React.useState() //ABERTURA CE Inerente e Nao Inerente\r\n\r\n    //tabela Habilitador Corpos Estranhos NÃ£o Inerentes\r\n    let [TableRacRACDetalhesHBCENaoInerente, setTableRacRACDetalhesHBCENaoInerente] = React.useState() //ABERTURA Habilidador CE Nao Inerente\r\n\r\n    //tabela RAC D-3 In Natura\r\n    let [TableRacRACD3InNatura, setTableRacRACD3InNatura] = React.useState() //ABERTURA D-3 InNatura\r\n\r\n    //tabela RAC D-3 Preparados\r\n    let [TableRacRACD3Preparados, setTableRacRACD3Preparados] = React.useState() //ABERTURA D-3 Preparados\r\n\r\n    //tabela RAC D-0 In Natura\r\n    let [TableRacRACD0InNatura, setTableRacRACD0InNatura] = React.useState() //ABERTURA D-0 InNatura\r\n\r\n    //tabela RAC D-0 Preparados\r\n    let [TableRacRACD0Preparados, setTableRacRACD0Preparados] = React.useState() //ABERTURA D-0 Preparados\r\n\r\n    //NNC LOG Total\r\n    let [responseGraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal] = React.useState({})\r\n    let [GraficoNNCLogDetalhesTotal, setGraficoNNCLogDetalhesTotal] = React.useState()\r\n\r\n    //NNC LOG Aves\r\n    let [responseGraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves] = React.useState({})\r\n    let [GraficoNNCLogDetalhesAves, setGraficoNNCLogDetalhesAves] = React.useState()\r\n\r\n    //NNC LOG Preparados\r\n    let [responseGraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados] = React.useState({})\r\n    let [GraficoNNCLogDetalhesPreparados, setGraficoNNCLogDetalhesPreparados] = React.useState()\r\n\r\n    //NNC LOG Suinos\r\n    let [responseGraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos] = React.useState({})\r\n    let [GraficoNNCLogDetalhesSuinos, setGraficoNNCLogDetalhesSuinos] = React.useState()\r\n\r\n    //tabela NNC Log EvoluÃ§Ã£o\r\n    let [TableNNCLogEvolucao, setTableNNCLogEvolucao] = React.useState() \r\n\r\n    //tabela NNC Log D-3 \r\n    let [TableNNCLogD3, setTableNNCLogD3] = React.useState() \r\n    //tabela NNC Log D-0 \r\n    let [TableNNCLogD0, setTableNNCLogD0] = React.useState()\r\n\r\n    //tabela NNC Totais \r\n    let [TableNNCTotais, setTableNNCTotais] = React.useState()\r\n\r\n    //tabela NNC EvoluÃ§Ã£o dia \r\n    let [TableNNCEvolucaoDia, setTableNNCEvolucaoDia] = React.useState()\r\n\r\n    let [TableNNCEvolucaoMes, setTableNNCEvolucaoMes] = React.useState()\r\n\r\n    let [TableNNCEvolucaoMesTotais, setTableNNCEvolucaoMesTotais] = React.useState()\r\n\r\n    //NNC\r\n    let [responseGraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas] = React.useState({})\r\n    let [GraficoNNCAvesPesadas, setGraficoNNCAvesPesadas] = React.useState()\r\n    let [responseGraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades] = React.useState({})\r\n    let [GraficoNNCAvesPesadasUnidades, setGraficoNNCAvesPesadasUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas] = React.useState({})\r\n    let [GraficoNNCAvesPesadasProblemas, setGraficoNNCAvesPesadasProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesRS, setresponseGraficoNNCAvesRS] = React.useState({})\r\n    let [GraficoNNCAvesRS, setGraficoNNCAvesRS] = React.useState()\r\n    let [responseGraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades] = React.useState({})\r\n    let [GraficoNNCAvesRSUnidades, setGraficoNNCAvesRSUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas] = React.useState({})\r\n    let [GraficoNNCAvesRSProblemas, setGraficoNNCAvesRSProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesSP, setresponseGraficoNNCAvesSP] = React.useState({})\r\n    let [GraficoNNCAvesSP, setGraficoNNCAvesSP] = React.useState()\r\n    let [responseGraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades] = React.useState({})\r\n    let [GraficoNNCAvesSPUnidades, setGraficoNNCAvesSPUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas] = React.useState({})\r\n    let [GraficoNNCAvesSPProblemas, setGraficoNNCAvesSPProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesPR, setresponseGraficoNNCAvesPR] = React.useState({})\r\n    let [GraficoNNCAvesPR, setGraficoNNCAvesPR] = React.useState()\r\n    let [responseGraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades] = React.useState({})\r\n    let [GraficoNNCAvesPRUnidades, setGraficoNNCAvesPRUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas] = React.useState({})\r\n    let [GraficoNNCAvesPRProblemas, setGraficoNNCAvesPRProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves] = React.useState({})\r\n    let [GraficoNNCAvesLeves, setGraficoNNCAvesLeves] = React.useState()\r\n    let [responseGraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades] = React.useState({})\r\n    let [GraficoNNCAvesLevesUnidades, setGraficoNNCAvesLevesUnidades] = React.useState()\r\n    let [responseGraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas] = React.useState({})\r\n    let [GraficoNNCAvesLevesProblemas, setGraficoNNCAvesLevesProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCSuinos, setresponseGraficoNNCSuinos] = React.useState({})\r\n    let [GraficoNNCSuinos, setGraficoNNCSuinos] = React.useState()\r\n    let [responseGraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades] = React.useState({})\r\n    let [GraficoNNCSuinosUnidades, setGraficoNNCSuinosUnidades] = React.useState()\r\n    let [responseGraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas] = React.useState({})\r\n    let [GraficoNNCSuinosProblemas, setGraficoNNCSuinosProblemas] = React.useState()\r\n\r\n    let [responseGraficoNNCPreparados, setresponseGraficoNNCPreparados] = React.useState({})\r\n    let [GraficoNNCPreparados, setGraficoNNCPreparados] = React.useState()\r\n    let [responseGraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades] = React.useState({})\r\n    let [GraficoNNCPreparadosUnidades, setGraficoNNCPreparadosUnidades] = React.useState()\r\n    let [responseGraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas] = React.useState({})\r\n    let [GraficoNNCPreparadosProblemas, setGraficoNNCPreparadosProblemas] = React.useState()\r\n\r\n\r\n    let [responseGraficoNNCCETotal, setresponseGraficoNNCCETotal] = React.useState({})\r\n    let [GraficoNNCCETotal, setGraficoNNCCETotal] = React.useState()\r\n\r\n    let [responseGraficoNNCCEInerente, setresponseGraficoNNCCEInerente] = React.useState({})\r\n    let [GraficoNNCCEInerente, setGraficoNNCCEInerente] = React.useState()\r\n\r\n    let [responseGraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente] = React.useState({})\r\n    let [GraficoNNCCENaoInerente, setGraficoNNCCENaoInerente] = React.useState()\r\n\r\n    let [responseGraficoNNCCEOssos, setresponseGraficoNNCCEOssos] = React.useState({})\r\n    let [GraficoNNCCEOssos, setGraficoNNCCEOssos] = React.useState()\r\n\r\n    let [responseGraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico] = React.useState({})\r\n    let [GraficoNNCCEPlastico, setGraficoNNCCEPlastico] = React.useState()\r\n\r\n    let [responseGraficoNNCCEMetal, setresponseGraficoNNCCEMetal] = React.useState({})\r\n    let [GraficoNNCCEMetal, setGraficoNNCCEMetal] = React.useState()\r\n\r\n\r\n    //tabela NNC MP D-3 In Natura\r\n    let [TableNNCMPD3InNatura, setTableNNCMPD3InNatura] = React.useState() //ABERTURA D-3 InNatura\r\n\r\n    //tabela NNC MP D-3 Preparados\r\n    let [TableNNCMPD3Preparados, setTableNNCMPD3Preparados] = React.useState() //ABERTURA D-3 Preparados\r\n\r\n    //tabela NNC MP D-0 In Natura\r\n    let [TableNNCMPD0InNatura, setTableNNCMPD0InNatura] = React.useState() //ABERTURA D-0 InNatura\r\n\r\n    //tabela NNC MP D-0 Preparados\r\n    let [TableNNCMPD0Preparados, setTableNNCMPD0Preparados] = React.useState() //ABERTURA D-0 Preparados\r\n\r\n    let [TableNNCMPCEOssos, setTableNNCMPCEOssos] = React.useState()\r\n    let [TableNNCMPCEOssosFornecedor, setTableNNCMPCEOssosFornecedor] = React.useState()\r\n    let [TableNNCMPCEOssosUnidadesReclamantes, setTableNNCMPCEOssosUnidadesReclamantes] = React.useState()\r\n\r\n    let [TableRacCorposEstranhos, setTableRacCorposEstranhos] = React.useState()\r\n    let [TableRacCorposEstranhosInerentes, setTableRacCorposEstranhosInerentes] = React.useState()\r\n    let [TableRacCorposEstranhosNaoInerentes, setTableRacCorposEstranhosNaoInerentes] = React.useState()\r\n    let [TableRacCorposEstranhosInerentesNaoInerentes, setTableRacCorposEstranhosInerentesNaoInerentes] = React.useState()\r\n\r\n\r\n    let [TableNNCCEPlastico, setTableNNCCEPlastico] = React.useState()\r\n    let [TableNNCCEMetal, setTableNNCCEMetal] = React.useState()\r\n    let [TableNNCCEOssos, setTableNNCCEOssos] = React.useState()\r\n    let [TableNNCCE, setTableNNCCE] = React.useState()\r\n    let [TableNNCCEInerenteNaoInerente, setTableNNCCEInerenteNaoInerente] = React.useState()\r\n\r\n    let [TableHabilitadorCorposEstranhosNaoInerentes, setTableHabilitadorCorposEstranhosNaoInerentes] = React.useState()\r\n    \r\n\r\n\r\n    let whereRACPreparados = \"WHERE ([Regional (Qualidade)] in ('Outros', 'Preparados 1', 'Preparados 2', 'ItajaÃ­') AND [Regional (ProduÃ§Ã£o)] in ('ItajaÃ­ - Indus/Sui', 'Outros', 'Preparados', 'ItajaÃ­ - Indus', 'ItajaÃ­') ) \"\r\n    whereRACPreparados += \" AND ([Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','FABRICAÃÃO')\"\r\n    whereRACPreparados += \"                                 OR [Origem da RAC] IS NULL) \"\r\n    whereRACPreparados += \" and unidade in ( \"\r\n    whereRACPreparados += \" 'Bom Retiro', \"\r\n    whereRACPreparados += \" 'BrasÃ­lia',  \"\r\n    whereRACPreparados += \" 'CarambeÃ­',  \"\r\n    whereRACPreparados += \" 'Caxias do Sul - Ana Rech',  \"\r\n    whereRACPreparados += \" 'Dourados',  \"\r\n    whereRACPreparados += \" 'Duque de Caxias',  \"\r\n    whereRACPreparados += \" 'ITAJAI INDUSTRIALIZADOS',  \"\r\n    whereRACPreparados += \" 'Itapiranga',  \"\r\n    whereRACPreparados += \" 'JaguariÃºna',  \"\r\n    whereRACPreparados += \" 'JundiaÃ­', \"\r\n    whereRACPreparados += \" 'Lages',  \"\r\n    whereRACPreparados += \" 'Montenegro',  \"\r\n    whereRACPreparados += \" 'Osasco',  \"\r\n    whereRACPreparados += \" 'Rio Grande da Serra',  \"\r\n    whereRACPreparados += \" 'Roca Sales',  \"\r\n    whereRACPreparados += \" 'Salto Veloso',  \"\r\n    whereRACPreparados += \" 'SÃ£o GonÃ§alo',  \"\r\n    whereRACPreparados += \" 'SÃ£o Miguel do Oeste',  \"\r\n    whereRACPreparados += \" 'Seara',  \"\r\n    whereRACPreparados += \" 'TrÃªs Passos',  \"\r\n    whereRACPreparados += \" 'Jaragua do Sul')  \"\r\n    whereRACPreparados += \" \"\r\n\r\n    let whereRACCE = \" WHERE Tipo = 'REAL'  \"\r\n    whereRACCE += \" AND Grupo = 'CORPO ESTRANHO' \"\r\n    whereRACCE += \" AND [Regional (Qualidade)] NOT IN ('Excelsior') \"\r\n    whereRACCE += \" AND [Tipo CE] = 'NÃ£o Inerente'  \"\r\n    whereRACCE += \" AND  [Tipo_Atendimento_rac] IN ( \"\r\n    whereRACCE += \" 'CONTATO EXCELSIOR_RAC',  \"\r\n    whereRACCE += \" 'CONTATO JBS CARNES',  \"\r\n    whereRACCE += \" 'CONTATO MERCADO DA CARNE',  \"\r\n    whereRACCE += \" 'NOTIFICAÃÃO',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO ABUSO DE PRODUTO',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO ABUSO PROD.',  \"\r\n    whereRACCE += \" 'ReclamaÃ§Ã£o Contas Globais',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO FAB. NÃO IDENTIF.',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO HANS',  \"\r\n    whereRACCE += \" 'RECLAMAÃÃO VOSSKO')  \"\r\n    whereRACCE += \" AND [Origem_do_Problema_rac] IN ( \"\r\n    whereRACCE += \" 'DocumentaÃ§Ã£o Unidade',  \"\r\n    whereRACCE += \" 'EXPEDIÃÃO FÃBRICA',  \"\r\n    whereRACCE += \" 'FABRICAÃÃO',  \"\r\n    whereRACCE += \" 'P-D') \"\r\n\r\n    let whereNNCMP = \" WHERE ([Reg. Qual] NOT IN ('ItajaÃ­', 'Outros')) \"\r\n    whereNNCMP += \" AND ([Grupo Problema] NOT IN ('Distr / Log', 'Embalagem SecundÃ¡ria') or [Grupo Problema] is null) \"\r\n    whereNNCMP += \" AND ([Entra para a Meta] <> 'NÃ£o' or [Entra para a Meta] is null) \"\r\n    \r\n    \r\n\r\n    function arrumaTabela1nivel(classTable) {\r\n//\r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n                \r\n            }\r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*@@.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ´\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"\")\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    function arrumaTabela2niveis(classTable) {\r\n        \r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            \r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n            }\r\n            \r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*<b>.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ´\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            \r\n            \r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"<b>\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"</b>\")\r\n\r\n            \r\n\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    function arrumaTabela3niveis(classTable) {\r\n\r\n        var table = $('.' + classTable + ' table')[0];\r\n        if(table) {\r\n\r\n            for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                if(table.rows[0].cells[j].innerText == \"RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº RAC\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"QTD\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"NÂº NNC MP\"){\r\n                    table.rows[0].cells[j].innerText = \"Total\"\r\n                }else if(table.rows[0].cells[j].innerText == \"Coluna\"){\r\n                    table.rows[0].cells[j].innerText = \"\"\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < table.rows.length; i++) {\r\n                //console.log($('.'+classTable+' table').rows[i].cells[0].innerText);\r\n                if (table.rows[i].cells[0].innerText.match(/.*@@.*/)) {\r\n                    //alert($('.'+classTable+' table').rows[i].cells[0].innerText)\r\n                    table.rows[i].style.background = '#cccccc'\r\n                }\r\n            }\r\n\r\n            for(var i = 0; i<table.rows.length; i++){\r\n                for(var j = 0; j<table.rows[0].cells.length; j++){\r\n                    if(table.rows[i].cells[j].innerText == \"<VERDE>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¢\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<VERMELHO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ´\"\r\n                    }else if(table.rows[i].cells[j].innerText == \"<AMARELO>\"){\r\n                        table.rows[i].cells[j].innerText = \"ğ¡\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (table.rows[table.rows.length - 1].cells[0].innerText == \"Total\" || table.rows[table.rows.length - 1].cells[0].innerText == \"<b>Total</b>\" ) {\r\n                table.rows[table.rows.length - 1].style.background = '#999999'\r\n                table.rows[table.rows.length - 1].style.color = 'white'\r\n    \r\n            }\r\n\r\n            var classtable_ = $('.' + classTable + '')[0];\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\".....\", \"&nbsp;&nbsp;&nbsp;&nbsp;\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"@@\", \"\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;b&gt;\", \"<b>\")\r\n            classtable_.innerHTML = classtable_.innerHTML.replaceAll(\"&lt;/b&gt;\", \"</b>\")\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    //Handlers\r\n    React.useEffect(() => {\r\n        setIsUpdatingData(true);\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotal, \"GraficoCETotal\", [' where 1=1 '], setGraficoCETotal, setresponseGraficoCETotal, 0)     // 1\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCE, \"GraficoNNCMPTotalCE\", [\" where tipo = 'NNC MP' \"], setGraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE, 1)       // 2\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCE, \"GraficoRACTotalCE\", [\" where TIPO = 'RAC' \"], setGraficoRACTotalCE, setresponseGraficoRACTotalCE, 2)     // 3\r\n        chamarAPI(\"RAC\", GraficoRAC, \"GraficoRAC\", [' where 1=1 '], setGraficoRAC, setresponseGraficoRAC, 3)    // 4\r\n        chamarAPI(\"NCCMP\", GraficoNCCMP, \"GraficoNCCMP\", [whereNNCMP], setGraficoNCCMP, setresponseGraficoNCCMP, 4)    // 5 \r\n        \r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadas, \"GraficoCETotalAvesPesadas\", [\" where [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas, 5)     // 6\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadas, \"GraficoNNCMPTotalCEAvesPesadas\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR') \"], setGraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas, 6)       // 7\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadas, \"GraficoRACTotalCEAvesPesadas\", [\" where TIPO = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas, 7)     // 8\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadas, \"GraficoRACAvesPesadas\", [\" where [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas, 8)    // 9\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadas, \"GraficoNCCMPAvesPesadas\", [whereNNCMP + \" and [Reg. Qual] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  \"], setGraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas, 9)    // 10\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasPR, \"GraficoCETotalAvesPesadasPR\", [' where [Regional Qualidade] = \\'Aves Pesadas PR\\' '], setGraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR, 10)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasPR, \"GraficoNNCMPTotalCEAvesPesadasPR\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas PR'  \"], setGraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR, 11)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasPR, \"GraficoRACTotalCEAvesPesadasPR\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas PR')   \"], setGraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR, 12)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasPR, \"GraficoRACAvesPesadasPR\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas PR') AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO')             \"], setGraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR, 13)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasPR, \"GraficoNCCMPAvesPesadasPR\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas PR\\'  '], setGraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR, 14)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasSP, \"GraficoCETotalAvesPesadasSP\", [\" where [Regional Qualidade] = 'Aves Pesadas SP/CO/NE' \"], setGraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP, 42)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasSP, \"GraficoNNCMPTotalCEAvesPesadasSP\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas SP/CO/NE'  \"], setGraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP, 43)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasSP, \"GraficoRACTotalCEAvesPesadasSP\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas SP/CO/NE')   \"], setGraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP, 44)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasSP, \"GraficoRACAvesPesadasSP\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE') AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP, 45)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasSP, \"GraficoNCCMPAvesPesadasSP\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas SP/CO/NE\\'  '], setGraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP, 46)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesPesadasRS, \"GraficoCETotalAvesPesadasRS\", [\" where [Regional Qualidade] = 'Aves Pesadas RS/SC/SP' \"], setGraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS, 47)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesPesadasRS, \"GraficoNNCMPTotalCEAvesPesadasRS\", [\"  where tipo = 'NNC MP' AND [Regional Qualidade] = 'Aves Pesadas RS/SC/SP'  \"], setGraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS, 48)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesPesadasRS, \"GraficoRACTotalCEAvesPesadasRS\", [\"  WHERE tipo = 'RAC' AND [Regional Qualidade] in ('Aves Pesadas RS/SC/SP')   \"], setGraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS, 49)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesPesadasRS, \"GraficoRACAvesPesadasRS\", [\" WHERE [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP' )  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS, 50)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesPesadasRS, \"GraficoNCCMPAvesPesadasRS\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Pesadas RS/SC/SP\\'  '], setGraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS, 51)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalAvesLeves, \"GraficoCETotalAvesLeves\", [' where [Regional Qualidade]  = \\'Aves Leves\\' '], setGraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves, 15)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEAvesLeves, \"GraficoNNCMPTotalCEAvesLeves\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] = \\'Aves Leves\\' \"], setGraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves, 16)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEAvesLeves, \"GraficoRACTotalCEAvesLeves\", [\"  where tipo = 'RAC' AND [Regional Qualidade] = \\'Aves Leves\\'   \"], setGraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves, 17)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACAvesLeves, \"GraficoRACAvesLeves\", [\" WHERE [Regional (Qualidade)] = 'Aves Leves'   AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO')  \"], setGraficoRACAvesLeves, setresponseGraficoRACAvesLeves, 18)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPAvesLeves, \"GraficoNCCMPAvesLeves\", [whereNNCMP + ' and [Reg. Qual] = \\'Aves Leves\\'  '], setGraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves, 19)    // 15\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalSuinos, \"GraficoCETotalSuinos\", [' where [Regional Qualidade]  in (\\'SuÃ­nos\\',\\'SuÃ­no\\') '], setGraficoCETotalSuinos, setresponseGraficoCETotalSuinos, 20)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCESuinos, \"GraficoNNCMPTotalCESuinos\", [\" where tipo = 'NNC MP' AND [Regional Qualidade] = \\'SuÃ­nos\\' \"], setGraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos, 21)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCESuinos, \"GraficoRACTotalCESuinos\", [\"  where tipo = 'RAC' AND [Regional Qualidade] = \\'SuÃ­nos\\'   \"], setGraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos, 22)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACSuinos, \"GraficoRACSuinos\", [\" WHERE [Regional (Qualidade)] in ('SuÃ­nos', 'Outros') and [Regional (ProduÃ§Ã£o)] in ('ItajaÃ­ - Indus/Sui', 'SUINOS') AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACSuinos, setresponseGraficoRACSuinos, 23)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPSuinos, \"GraficoNCCMPSuinos\", [whereNNCMP + ' and [Reg. Qual] = \\'SuÃ­nos\\'  '], setGraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos, 24)    // 15\r\n\r\n\r\n\r\n        chamarAPI(\"CETotal\", GraficoCETotalPreparados, \"GraficoCETotalPreparados\", [' where [Regional Qualidade] in (\\'Preparados\\',\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'ItajaÃ­\\') and NegÃ³cio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\') '], setGraficoCETotalPreparados, setresponseGraficoCETotalPreparados, 25)     // 11\r\n        chamarAPI(\"CETotal\", GraficoNNCMPTotalCEPreparados, \"GraficoNNCMPTotalCEPreparados\", [\" where tipo = 'NNC MP' AND [Regional Qualidade]  in (\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'ItajaÃ­\\') and NegÃ³cio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\')  \"], setGraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados, 26)       // 12\r\n        chamarAPI(\"CETotal\", GraficoRACTotalCEPreparados, \"GraficoRACTotalCEPreparados\", [\"  where tipo = 'RAC' AND [Regional Qualidade]  in (\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\',\\'ItajaÃ­\\') and NegÃ³cio in (\\'Preparados\\',\\'Outros\\', \\'INDUSTRIALIZADOS\\', \\'Fatiados\\')   \"], setGraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados, 27)     // 13\r\n        chamarAPI(\"RACIndicadores\", GraficoRACPreparados, \"GraficoRACPreparados\", [whereRACPreparados] , setGraficoRACPreparados, setresponseGraficoRACPreparados, 28)    // 14\r\n        chamarAPI(\"NCCMP\", GraficoNCCMPPreparados, \"GraficoNCCMPPreparados\", [whereNNCMP + ' and [Reg. Qual] in (\\'Preparados 1\\',\\'Preparados 2\\',\\'Preparados 3\\', \\'Outros\\')  '], setGraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados, 29)    // 15\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadas, \"GraficoRACUnidadesAvesPesadas\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO')  \"], setGraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas, 30)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadas, \"GraficoRACProblemasAvesPesadas\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE','Aves Pesadas RS/SC/SP', 'Aves Pesadas PR')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas, 31)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasPR, \"GraficoRACUnidadesAvesPesadasPR\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas PR')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR, 32)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasPR, \"GraficoRACProblemasAvesPesadasPR\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas PR')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR, 33)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasSP, \"GraficoRACUnidadesAvesPesadasSP\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP, 52)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasSP, \"GraficoRACProblemasAvesPesadasSP\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas SP/CO/NE')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP, 53)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesPesadasRS, \"GraficoRACUnidadesAvesPesadasRS\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS, 54)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesPesadasRS, \"GraficoRACProblemasAvesPesadasRS\", [\" where Tipo = 'REAL' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData))  and [Regional (Qualidade)] in ('Aves Pesadas RS/SC/SP')  AND [Origem da RAC] IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"], setGraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS, 55)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesAvesLeves, \"GraficoRACUnidadesAvesLeves\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Aves Leves%\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÃÃO UNIDADE\\', \\'EXPEDIÃÃO FÃBRICA\\', \\'FÃBRICA PRODUÃÃO\\', \\'FabricaÃ§Ã£o/ ProduÃ§Ã£o\\', \\'FABRICACAO/FABRICA\\', \\'FÃBRICA PRODUÃÃO FFO\\', \\'EXPEDIÃÃO FÃBRICA FFO\\') '], setGraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves, 34)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasAvesLeves, \"GraficoRACProblemasAvesLeves\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Aves Leves%\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÃÃO UNIDADE\\', \\'EXPEDIÃÃO FÃBRICA\\', \\'FÃBRICA PRODUÃÃO\\', \\'FabricaÃ§Ã£o/ ProduÃ§Ã£o\\', \\'FABRICACAO/FABRICA\\', \\'FÃBRICA PRODUÃÃO FFO\\', \\'EXPEDIÃÃO FÃBRICA FFO\\') '], setGraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves, 35)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesSuinos, \"GraficoRACUnidadesSuinos\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Su%nos%\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÃÃO UNIDADE\\', \\'EXPEDIÃÃO FÃBRICA\\', \\'FÃBRICA PRODUÃÃO\\', \\'FabricaÃ§Ã£o/ ProduÃ§Ã£o\\', \\'FABRICACAO/FABRICA\\', \\'FÃBRICA PRODUÃÃO FFO\\', \\'EXPEDIÃÃO FÃBRICA FFO\\') '], setGraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos, 36)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasSuinos, \"GraficoRACProblemasSuinos\", [' where Tipo = \\'REAL\\' and [Regional (Qualidade)] like \\'%Su%nos%\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Origem_do_Problema_rac] in (\\'DOCUMENTAÃÃO UNIDADE\\', \\'EXPEDIÃÃO FÃBRICA\\', \\'FÃBRICA PRODUÃÃO\\', \\'FabricaÃ§Ã£o/ ProduÃ§Ã£o\\', \\'FABRICACAO/FABRICA\\', \\'FÃBRICA PRODUÃÃO FFO\\', \\'EXPEDIÃÃO FÃBRICA FFO\\') '], setGraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos, 37)\r\n\r\n        chamarAPI(\"RACUnicoUnidade\", GraficoRACUnidadesPreparados, \"GraficoRACUnidadesPreparados\", [whereRACPreparados + \" and Tipo = \\'REAL\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) \"], setGraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados, 38)                                                                    // 6\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACProblemasPreparados, \"GraficoRACProblemasPreparados\", [whereRACPreparados + \" and Tipo = \\'REAL\\' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) \"], setGraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados, 39)\r\n\r\n        chamarAPI(\"RACIndicadores\", GraficoRACME, \"GraficoRACME\", [\" where mercado_rac = 'ME' \"], setGraficoRACME, setresponseGraficoRACME, 40)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACMI, \"GraficoRACMI\", [\" where mercado_rac IN ('MI', 'INTERNO') and Unidade not in ('AVANTI','Dan Vigor', 'EIRELI ME', 'ITAJAI ÃLEO COMENSTÃVEL','Marba','Massatake','Santa Cruz do Sul','Vigor')  \"], setGraficoRACMI, setresponseGraficoRACMI, 41)\r\n\r\n\r\n        /////////////////////\r\n\r\n        //FFO\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesFFO, \"GraficoRACDetalhesFFO\", [\" where 1=1 AND [Origem da RAC]  IN ('DocumentaÃ§Ã£o Unidade', 'EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','PRODUÃÃO EM TERCEIRO') AND [TIPO_ATENDIMENTO_RAC] IN ('RECLAMAÃÃO FFO') \"] , setGraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO, 52) \r\n\r\n        //Atendimento Comercial\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesAC, \"GraficoRACDetalhesAC\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('ATENDIMENTO COMERCIAL') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÃTICA', 'NEGOCIAÃÃO COMERCIAL', 'OBRIGAÃÃO', 'RAC CAIXA', 'RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL)\"] , setGraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC, 53)\r\n\r\n        //LogÃ­stica ExportaÃ§Ã£o\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesLogME, \"GraficoRACDetalhesLogME\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('LOGÃSTICA EXPORTAÃÃO') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÃTICA', 'NEGOCIAÃÃO COMERCIAL', 'OBRIGAÃÃO', 'RAC CAIXA', 'RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL) \"] , setGraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME, 54)\r\n\r\n        //LogÃ­stica ImportaÃ§Ã£o\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesLogMI, \"GraficoRACDetalhesLogMI\", [\" WHERE 1=1  AND [Origem]  IN ('LOGÃSTICA MI', 'LOGÃSTICA CD')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','AVANTI','ServiÃ§os','Shipping') OR Unidade IS NULL) \"] , setGraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI, 55)\r\n\r\n        //DocumentaÃ§Ã£o\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesDoc, \"GraficoRACDetalhesDoc\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('DOCUMENTAÃÃO CORPORATIVO') AND ( [TIPO_ATENDIMENTO_RAC] NOT IN ('NEGOCIAÃÃO COMERCIAL', 'OBRIGAÃÃO','RAC COMPLEMENTAR') OR [TIPO_ATENDIMENTO_RAC] IS NULL) \"] , setGraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc, 56)\r\n\r\n        //Transporte Terrestre\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesTT, \"GraficoRACDetalhesTT\", [\" WHERE 1=1  AND [Origem]  IN ('TRANSPORTE TERRESTRE')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL)  \"] , setGraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT, 57)\r\n\r\n        //ProduÃ§Ã£o em Terceiro (ex. Massatake)\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesTerceiro, \"GraficoRACDetalhesTerceiro\", [\" WHERE 1=1  AND [Origem]  IN ('PRODUÃÃO EM TERCEIRO')  and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) and (Unidade NOT IN ('Dan Vigor','Massatake','Vigor','ITAJAI ÃLEO COMESTÃVEIS') )  \"] , setGraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro, 58)\r\n\r\n        //Massatake\r\n        chamarAPI(\"RACIndicadoresSemFiltro\", GraficoRACDetalhesMassatake, \"GraficoRACDetalhesMassatake\", [\" WHERE 1=1 AND [Origem da RAC]  IN ('PRODUÃÃO EM TERCEIRO') AND UNIDADE IN ('MASSATAKE') AND  [TIPO_ATENDIMENTO_RAC] IN ('RECLAMAÃÃO') \"] , setGraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake, 59)\r\n\r\n        //PDV\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesPDV, \"GraficoRACDetalhesPDV\", [\" WHERE 1=1 AND [Origem]  IN ('ABUSO DE PRODUTO PDV') and (Tipo_Atendimento_rac NOT IN ('ALERTA',  'CrÃ­tica') OR Tipo_Atendimento_rac IS NULL)  and (Unidade NOT IN ('ITAJAI ÃLEO COMESTÃVEIS','ITAJAI AVES PESADAS', 'Massatake', 'Dan Vigor','GRANO ALIMENTOS S.A.','Marba','Santa Cruz do Sul','Vigor', 'VARZEA GRANDE - CD'\t) )         \"] , setGraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV, 60)\r\n        chamarAPI(\"RACUnicoProblema\", GraficoRACDetalhesAberturaPDV, \"GraficoRACDetalhesAberturaPDV\", [\" WHERE 1=1 AND [Origem da RAC] IN ('ABUSO DE PRODUTO PDV') AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR')  AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA') AND MÃªs = month((select * from v_maiorData)) AND Ano = year((select * from v_maiorData)) \"] , setGraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV, 61)\r\n       \r\n        //RAC CrÃ­tica RACIndicadoresSemFiltro\r\n        chamarAPI(\"RACIndicadoresSemFiltro2\", GraficoRACDetalhesCritica, \"GraficoRACDetalhesCritica\", [\" WHERE 1=1 AND [Origem] NOT IN ('ABUSO DE PRODUTO HOME','LOGÃSTICA MI','SERVICO') AND  (Unidade NOT IN ('ITAJAI ÃLEO COMESTÃVEIS','ITAJAI PESCADOS', 'Massatake', 'Dan Vigor','Marba','Vigor', 'NORONHA', 'RIBEIRÃO PRETO - CD', 'ServiÃ§os', 'Shipping'\t) )  AND [TIPO_ATENDIMENTO_RAC] IN ('CRÃTICA') \"] , setGraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica, 62)\r\n\r\n        \r\n        var whereLinhaEspecial = \" where 1 = 1 \"\r\n                 + \" and [Marca] IN ('SEARA GOURMET', 'SEARA NATURE', 'SEARA INCRIVEL', 'SEARA ROTISSERIE') \t\t\"\r\n\r\n        //RAC Linhas Especiais (Seara Nature, Gourmet, IncrÃ­vel)\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesEspeciais, \"GraficoRACDetalhesEspeciais\", [whereLinhaEspecial] , setGraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais, 63)\r\n\r\n        //RAC Corpo Estanho - [Totais]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCE, \"GraficoRACDetalhesCE\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO') AND  [TIPO CE] IN ('INERENTE','NÃO INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') \"] , setGraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE, 64)\r\n\r\n        //RAC Corpo Estanho - [Inerente]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCEInerente, \"GraficoRACDetalhesCEInerente\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO') AND [TIPO CE] IN ('INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO','MORRO GRANDE') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') \"] , setGraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente, 65)\r\n\r\n        //RAC Corpo Estanho - [NÃ£o Inerente]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCENaoInerente, \"GraficoRACDetalhesCENaoInerente\", [\" WHERE 1=1 AND [Origem da RAC] IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO') AND [TIPO CE] IN ('NÃO INERENTE') AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','VERÃSSIMO','MORRO GRANDE') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') \"] , setGraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente, 66)\r\n\r\n        //RAC Corpo Estanho - [PlÃ¡stico]\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCEPlastico, \"GraficoRACDetalhesCEPlastico\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') AND [TIPO DO PROBLEMA] IN ('LUVA','LUVA NITRÃLICA','PLÃSTICO','PLÃSTICO DURO','PLÃSTICO MOLE') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico, 67)\r\n\r\n        //RAC Inseto\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesInseto, \"GraficoRACDetalhesInseto\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') AND [TIPO DO PROBLEMA] IN ('INSETO') AND [SUB TIPO PROBLEMA] NOT IN ('LARVA') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto, 68)\r\n\r\n        //RAC Cabelo\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesCabelo, \"GraficoRACDetalhesCabelo\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') AND [TIPO DO PROBLEMA] LIKE '%CABELO%' AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo, 69)\r\n\r\n        //RAC Plastico\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesPlastico, \"GraficoRACDetalhesPlastico\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') AND [TIPO DO PROBLEMA] IN ('LUVA','LUVA NITRÃLICA','PLÃSTICO','PLÃSTICO DURO','PLÃSTICO MOLE') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico,70)\r\n\r\n        //RAC Metal\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesMetal, \"GraficoRACDetalhesMetal\", [\" WHERE 1=1 AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR')  AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') AND [PROBLEMA] IN ('METAL','METÃLICO') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal,71)\r\n\r\n        //RAC IntoxicaÃ§Ã£o\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesIntoxicacao, \"GraficoRACDetalhesIntoxicacao\", [\" WHERE 1=1 AND UNIDADE NOT IN ('HORTUS','JBS','MASSATAKE','VIGOR') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') AND [PROBLEMA] IN ('INTOXICAÃÃO ALIMENTAR') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao,72)\r\n\r\n        //RAC Larva\r\n        chamarAPI(\"RACIndicadores\", GraficoRACDetalhesLarva, \"GraficoRACDetalhesLarva\", [\" WHERE 1=1 AND [GRUPO] IN ('CORPO ESTRANHO') AND [REGIONAL (Qualidade)] NOT IN ('FATIADOS','PESCADOS','AVES PR','AVES RS/SC/SP','AVES SP/CO/NE') AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÃFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÃNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO â CD','SALVADOR â CD','SAO PAULO â CD','SEARA MEATS','SOMAVE','VARZEA GRANDE â CD') AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO') AND [PROBLEMA] IN ('INSETO','INSETO VIVO') AND [TIPO DO PROBLEMA] IN ('INSETO','LARVA', 'INSETO VIVO','LARVA VIVA')\t AND [SUB TIPO PROBLEMA] IN ('LARVA','LARVA VIVA') AND ([Origem da RAC] IN ('FABRICAÃÃO')) \"] , setGraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva,73)\r\n\r\n        //NNC Log\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesTotal, \"GraficoNNCLogDetalhesTotal\", [\" where 1=1 and [Regional (Qualidade)] not in ('LogÃ­stica','Outros','Terceiro') and ([Ãrea ResponsÃ¡vel] not in ('RASTREABILIDADE HUB') OR [Ãrea ResponsÃ¡vel] IS NULL) \"] , setGraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal,74)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesAves, \"GraficoNNCLogDetalhesAves\", [\" where [Regional (Qualidade)] not in ('LogÃ­stica','Outros','Terceiro') and ([Ãrea ResponsÃ¡vel] not in ('RASTREABILIDADE HUB') OR [Ãrea ResponsÃ¡vel] IS NULL) AND FORNECEDOR IN ('AMPARO AVES',\t\t\t'BRASILIA',\t'CAARAPO AVES',\t'CAMPO MOURAO AVES',\t'CAXIAS DO SUL',\t\t\t'FORQUILHINHA AVES',\t'GARIBALDI AVES',\t'GUAPIACU AVES',\t'IPUMIRIM AVES',\t'ITAIOPOLIS AVES',\t'ITAPETININGA AVES',\t'ITAPIRANGA AVES',\t\t'JACAREZINHO AVES',\t'JAGUAPITA AVES',\t\t\t\t'LAPA AVES',\t'MONTENEGRO',\t'NOVA VENEZA AVES',\t'NUPORANGA - SP ',\t'NUPORANGA AVES',\t\t'PASSO FUNDO',\t'PASSOS AVES',\t\t\t'ROLANDIA',\t\t'SANTA FE AVES',\t'SANTO INACIO AVES',\t'SAO JOSE AVES',\t\t'SEARA AVES',\t'SEARA SUI/ IND',\t\t'SIDROLANDIA AVES',\t'TANGARA DA SERRA',\t\t'TRINDADE DO SUL',\t'UBERABA AVES', 'SAO GONCALO DOS CAMPOS AVES')\"] , setGraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves,75)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesPreparados, \"GraficoNNCLogDetalhesPreparados\", [\" where [Regional (Qualidade)] not in ('LogÃ­stica','Outros','Terceiro') and ([Ãrea ResponsÃ¡vel] not in ('RASTREABILIDADE HUB') OR [Ãrea ResponsÃ¡vel] IS NULL) AND FORNECEDOR IN ('ANA RECH',\t'BOM RETIRO DO SUL SUI/ IND',\t'BRASILIA',\t\t\t'DOURADOS SUI/ IND',\t'DUQUE DE CAXIAS SUI/ IND',\t\t\t\t\t\t'ITAPIRANGA AVES',\t\t\t\t'JAGUARIUNA SUI/ IND',\t'JUNDIAI SUI/ IND',\t'LAGES SUI/ IND',\t\t'MONTENEGRO',\t\t\t\t'OSASCO SUI/ IND',\t\t\t'RIO GRANDE DA SERRA',\t'ROCA SALES',\t\t'SALTO VELOSO AVES',\t\t\t\t\t'SEARA AVES',\t'SEARA SUI/ IND',\t'TRES PASSOS SUI/ IND',        'SAO GONCALO DOS CAMPOS AVES', 'ITAPIRANGA') \"] , setGraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados,76)\r\n        chamarAPI(\"NCCLOG\", GraficoNNCLogDetalhesSuinos, \"GraficoNNCLogDetalhesSuinos\", [\" where [Regional (Qualidade)] not in ('LogÃ­stica','Outros','Terceiro') and ([Ãrea ResponsÃ¡vel] not in ('RASTREABILIDADE HUB') OR [Ãrea ResponsÃ¡vel] IS NULL) AND FORNECEDOR IN ('ANA RECH',\t'CARAMBEI',\t'DOURADOS SUI/ IND',\t'ITAPIRANGA SUI/ IND',\t'SAO MIGUEL DO OESTE',\t'SEARA AVES',\t'SEARA SUI/ IND',\t'SEBERI',\t'TRES PASSOS SUI/ IND', 'FREDERICO WESTPHALEN')\"] , setGraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos,77)\r\n\r\n        //NNC MP\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesPesadas, \"GraficoNNCAvesPesadas\", [\" where [Reg. Qual] like '%Aves%Pe%' \"], setGraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas, 78)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesPesadasUnidades, \"GraficoNNCAvesPesadasUnidades\", [ \" where [Reg. Qual] like '%Aves%Pe%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades, 79)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesPesadasProblemas, \"GraficoNNCAvesPesadasProblemas\", [ \" where [Reg. Qual] like '%Aves%Pe%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas, 80)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesRS, \"GraficoNNCAvesRS\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' \"], setGraficoNNCAvesRS, setresponseGraficoNNCAvesRS, 81)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesRSUnidades, \"GraficoNNCAvesRSUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades, 82)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesRSProblemas, \"GraficoNNCAvesRSProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas RS/SC/SP%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas, 83)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesSP, \"GraficoNNCAvesSP\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' \"], setGraficoNNCAvesSP, setresponseGraficoNNCAvesSP, 84)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesSPUnidades, \"GraficoNNCAvesSPUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades, 85)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesSPProblemas, \"GraficoNNCAvesSPProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas SP/CO/NE%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas, 86)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesPR, \"GraficoNNCAvesPR\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' \"], setGraficoNNCAvesPR, setresponseGraficoNNCAvesPR, 87)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesPRUnidades, \"GraficoNNCAvesPRUnidades\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades, 88)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesPRProblemas, \"GraficoNNCAvesPRProblemas\", [\" where [Reg. Qual] like '%Aves Pesadas PR%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas, 89)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCAvesLeves, \"GraficoNNCAvesLeves\", [\" where [Reg. Qual] like '%Aves Leves%' \"], setGraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves, 90)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCAvesLevesUnidades, \"GraficoNNCAvesLevesUnidades\", [\" where [Reg. Qual] like '%Aves Leves%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades, 91)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCAvesLevesProblemas, \"GraficoNNCAvesLevesProblemas\", [\" where [Reg. Qual] like '%Aves Leves%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas, 92)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCSuinos, \"GraficoNNCSuinos\", [\" where [Reg. Qual] like '%SuÃ­nos%' \"], setGraficoNNCSuinos, setresponseGraficoNNCSuinos, 93)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCSuinosUnidades, \"GraficoNNCSuinosUnidades\", [\" where [Reg. Qual] like '%SuÃ­nos%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades, 94)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCSuinosProblemas, \"GraficoNNCSuinosProblemas\", [\" where [Reg. Qual] like '%SuÃ­nos%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas, 95)\r\n\r\n        chamarAPI(\"NCCMP\", GraficoNNCPreparados, \"GraficoNNCPreparados\", [\" where [Reg. Qual] like '%Preparados%' \"], setGraficoNNCPreparados, setresponseGraficoNNCPreparados, 96)\r\n        chamarAPI(\"NCCMPUnidade\", GraficoNNCPreparadosUnidades, \"GraficoNNCPreparadosUnidades\", [\" where [Reg. Qual] like '%Preparados%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades, 97)\r\n        chamarAPI(\"NCCMPProblema\", GraficoNNCPreparadosProblemas, \"GraficoNNCPreparadosProblemas\", [\" where [Reg. Qual] like '%Preparados%' and Ano = year((select * from v_maiorData)) and MÃªs = month((select * from v_maiorData)) and [Entra para a Meta] = 'Sim' And  [Grupo Problema.] NOT IN ('Distrib/ LogÃ­stica_ServiÃ§os','Embalagem SecundÃ¡ria') \"], setGraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas, 98)\r\n        \r\n        chamarAPI(\"NCCMP\", GraficoNNCCETotal, \"GraficoNNCCETotal\", [\" WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' \"], setGraficoNNCCETotal, setresponseGraficoNNCCETotal, 99)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEInerente, \"GraficoNNCCEInerente\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo CE] = 'Inerente' \"], setGraficoNNCCEInerente, setresponseGraficoNNCCEInerente, 100)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCENaoInerente, \"GraficoNNCCENaoInerente\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo CE] = 'NÃ£o Inerente' \"], setGraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente, 101)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEOssos, \"GraficoNNCCEOssos\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] = 'Ossos' \"], setGraficoNNCCEOssos, setresponseGraficoNNCCEOssos, 102)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEPlastico, \"GraficoNNCCEPlastico\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] in ('Borracha','Luva Latex','Luva Nitrilica','PlÃ¡stico duro','PlÃ¡stico mole - ResÃ­duo') \"], setGraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico, 103)\r\n        chamarAPI(\"NCCMP\", GraficoNNCCEMetal, \"GraficoNNCCEMetal\", [\"  WHERE [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' and ( [Grupo Problema.] = 'Corpo Estranho_ Metalico' or [Tipo Problema] in ('Luva anti corte') ) \"], setGraficoNNCCEMetal, setresponseGraficoNNCCEMetal, 104)\r\n        \r\n            \r\n        /////////////////////\r\n\r\n        buscarDadosTable([\" and 1=1 \"])\r\n\r\n        const bar_ctx = canvasRef.current.getContext('2d');\r\n\r\n        const background = bar_ctx.createLinearGradient(0, 0, 0, 300);\r\n        const backgroundCinza = bar_ctx.createLinearGradient(0, 0, 0, 300);\r\n\r\n        background.addColorStop(0, \"#f59c00\");\r\n        background.addColorStop(1, \"#cc0000\");\r\n\r\n        backgroundCinza.addColorStop(0, \"#f2f2f2\");\r\n        backgroundCinza.addColorStop(1, \"#bfbfbf\");\r\n\r\n        SetBackgroundGradient(background);\r\n        SetBackgroundGradientCinza(backgroundCinza);\r\n\r\n        \r\n\r\n    }, []);\r\n\r\n    function callbackChamarAPI (apiNome) {\r\n        console.log(`Rodou ${apiNome}, ${percorreNumeroChamados()}`)\r\n        if (percorreNumeroChamados()) {\r\n            document.getElementById(\"btnAplicar\").click()\r\n            setIsUpdatingData(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const chamarAPI = (apiNome, objeto, numGrafico, parametros, funcao, funcaoRetorno, numeroChamado) => {\r\n\r\n        switch (apiNome) {\r\n            case 'CETotal':\r\n\r\n                api.getSearaBaseCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    // setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'NNCMPTotalCE':\r\n\r\n                api.getSearaBaseNNCMPTotalCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'RACTotalCE':\r\n\r\n                api.getSearaBaseRACTotalCE(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    // what now?\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n\r\n            case 'RAC':\r\n\r\n                api.getSearaBaseRac(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n           \r\n            case 'RACIndicadores':\r\n\r\n                api.getSearaBaseRacIndicadores(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n                case 'RACIndicadoresSemFiltro2':\r\n\r\n                    api.getSearaBaseRacIndicadoresSemFiltro2(parametros).then((response) => {\r\n                        buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                        numeroChamados[numeroChamado] = true;\r\n                        callbackChamarAPI(apiNome)\r\n                        return response\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                    break\r\n\r\n            case 'RACIndicadoresSemFiltro':\r\n\r\n                api.getSearaBaseRacIndicadores_(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n                \r\n            case 'NCCMP':\r\n\r\n                api.getSearaBaseNCCMP(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCMPUnidade':\r\n\r\n                api.getSearaBaseNCCMPUnidade(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCMPProblema':\r\n\r\n                api.getSearaBaseNCCMPProblema(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'NCCLOG':\r\n\r\n                api.getSearaBaseNCCLOG(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n            case 'RACUnicoUnidade':\r\n\r\n                api.getSearaBaseRACUnicoUnidade(parametros).then((response) => {\r\n\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            case 'RACUnicoProblema':\r\n\r\n                api.getSearaBaseRACUnicoProblema(parametros).then((response) => {\r\n                    buscarDados(response, funcao, objeto, funcaoRetorno)\r\n                    numeroChamados[numeroChamado] = true;\r\n                    callbackChamarAPI(apiNome)\r\n                    return response\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                break\r\n\r\n            default:\r\n                break\r\n\r\n        }\r\n\r\n        return\r\n    }\r\n\r\n    const aplicar = () => {\r\n        if (estaRodandoAplicar == false) {\r\n            console.log(\"aplicar\")\r\n            setEstaRodandoAplicar(true);\r\n            \r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotal, setresponseGraficoCETotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCE, setresponseGraficoNNCMPTotalCE, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCE, setresponseGraficoRACTotalCE, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRAC, setresponseGraficoRAC, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMP, setresponseGraficoNCCMP, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadas, setresponseGraficoCETotalAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadas, setresponseGraficoNNCMPTotalCEAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadas, setresponseGraficoRACTotalCEAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadas, setresponseGraficoRACAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadas, setresponseGraficoNCCMPAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasPR, setresponseGraficoCETotalAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasPR, setresponseGraficoNNCMPTotalCEAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasPR, setresponseGraficoRACTotalCEAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasPR, setresponseGraficoRACAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasPR, setresponseGraficoNCCMPAvesPesadasPR, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasSP, setresponseGraficoCETotalAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasSP, setresponseGraficoNNCMPTotalCEAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasSP, setresponseGraficoRACTotalCEAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasSP, setresponseGraficoRACAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasSP, setresponseGraficoNCCMPAvesPesadasSP, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesPesadasRS, setresponseGraficoCETotalAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesPesadasRS, setresponseGraficoNNCMPTotalCEAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesPesadasRS, setresponseGraficoRACTotalCEAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesPesadasRS, setresponseGraficoRACAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesPesadasRS, setresponseGraficoNCCMPAvesPesadasRS, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalAvesLeves, setresponseGraficoCETotalAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEAvesLeves, setresponseGraficoNNCMPTotalCEAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEAvesLeves, setresponseGraficoRACTotalCEAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACAvesLeves, setresponseGraficoRACAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPAvesLeves, setresponseGraficoNCCMPAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalSuinos, setresponseGraficoCETotalSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCESuinos, setresponseGraficoNNCMPTotalCESuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCESuinos, setresponseGraficoRACTotalCESuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACSuinos, setresponseGraficoRACSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPSuinos, setresponseGraficoNCCMPSuinos, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoCETotalPreparados, setresponseGraficoCETotalPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCMPTotalCEPreparados, setresponseGraficoNNCMPTotalCEPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoRACTotalCEPreparados, setresponseGraficoRACTotalCEPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoRACPreparados, setresponseGraficoRACPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNCCMPPreparados, setresponseGraficoNCCMPPreparados, backgroundGradient, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadas, setresponseGraficoRACUnidadesAvesPesadas, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadas, setresponseGraficoRACProblemasAvesPesadas, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasPR, setresponseGraficoRACUnidadesAvesPesadasPR, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasPR, setresponseGraficoRACProblemasAvesPesadasPR, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasSP, setresponseGraficoRACUnidadesAvesPesadasSP, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasSP, setresponseGraficoRACProblemasAvesPesadasSP, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesPesadasRS, setresponseGraficoRACUnidadesAvesPesadasRS, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesPesadasRS, setresponseGraficoRACProblemasAvesPesadasRS, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesAvesLeves, setresponseGraficoRACUnidadesAvesLeves, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasAvesLeves, setresponseGraficoRACProblemasAvesLeves, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesSuinos, setresponseGraficoRACUnidadesSuinos, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasSuinos, setresponseGraficoRACProblemasSuinos, backgroundGradientCinza)\r\n\r\n            GerarGraficoBarras(GraficoRACUnidadesPreparados, setresponseGraficoRACUnidadesPreparados, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoRACProblemasPreparados, setresponseGraficoRACProblemasPreparados, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoSemMeta(GraficoRACMI, setresponseGraficoRACMI, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoSemMeta(GraficoRACME, setresponseGraficoRACME, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //FFO\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesFFO, setresponseGraficoRACDetalhesFFO, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //ATENDIMENTO COMERCIAL\r\n            GerarGraficoHistorico(GraficoRACDetalhesAC, setresponseGraficoRACDetalhesAC, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //LogÃ­stica ExportaÃ§Ã£o\r\n            GerarGraficoHistorico(GraficoRACDetalhesLogME, setresponseGraficoRACDetalhesLogME, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //LogÃ­stica ImportaÃ§Ã£o\r\n            GerarGraficoHistorico(GraficoRACDetalhesLogMI, setresponseGraficoRACDetalhesLogMI, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //DocumentaÃ§Ã£o\r\n            GerarGraficoHistorico(GraficoRACDetalhesDoc, setresponseGraficoRACDetalhesDoc, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Transporte Terrestre\r\n            GerarGraficoHistorico(GraficoRACDetalhesTT, setresponseGraficoRACDetalhesTT, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //ProduÃ§Ã£o em Terceiro (ex. Massatake)\r\n            GerarGraficoHistorico(GraficoRACDetalhesTerceiro, setresponseGraficoRACDetalhesTerceiro, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //Massatake\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesMassatake, setresponseGraficoRACDetalhesMassatake, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //PDV\r\n            GerarGraficoHistorico(GraficoRACDetalhesPDV, setresponseGraficoRACDetalhesPDV, backgroundGradient, backgroundGradientCinza)\r\n            //Abertura PDV\r\n            GerarGraficoBarras(GraficoRACDetalhesAberturaPDV, setresponseGraficoRACDetalhesAberturaPDV, backgroundGradientCinza, backgroundGradientCinza)\r\n \r\n            //RAC CrÃ­tica\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCritica, setresponseGraficoRACDetalhesCritica, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Linhas Especiais (Seara Nature, Gourmet, IncrÃ­vel)\r\n            GerarGraficoHistorico(GraficoRACDetalhesEspeciais, setresponseGraficoRACDetalhesEspeciais, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Corpo Estanho - [Totais]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCE, setresponseGraficoRACDetalhesCE, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //RAC Corpo Estanho - [Inerente]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCEInerente, setresponseGraficoRACDetalhesCEInerente, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Corpo Estanho - [NÃ£o Inerente]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCENaoInerente, setresponseGraficoRACDetalhesCENaoInerente, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Corpo Estanho - [PlÃ¡stico]\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCEPlastico, setresponseGraficoRACDetalhesCEPlastico, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Inseto\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesInseto, setresponseGraficoRACDetalhesInseto, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Cabelo\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesCabelo, setresponseGraficoRACDetalhesCabelo, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Plastico\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesPlastico, setresponseGraficoRACDetalhesPlastico, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Metal\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesMetal, setresponseGraficoRACDetalhesMetal, backgroundGradient, backgroundGradientCinza)\r\n            \r\n            //RAC IntoxicaÃ§Ã£o\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesIntoxicacao, setresponseGraficoRACDetalhesIntoxicacao, backgroundGradient, backgroundGradientCinza)\r\n\r\n            //RAC Larva\r\n            GerarGraficoHistoricoSemMeta(GraficoRACDetalhesLarva, setresponseGraficoRACDetalhesLarva, backgroundGradient, backgroundGradientCinza)\r\n\r\n            // //NNC Log\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesTotal, setresponseGraficoNNCLogDetalhesTotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesAves, setresponseGraficoNNCLogDetalhesAves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesPreparados, setresponseGraficoNNCLogDetalhesPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistorico(GraficoNNCLogDetalhesSuinos, setresponseGraficoNNCLogDetalhesSuinos, backgroundGradient, backgroundGradientCinza)\r\n\r\n            // //NNC\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesPesadas, setresponseGraficoNNCAvesPesadas, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPesadasUnidades, setresponseGraficoNNCAvesPesadasUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPesadasProblemas, setresponseGraficoNNCAvesPesadasProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesRS, setresponseGraficoNNCAvesRS, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesRSUnidades, setresponseGraficoNNCAvesRSUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesRSProblemas, setresponseGraficoNNCAvesRSProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesSP, setresponseGraficoNNCAvesSP, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesSPUnidades, setresponseGraficoNNCAvesSPUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesSPProblemas, setresponseGraficoNNCAvesSPProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesPR, setresponseGraficoNNCAvesPR, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPRUnidades, setresponseGraficoNNCAvesPRUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesPRProblemas, setresponseGraficoNNCAvesPRProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCAvesLeves, setresponseGraficoNNCAvesLeves, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesLevesUnidades, setresponseGraficoNNCAvesLevesUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCAvesLevesProblemas, setresponseGraficoNNCAvesLevesProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCSuinos, setresponseGraficoNNCSuinos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCSuinosUnidades, setresponseGraficoNNCSuinosUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCSuinosProblemas, setresponseGraficoNNCSuinosProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnterior(GraficoNNCPreparados, setresponseGraficoNNCPreparados, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCPreparadosUnidades, setresponseGraficoNNCPreparadosUnidades, backgroundGradientCinza)\r\n            GerarGraficoBarras(GraficoNNCPreparadosProblemas, setresponseGraficoNNCPreparadosProblemas, backgroundGradientCinza)\r\n\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCETotal, setresponseGraficoNNCCETotal, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEInerente, setresponseGraficoNNCCEInerente, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCENaoInerente, setresponseGraficoNNCCENaoInerente, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEOssos, setresponseGraficoNNCCEOssos, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEPlastico, setresponseGraficoNNCCEPlastico, backgroundGradient, backgroundGradientCinza)\r\n            GerarGraficoHistoricoAnoAnteriorSemMeta(GraficoNNCCEMetal, setresponseGraficoNNCCEMetal, backgroundGradient, backgroundGradientCinza)\r\n\r\n\r\n            \r\n\r\n\r\n            setEstaRodandoAplicar(false);\r\n        }\r\n    }\r\n\r\n    const GerarGraficoHistorico = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2019' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'MÃ©dia DiÃ¡ria' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"MÃ©dia DiÃ¡ria\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"MÃ©dia DiÃ¡ria\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n            series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoAnoAnterior = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        //debugger\r\n        xaxis.splice(0, 1) //tira 2019\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'MÃ©dia DiÃ¡ria' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"MÃ©dia DiÃ¡ria\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"MÃ©dia DiÃ¡ria\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"2019\") {\r\n                console.log(\"NÃ£o entra neste relatÃ³rio por ser 2019\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n            //series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoAnoAnteriorSemMeta = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        //debugger\r\n        xaxis.splice(0, 1) //tira 2019\r\n        xaxis.splice(1, 1) //tira Meta\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: 'Meta' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'MÃ©dia DiÃ¡ria' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"MÃ©dia DiÃ¡ria\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n            let fontWeight = 'bold'\r\n            let lineSize = 2\r\n            let fontSize = \"12\"\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"MÃ©dia DiÃ¡ria\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n                    fontSize = \"14\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: lineSize,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: fontSize,\r\n                        weight: fontWeight\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"2019\" || y.name == \"Evolutivo Meta\" || y.name == \"Meta\") {\r\n                console.log(\"NÃ£o entra neste relatÃ³rio por ser 2019 e Meta\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n            //series.push(serie)\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const GerarGraficoHistoricoSemMeta = (objeto, funcao, gradient, gradient2) => {\r\n\r\n        if (!objeto) return\r\n\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        xaxis.splice(2, 1) //tira a meta\r\n        let yaxis = [{ name: 'Evolutivo 2020' }, { name: 'Evolutivo 2021' }, { name: 'Evolutivo Meta' }, { name: '2019' }, { name: '2020' }, { name: '2021' }, { name: 'forcast' }, { name: 'MÃ©dia DiÃ¡ria' }];\r\n\r\n        xaxis.forEach(x => {\r\n            if (x.name == \"2019\") {\r\n                x['yaxis'] = [{ name: \"2019\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2020\") {\r\n                x['yaxis'] = [{ name: \"2020\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"Meta\") {\r\n                x['yaxis'] = [{ name: \"Meta\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else if (x.name == \"2021\") {\r\n                x['yaxis'] = [{ name: \"2021\", value: x.value[0].Valor == \"\" ? null : x.value[0].Valor }]\r\n            } else {\r\n                x['yaxis'] = [\r\n                    { name: \"Evolutivo 2020\", value: x.value[0].a2020 },\r\n                    { name: \"Evolutivo Meta\", value: x.value[0].aMeta },\r\n                    { name: \"Evolutivo 2021\", value: x.value[0].a2021 },\r\n                    { name: \"forcast\", value: x.value[0].forcast.replace(\",\", \".\") },\r\n                    { name: \"MÃ©dia DiÃ¡ria\", value: x.value[0].mediaDiaria.replace(\",\", \".\") },\r\n                ]\r\n            }\r\n        })\r\n\r\n        let series = []\r\n        let maiorValorSerie = 0\r\n        let menorValorSerie = 200000\r\n\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => r.name === y.name);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'line'\r\n            let cor = '#bfbfbf'\r\n            let corLabel = '#bfbfbf'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n\r\n            switch (y.name) {\r\n\r\n                case \"2019\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2020\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient2 ?? \"#bfbfbf\"\r\n                    corLabel = \"#bfbfbf\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Meta\":\r\n                    tipo = \"bar\"\r\n                    cor = gradient ?? \"rgb(204,0,0)\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"2021\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#cccccc\"\r\n                    corLabel = \"#cccccc\"\r\n                    yAx = \"A\"\r\n                    break\r\n                case \"Evolutivo 2020\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(166, 166, 166)\"\r\n                    corLabel = \"rgb(166, 166, 166)\"\r\n                    varborderDash = [10, 5]\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo Meta\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(245,156,0)\"\r\n                    corLabel = \"rgb(245,156,0)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"Evolutivo 2021\":\r\n                    tipo = \"line\"\r\n                    cor = \"rgb(89,89,89)\"\r\n                    corLabel = \"rgb(89,89,89)\"\r\n                    yAx = \"B\"\r\n                    break\r\n                case \"forcast\":\r\n                    tipo = \"line\"\r\n                    cor = \"#000000\" //\"rgb(245,156,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n                case \"MÃ©dia DiÃ¡ria\":\r\n                    tipo = \"bar\"\r\n                    cor = \"#000000\" //\"rgb(204,0,0)\"\r\n                    corLabel = \"#000000\"\r\n                    yAx = \"B\"\r\n\r\n                    break\r\n\r\n                default:\r\n                    break\r\n\r\n\r\n            }\r\n\r\n            for (var i = 0; i < dataset.length; i++) {\r\n                if (dataset[i] == \"\") dataset[i] = null\r\n                if (parseFloat(dataset[i]) > maiorValorSerie && yAx == \"B\") maiorValorSerie = parseFloat(dataset[i])\r\n                if (parseFloat(dataset[i]) < menorValorSerie && yAx == \"B\") menorValorSerie = parseFloat(dataset[i])\r\n            }\r\n\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: 2,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: \"12\",\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (y.name == \"Meta\" || y.name == \"Evolutivo Meta\") {\r\n                console.log(\"NÃ£o entra neste relatÃ³rio por ser meta\")\r\n            } else {\r\n                series.push(serie)\r\n            }\r\n        })\r\n\r\n        //\r\n        maiorValorSerie = parseFloat(maiorValorSerie)\r\n        menorValorSerie = parseFloat(menorValorSerie)\r\n        let maxYB = maiorValorSerie * (menorValorSerie / maiorValorSerie + 1.2)\r\n\r\n        let tipo = 'line'\r\n        let cor = 'transparent'\r\n        let corLabel = 'transparent'\r\n        let yAx = \"B\"\r\n        let varborderDash = [0, 0]\r\n\r\n        let serieEixo = {\r\n            type: tipo,\r\n            yAxisID: yAx,\r\n            label: '',\r\n            backgroundColor: cor,\r\n            fill: false,\r\n            borderColor: cor,\r\n            borderWidth: 1,\r\n            pointRadius: 5,\r\n            pointBackgroundColor: \"transparent\",\r\n            pointBorderColor: \"transparent\",\r\n            borderDash: varborderDash,\r\n            data: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, maxYB],\r\n            datalabels: {\r\n\r\n                align: \"top\",\r\n                anchor: \"end\",\r\n                offset: 10,\r\n                padding: -2,\r\n                color: corLabel,\r\n                //clip: true,\r\n                font: {\r\n                    size: \"12\",\r\n                },\r\n\r\n            }\r\n\r\n        }\r\n\r\n        series.push(serieEixo)\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n\r\n        //setoptionRelativaresponseGraficoCETotal = f_optionRelativa (2000, 500);\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n\r\n\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n\r\n    \r\n\r\n    const GerarGraficoBarras = (objeto, funcao, gradient) => {\r\n\r\n        if (!objeto) return\r\n        setIsUpdatingData(true)\r\n        let json = objeto;\r\n\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        let groupBy = function groupBy(list, keyGetter) {\r\n            const map = new Map();\r\n            list.forEach((item) => {\r\n                const key = keyGetter(item);\r\n                const collection = map.get(key);\r\n                if (!collection) {\r\n                    map.set(key, [item]);\r\n                } else {\r\n                    collection.push(item);\r\n                }\r\n            });\r\n            return map;\r\n        }\r\n\r\n        let xaxis = Array.from(json);//groupBy(json, x => x[\"Periodo\"]), ([name, value]) => ({ name, value }));\r\n        let yaxis = [{ name: 'Valor' }];\r\n\r\n        xaxis.forEach(x => {\r\n            x['yaxis'] = [{ name: \"Valor\", value: x.value }]\r\n        })\r\n\r\n        let series = []\r\n        yaxis.forEach((y, index) => {\r\n            let dataset = xaxis.map(xx => {\r\n                let yaxysvalue = xx.yaxis.filter(r => 1 === 1);\r\n                if (yaxysvalue.length)\r\n                    return yaxysvalue[0].value\r\n\r\n                return null\r\n            })\r\n\r\n            let tipo = 'bar'\r\n            let cor = gradient ?? '#bfbfbf'\r\n            let corLabel = '#000000'\r\n            let yAx = \"B\"\r\n            let varborderDash = [0, 0]\r\n\r\n            let serie = {\r\n                type: tipo,\r\n                yAxisID: yAx,\r\n                label: y.name,\r\n                backgroundColor: cor,\r\n                fill: false,\r\n                borderColor: cor,\r\n                borderWidth: 2,\r\n                pointRadius: 5,\r\n                pointBackgroundColor: \"transparent\",\r\n                pointBorderColor: \"transparent\",\r\n                borderDash: varborderDash,\r\n                data: dataset,\r\n                datalabels: {\r\n\r\n                    align: \"top\",\r\n                    anchor: \"end\",\r\n                    offset: 10,\r\n                    padding: -2,\r\n                    color: corLabel,\r\n                    //clip: true,\r\n                    font: {\r\n                        size: \"11\",\r\n                    },\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            series.push(serie)\r\n        })\r\n\r\n        let seriesAdd = []\r\n\r\n        series.filter(s => s.label != null).forEach(element => {\r\n            seriesAdd.push(element)\r\n        });\r\n\r\n        const dashboardData = {\r\n            labels: xaxis.map(r => r.name),\r\n            datasets: seriesAdd,\r\n            indicators\r\n\r\n        };\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(dashboardData);\r\n        }\r\n\r\n        setIsUpdatingData(false)\r\n    }\r\n\r\n    const DataTableRACME = () => {\r\n\r\n        if (!TableRacME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacME.length; i++) {\r\n            json.push(TableRacME[i])\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable\" id=\"tab1\">\r\n                        <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                        <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalME = () => {\r\n\r\n        if (!TableRacFinalME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalME.length; i++) {\r\n            json.push(TableRacFinalME[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab2\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalMI = () => {\r\n\r\n        if (!TableRacFinalMI) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalMI.length; i++) {\r\n            json.push(TableRacFinalMI[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab3\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalRECL = () => {\r\n\r\n        if (!TableRacFinalRECL) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalRECL.length; i++) {\r\n            json.push(TableRacFinalRECL[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable-striped\" id=\"tab3\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalPDV = () => {\r\n\r\n        if (!TableRacFinalPDV) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalPDV.length; i++) {\r\n            json.push(TableRacFinalPDV[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab4\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalTE = () => {\r\n\r\n        if (!TableRacFinalTE) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalTE.length; i++) {\r\n            json.push(TableRacFinalTE[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab5\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACFinalCRIT = () => {\r\n\r\n        if (!TableRacFinalCRIT) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacFinalCRIT.length; i++) {\r\n            json.push(TableRacFinalCRIT[i])\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div >\r\n                    <DataTable value={json} sortMode=\"multiple\"  className=\"p-datatable-striped\" id=\"tab6\" stripedRows>\r\n                        <Column field=\"Unidade\" header=\"Unidade\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Mercado\" header=\"Mercado\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Rac\" header=\"Rac\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Cd Item\" header=\"Cd Item\" headerStyle={{ width: '100px' }}></Column>\r\n                        <Column field=\"Item\" header=\"Item\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Marca\" header=\"Marca\" headerStyle={{ width: '200px' }}></Column>\r\n                        <Column field=\"Data de FabricaÃ§Ã£o\" header=\"Data de FabricaÃ§Ã£o\" headerStyle={{ width: '150px' }}></Column>\r\n                        <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\" headerStyle={{ width: '300px' }}></Column>\r\n                        <Column field=\"ManifestaÃ§Ã£o\" header=\"ManifestaÃ§Ã£o\" ></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //////////////////////////////////////////\r\n    }\r\n\r\n    const DataTableRACAberturaME = () => {\r\n\r\n        if (!TableRACAberturaME) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRACAberturaME.length; i++) {\r\n            json.push(TableRACAberturaME[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAberturaME\">\r\n                        <Column field=\"Mercado\" header=\"Mercado Externo\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEOrienteMedio = () => {\r\n\r\n        if (!TableRacAberturaMEOrienteMedio) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEOrienteMedio.length; i++) {\r\n            json.push(TableRacAberturaMEOrienteMedio[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clOrienteMedio\">\r\n                        <Column field=\"Mercado\" header=\"Oriente MÃ©dio\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEEuropa = () => {\r\n\r\n        if (!TableRacAberturaMEEuropa) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEEuropa.length; i++) {\r\n            json.push(TableRacAberturaMEEuropa[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clEuropa\">\r\n                        <Column field=\"Mercado\" header=\"Europa\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    \r\n    const DataTableRACAberturaMEJapao = () => {\r\n\r\n        if (!TableRacAberturaMEJapao) return;\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEJapao.length; i++) {\r\n            json.push(TableRacAberturaMEJapao[i])\r\n        }\r\n\r\n        let retorno = (\r\n            <div>\r\n               \r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clJapao\">\r\n                        <Column field=\"Mercado\" header=\"JapÃ£o\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n\r\n        return retorno;\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEAsia = () => {\r\n\r\n        if (!TableRacAberturaMEAsia) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEAsia.length; i++) {\r\n            json.push(TableRacAberturaMEAsia[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAsia\">\r\n                        <Column field=\"Mercado\" header=\"Ãsia\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEAmericasAfrica = () => {\r\n\r\n        if (!TableRacAberturaMEAmericasAfrica) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEAmericasAfrica.length; i++) {\r\n            json.push(TableRacAberturaMEAmericasAfrica[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAmericasAfrica\">\r\n                        <Column field=\"Mercado\" header=\"AmÃ©ricas / Ãfrica\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaMEContasGlobais = () => {\r\n\r\n        if (!TableRacAberturaMEContasGlobais) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaMEContasGlobais.length; i++) {\r\n            json.push(TableRacAberturaMEContasGlobais[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clContasGlobais\">\r\n                        <Column field=\"Mercado\" header=\"Contas globais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    \r\n    const DataTableRACAberturaLinhaEspecialFamilia = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialFamilia) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialFamilia.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialFamilia[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialFamilia\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoGourmet = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoGourmet) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoGourmet.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoGourmet[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoGourmet\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoIncrivel = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoIncrivel) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoIncrivel.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoIncrivel[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoIncrivel\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoNature = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoNature) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoNature.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoNature[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoNature\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const DataTableRACAberturaLinhaEspecialAcumuladoRotisserie = () => {\r\n\r\n        if (!TableRacAberturaLinhaEspecialAcumuladoRotisserie) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacAberturaLinhaEspecialAcumuladoRotisserie.length; i++) {\r\n            json.push(TableRacAberturaLinhaEspecialAcumuladoRotisserie[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRACAberturaLinhaEspecialAcumuladoRotisserie\">\r\n                        <Column field=\"CAMPO1\" header=\"Linhas especiais\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    const DataTableNNCMPCEOssos = () => {\r\n\r\n        if (!TableNNCMPCEOssos) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssos.length; i++) {\r\n            json.push(TableNNCMPCEOssos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPCEOssos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const DataTableNNCMPCEOssosFornecedor = () => {\r\n\r\n        if (!TableNNCMPCEOssosFornecedor) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssosFornecedor.length; i++) {\r\n            json.push(TableNNCMPCEOssosFornecedor[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssosFornecedor\">\r\n                        <Column field=\"CAMPO1\" header=\"Corpo Estranho OssosFornecedor\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const DataTableNNCMPCEOssosUnidadesReclamantes = () => {\r\n\r\n        if (!TableNNCMPCEOssosUnidadesReclamantes) return;\r\n\r\n        ////\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPCEOssosUnidadesReclamantes.length; i++) {\r\n            json.push(TableNNCMPCEOssosUnidadesReclamantes[i])\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPCEOssosUnidadesReclamantes\">\r\n                        <Column field=\"CAMPO1\" header=\"Corpo Estranho Ossos Unidades Reclamantes\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    function percorrerJson(obj){    \r\n        \r\n        var rows = [];\r\n        var j = 0;\r\n        for (var key in obj) { // obtÃ©m as chaves do objeto\r\n            // se o valor for diferente de objeto (caso events)\r\n            if (typeof obj[key] !== 'object') {\r\n                if (j == 0){\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")} headerStyle={{ width: '20%' }}></Column>);\r\n                }else{\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")}></Column>);\r\n                }\r\n                j++\r\n            }\r\n            else\r\n            // se o valor for um array de objetos, Ã© iterado o array\r\n            // e as chaves de cada objeto\r\n            \r\n            obj[key].forEach(function(item) {\r\n                var i = 0;\r\n                for (var key2 in item) {\r\n                    if (i == 0){\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha' headerStyle={{ width: '70%' }}></Column>);\r\n                    }else{\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha'></Column>);\r\n                    }\r\n                    i++\r\n                }\r\n            });\r\n        }\r\n\r\n        return rows;\r\n        \r\n    }\r\n\r\n    function percorrerJsonHabilitador(obj){    \r\n\r\n        var rows = [];\r\n        var j = 0;\r\n        for (var key in obj) { // obtÃ©m as chaves do objeto\r\n            // se o valor for diferente de objeto (caso events)\r\n            if (typeof obj[key] !== 'object') {\r\n                if (j == 0){\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")} headerStyle={{ width: '20%' }}></Column>);\r\n                }else{\r\n                    rows.push(<Column field={key} header={key.replaceAll(\"|\",\"\")}></Column>);\r\n                }\r\n                j++\r\n            }\r\n            else\r\n            // se o valor for um array de objetos, Ã© iterado o array\r\n            // e as chaves de cada objeto\r\n            \r\n            obj[key].forEach(function(item) {\r\n                var i = 0;\r\n                for (var key2 in item) {\r\n                    if (i == 0){\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha' headerStyle={{ width: '70%' }}></Column>);\r\n                    }else{\r\n                        rows.push(<Column field={key2} header={key2.replaceAll(\"|\",\"\")} name='linha'></Column>);\r\n                    }\r\n                    i++\r\n                }\r\n            });\r\n        }\r\n\r\n        return rows;\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesTerceiro = () => {\r\n\r\n        if (!TableRacRACDetalhesTerceiro) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesTerceiro.length; i++) {\r\n            json.push(TableRacRACDetalhesTerceiro[i])\r\n        }\r\n\r\n        \r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesTerceiro[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clAberturaTerceiro\">\r\n                    <Column field=\"Unidade\" header=\"Abertura Terceiro\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"RAC\" header=\"QTD\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealAves = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealAves) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealAves.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealAves[i])\r\n        }\r\n\r\n    \r\n        let headerGroup = <ColumnGroup>\r\n                            <Row>\r\n                                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                                <Column header=\"OrÃ§amento\" colSpan={2} />\r\n                                <Column header=\"Real\" colSpan={3} />\r\n                                <Column header=\"Desvio\" colSpan={2} />\r\n                            </Row>    \r\n                            <Row>\r\n                               \r\n                                <Column field=\"ORÃ JUN\"  header=\"MÃªs\" />\r\n                                <Column field=\"ORÃ 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"REAL JUN\"  header=\"MÃªs\"  />\r\n                                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"DESVIO MÃS\"  header=\"MÃªs\"  />\r\n                                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n                            </Row>\r\n                        </ColumnGroup>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealAves\">\r\n                        <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                        <Column field=\"ORÃ JUN\" header=\"MÃªs\" />\r\n                        <Column field=\"ORÃ 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"REAL JUN\" header=\"MÃªs\"  />\r\n                        <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                        <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"DESVIO MÃS\" header=\"MÃªs\"  />\r\n                        <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealPreparados = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealPreparados) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealPreparados.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealPreparados[i])\r\n        }\r\n\r\n    \r\n        let headerGroup = <ColumnGroup>\r\n                            <Row>\r\n                                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                                <Column header=\"OrÃ§amento\" colSpan={2} />\r\n                                <Column header=\"Real\" colSpan={3} />\r\n                                <Column header=\"Desvio\" colSpan={2} />\r\n                            </Row>    \r\n                            <Row>\r\n                               \r\n                                <Column field=\"ORÃ JUN\"  header=\"MÃªs\" />\r\n                                <Column field=\"ORÃ 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"REAL JUN\"  header=\"MÃªs\"  />\r\n                                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                                <Column field=\"DESVIO MÃS\"  header=\"MÃªs\"  />\r\n                                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n                            </Row>\r\n                        </ColumnGroup>;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealPreparados\">\r\n                        <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                        <Column field=\"ORÃ JUN\" header=\"MÃªs\" />\r\n                        <Column field=\"ORÃ 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"REAL JUN\" header=\"MÃªs\"  />\r\n                        <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                        <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                        <Column field=\"DESVIO MÃS\" header=\"MÃªs\"  />\r\n                        <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesMetaRealSuinos = () => {\r\n\r\n        if (!TableRacRACDetalhesMetaRealSuinos) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesMetaRealSuinos.length; i++) {\r\n            json.push(TableRacRACDetalhesMetaRealSuinos[i])\r\n        }\r\n\r\n        let headerGroup = <ColumnGroup>\r\n            <Row>\r\n                <Column header=\"Meta x Real\" rowSpan={2} />\r\n                <Column header=\"OrÃ§amento\" colSpan={2} />\r\n                <Column header=\"Real\" colSpan={3} />\r\n                <Column header=\"Desvio\" colSpan={2} />\r\n            </Row>    \r\n            <Row>\r\n               \r\n                <Column field=\"ORÃ JUN\"  header=\"MÃªs\" />\r\n                <Column field=\"ORÃ 2021\"  header=\"Acumulado\"  />\r\n                <Column field=\"REAL JUN\"  header=\"MÃªs\"  />\r\n                <Column field=\"FORCAST\"  header=\"FORCAST\"  />\r\n                <Column field=\"REAL 2021\"  header=\"Acumulado\"  />\r\n                <Column field=\"DESVIO MÃS\"  header=\"MÃªs\"  />\r\n                <Column field=\"DESVIO 2021\"  header=\"Acumulado\"  />\r\n            </Row>\r\n        </ColumnGroup>;\r\n\r\n        return (\r\n        <div>\r\n        <div className=\"card\">\r\n            <DataTable value={json} headerColumnGroup={headerGroup} className=\"p-datatable clTableRacRACDetalhesMetaRealSuinos\">\r\n                <Column field=\"CAMPO1\" header=\"Meta x Real\" />\r\n                <Column field=\"ORÃ JUN\" header=\"MÃªs\" />\r\n                <Column field=\"ORÃ 2021\" header=\"Acumulado\"  />\r\n                <Column field=\"REAL JUN\" header=\"MÃªs\"  />\r\n                <Column field=\"FORCAST\" header=\"FORCAST\"  />\r\n                <Column field=\"REAL 2021\" header=\"Acumulado\"  />\r\n                <Column field=\"DESVIO MÃS\" header=\"MÃªs\"  />\r\n                <Column field=\"DESVIO 2021\" header=\"Acumulado\"  />\r\n            </DataTable>\r\n        </div>\r\n        </div>\r\n        );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRacCorposEstranhos = () => {\r\n\r\n        if (!TableRacCorposEstranhos) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhos.length; i++) {\r\n            json.push(TableRacCorposEstranhos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosInerentes = () => {\r\n\r\n        if (!TableRacCorposEstranhosInerentes) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosInerentesNaoInerentes = () => {\r\n\r\n        if (!TableRacCorposEstranhosInerentesNaoInerentes) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosInerentesNaoInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosInerentesNaoInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosInerentesNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosInerentesNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCorposEstranhosNaoInerentes = () => {\r\n\r\n        if (!TableRacCorposEstranhosNaoInerentes) return;\r\n\r\n        //\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCorposEstranhosNaoInerentes.length; i++) {\r\n            json.push(TableRacCorposEstranhosNaoInerentes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCorposEstranhosNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCorposEstranhosNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesPDV = () => {\r\n\r\n        if (!TableRacRACDetalhesPDV) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesPDV.length; i++) {\r\n            json.push(TableRacRACDetalhesPDV[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesPDV[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesPDV\">\r\n                        <Column field=\"CAMPO1\" header=\"Abertura PDV\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRACD3INNATURA = () => {\r\n\r\n        if (!TableRacRACD3InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD3InNatura.length; i++) {\r\n            json.push(TableRacRACD3InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD3InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD3InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-3 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD0INNATURA = () => {\r\n\r\n        if (!TableRacRACD0InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD0InNatura.length; i++) {\r\n            json.push(TableRacRACD0InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD0InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD0InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-0 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD3Preparados = () => {\r\n\r\n        if (!TableRacRACD3Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD3Preparados.length; i++) {\r\n            json.push(TableRacRACD3Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD3Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD3Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-3 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRACD0Preparados = () => {\r\n\r\n        if (!TableRacRACD0Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACD0Preparados.length; i++) {\r\n            json.push(TableRacRACD0Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACD0Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACD0Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"RAC D-0 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCLogD3 = () => {\r\n\r\n        if (!TableNNCLogD3) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCLogD3.length; i++) {\r\n            json.push(TableNNCLogD3[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCLogD3[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCLogD3\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC Log D-3\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCLogD0 = () => {\r\n\r\n        if (!TableNNCLogD0) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCLogD0.length; i++) {\r\n            json.push(TableNNCLogD0[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCLogD0[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCLogD0\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC Log D-0\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº RAC\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    /////\r\n\r\n    const DataTableNNCMPD3INNATURA = () => {\r\n\r\n        if (!TableNNCMPD3InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD3InNatura.length; i++) {\r\n            json.push(TableNNCMPD3InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD3InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD3InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-3 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD0INNATURA = () => {\r\n\r\n        if (!TableNNCMPD0InNatura) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD0InNatura.length; i++) {\r\n            json.push(TableNNCMPD0InNatura[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD0InNatura[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD0InNatura\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-0 - In-Natura\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD3Preparados = () => {\r\n\r\n        if (!TableNNCMPD3Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD3Preparados.length; i++) {\r\n            json.push(TableNNCMPD3Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD3Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD3Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-3 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCMPD0Preparados = () => {\r\n\r\n        if (!TableNNCMPD0Preparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCMPD0Preparados.length; i++) {\r\n            json.push(TableNNCMPD0Preparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCMPD0Preparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCMPD0Preparados\">\r\n                        <Column field=\"CAMPO1\" header=\"NNC MP D-0 - Preparados\" headerStyle={{ width: '70%' }}></Column>\r\n                        <Column field=\"NUM\" header=\"NÂº NNC MP\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    ////\r\n\r\n    \r\n    const DataTableNNCEvolucaoMes = () => {\r\n\r\n        if (!TableNNCEvolucaoMes) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCEvolucaoMes.length; i++) {\r\n            json.push(TableNNCEvolucaoMes[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCEvolucaoMes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCEvolucaoMes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCEvolucaoMesTotais = () => {\r\n\r\n        if (!TableNNCEvolucaoMesTotais) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCEvolucaoMesTotais.length; i++) {\r\n            json.push(TableNNCEvolucaoMesTotais[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCEvolucaoMesTotais[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCEvolucaoMesTotais\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesCritica = () => {\r\n\r\n        if (!TableRacRACDetalhesCritica) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesCritica.length; i++) {\r\n            json.push(TableRacRACDetalhesCritica[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesCritica[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesCritica\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoTotal = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoTotal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoTotal.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoTotal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoTotal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoTotal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const DataTableRacLarva = () => {\r\n\r\n        if (!TableRacLarva) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacLarva.length; i++) {\r\n            json.push(TableRacLarva[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacLarva[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacLarva\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacIntoxicacao = () => {\r\n\r\n        if (!TableRacIntoxicacao) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacIntoxicacao.length; i++) {\r\n            json.push(TableRacIntoxicacao[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacIntoxicacao[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacIntoxicacao\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacMetal = () => {\r\n\r\n        if (!TableRacMetal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacMetal.length; i++) {\r\n            json.push(TableRacMetal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacMetal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacMetal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEPlastico = () => {\r\n\r\n        if (!TableNNCCEPlastico) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEPlastico.length; i++) {\r\n            json.push(TableNNCCEPlastico[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEPlastico[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEPlastico\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEMetal = () => {\r\n\r\n        if (!TableNNCCEMetal) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEMetal.length; i++) {\r\n            json.push(TableNNCCEMetal[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEMetal[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEMetal\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEOssos = () => {\r\n\r\n        if (!TableNNCCEOssos) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEOssos.length; i++) {\r\n            json.push(TableNNCCEOssos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCEOssos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEOssos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCE = () => {\r\n\r\n        if (!TableNNCCE) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCE.length; i++) {\r\n            json.push(TableNNCCE[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableNNCCE[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCE\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableHabilitadorCorposEstranhosNaoInerentes = () => {\r\n\r\n        if (!TableHabilitadorCorposEstranhosNaoInerentes) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableHabilitadorCorposEstranhosNaoInerentes.length; i++) {\r\n            json.push(TableHabilitadorCorposEstranhosNaoInerentes[i])\r\n        }\r\n        \r\n        \r\n\r\n        var retorno = percorrerJsonHabilitador(TableHabilitadorCorposEstranhosNaoInerentes[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableHabilitadorCorposEstranhosNaoInerentes\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableNNCCEInerenteNaoInerente = () => {\r\n\r\n        if (!TableNNCCEInerenteNaoInerente) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableNNCCEInerenteNaoInerente.length; i++) {\r\n            json.push(TableNNCCEInerenteNaoInerente[i])\r\n        }\r\n\r\n        \r\n\r\n        var retorno = percorrerJson(TableNNCCEInerenteNaoInerente[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableNNCCEInerenteNaoInerente\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacPlastico = () => {\r\n\r\n        if (!TableRacPlastico) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacPlastico.length; i++) {\r\n            json.push(TableRacPlastico[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacPlastico[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacPlastico\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacCabelo = () => {\r\n\r\n        if (!TableRacCabelo) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacCabelo.length; i++) {\r\n            json.push(TableRacCabelo[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacCabelo[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacCabelo\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacInseto = () => {\r\n\r\n        if (!TableRacInseto) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacInseto.length; i++) {\r\n            json.push(TableRacInseto[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacInseto[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacInseto\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoAves = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoAves) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoAves.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoAves[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoAves[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoAves\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoPreparados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoPreparados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoPreparados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoPreparados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoPreparados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoPreparados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoFatiados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoFatiados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoFatiados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoFatiados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoFatiados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoFatiados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoPescados = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoPescados) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoPescados.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoPescados[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoPescados[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoPescados\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    const DataTableRacRACDetalhesEvolucaoSuinos = () => {\r\n\r\n        if (!TableRacRACDetalhesEvolucaoSuinos) return;\r\n\r\n\r\n        let json = []\r\n\r\n        for (let i = 0; i < TableRacRACDetalhesEvolucaoSuinos.length; i++) {\r\n            json.push(TableRacRACDetalhesEvolucaoSuinos[i])\r\n        }\r\n\r\n        var retorno = percorrerJson(TableRacRACDetalhesEvolucaoSuinos[0])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable clTableRacRACDetalhesEvolucaoSuinos\">\r\n                        {retorno}\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    const buscarTabelaRACUnicoProblema = () => {\r\n        let parm = \" \";\r\n\r\n        api.getSearaBaseRacME(parm).then((response) => {\r\n            let json = JSON.parse(response.data)\r\n\r\n            return (\r\n                <div>\r\n                    <div className=\"card\">\r\n                        <DataTable value={json} sortMode=\"multiple\" className=\"p-datatable\">\r\n                            <Column field=\"Unidade\" header=\"Unidade\"></Column>\r\n                            <Column field=\"Tipo do Problema\" header=\"Tipo do Problema\"></Column>\r\n                            <Column field=\"Manifestante\" header=\"Manifestante\"></Column>\r\n                            <Column field=\"NÂº RAC\" header=\"NÂº RAC\"></Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n    var flagTable = false;\r\n\r\n    const buscarDadosTable = (parm) => {\r\n\r\n        if (!flagTable) {\r\n            api.getSearaBaseRacME(parm).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacME(json)\r\n            })\r\n\r\n            var whereFinalME = \" AND Mercado_rac = 'ME' \" +\r\n                \" AND [Origem] IN (  \" +\r\n                \"     'DocumentaÃ§Ã£o Unidade',   \" +\r\n                \"     'EXPEDIÃÃO FÃBRICA',  \" +\r\n                \"     'EXPEDIÃÃO FÃBRICA FFO', \" +\r\n                \"     'FÃBRICA PRODUÃÃO FFO', \" +\r\n                \"    'FABRICAÃÃO')  \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN (  \" +\r\n                \"     'CONTATO EXCELSIOR_RAC',   \" +\r\n                \"     'CONTATO JBS CARNES',   \" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \" +\r\n                \"     'NOTIFICAÃÃO',   \" +\r\n                \"    'RECLAMAÃÃO',   \" +\r\n                \"    'RECLAMAÃÃO ABUSO DE PRODUTO',  \" +\r\n                \"    'RECLAMAÃÃO ABUSO PROD.',   \" +\r\n                \"     'ReclamaÃ§Ã£o Contas Globais',  \" +\r\n                \"    'RECLAMAÃÃO FAB. NÃO IDENTIF.',  \" +\r\n                \"   'RECLAMAÃÃO HANS',   \" +\r\n                \"    'RECLAMAÃÃO VOSSKO', \" +\r\n                \"   'RECLAMAÃÃO FFO', \" +\r\n                \"    'REINCIDÃNCIA') \"\r\n\r\n            api.getSearaBaseRacFinal([whereFinalME]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalME(json)\r\n            })\r\n\r\n            var whereFinalMI = \" AND Mercado_rac IN ('MI','INTERNO') \" +\r\n                \" AND [Origem] IN (  \" +\r\n                \"     'DocumentaÃ§Ã£o Unidade',   \" +\r\n                \"     'EXPEDIÃÃO FÃBRICA',  \" +\r\n                \"     'EXPEDIÃÃO FÃBRICA FFO', \" +\r\n                \"     'FÃBRICA PRODUÃÃO FFO', \" +\r\n                \"    'FABRICAÃÃO')  \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN (  \" +\r\n                \"     'CONTATO EXCELSIOR_RAC',   \" +\r\n                \"     'CONTATO JBS CARNES',   \" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \" +\r\n                \"     'NOTIFICAÃÃO',   \" +\r\n                \"    'RECLAMAÃÃO',   \" +\r\n                \"    'RECLAMAÃÃO ABUSO DE PRODUTO',  \" +\r\n                \"    'RECLAMAÃÃO ABUSO PROD.',   \" +\r\n                \"     'ReclamaÃ§Ã£o Contas Globais',  \" +\r\n                \"    'RECLAMAÃÃO FAB. NÃO IDENTIF.',  \" +\r\n                \"   'RECLAMAÃÃO HANS',   \" +\r\n                \"    'RECLAMAÃÃO VOSSKO', \" +\r\n                \"   'RECLAMAÃÃO FFO', \" +\r\n                \"    'REINCIDÃNCIA') \"\r\n\r\n            api.getSearaBaseRacFinal([whereFinalMI]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalMI(json)\r\n            })\r\n\r\n            var whereFinalRECL = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" AND [Origem] IN ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'DocumentaÃ§Ã£o Unidade',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'EXPEDIÃÃO FÃBRICA', \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'EXPEDIÃÃO FÃBRICA FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'FÃBRICA PRODUÃÃO FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'FABRICAÃÃO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" AND  [Tipo_Atendimento_rac] IN ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO EXCELSIOR_RAC',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO JBS CARNES',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'CONTATO MERCADO DA CARNE',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'NOTIFICAÃÃO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO ABUSO DE PRODUTO',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO ABUSO PROD.',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'ReclamaÃ§Ã£o Contas Globais',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO FAB. NÃO IDENTIF.',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO HANS',  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \"     'RECLAMAÃÃO VOSSKO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'RECLAMAÃÃO FFO',\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" \t'REINCIDÃNCIA') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" +\r\n                \" and [Nm_Marca_rac] IN ('SEARA GOURMET', 'SEARA NATURE', 'SEARA INCRIVEL', 'SEARA ROTISSERIE') \t\t\"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalRECL]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalRECL(json)\r\n            })\r\n\r\n            var whereFinalPDV = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\t\" +\r\n                \" AND [Origem] IN ( \t\t\" +\r\n                \"     'ABUSO DE PRODUTO PDV') \t\"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalPDV]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalPDV(json)\r\n            })\r\n\r\n            var whereFinalTE = \" AND Mercado_rac IN ('MI', 'INTERNO') \t\t\" +\r\n                \" AND [Origem] IN ( \t\" +\r\n                \"     'PRODUÃÃO EM TERCEIRO') \"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalTE]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalTE(json)\r\n            })\r\n\r\n            var whereFinalCRIT = \" AND Mercado_rac IN ('MI', 'INTERNO') \" +\r\n                \" AND  [Tipo_Atendimento_rac] IN ( 'CRÃTICA' ) \"\r\n\r\n\r\n            api.getSearaBaseRacFinal([whereFinalCRIT]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacFinalCRIT(json)\r\n            })\r\n\r\n            var whereAberturaME = \"  \" +\r\n                \" AND [Tipo_Atendimento_rac] in ( \" +\r\n                \" 'RECLAMAÃÃO', \" +\r\n                \" 'RECLAMAÃÃO ABUSO PROD.', \" +\r\n                \" 'RECLAMAÃÃO FAB. NÃO IDENTIF.', \" +\r\n                \" 'RECLAMAÃÃO HANS', \" +\r\n                \" 'CONTATO EXCELSIOR_RAC', \" +\r\n                \" 'CONTATO MERCADO DA CARNE', \" +\r\n                \" 'CONTATO JBS CARNES', \" +\r\n                \" 'NOTIFICAÃÃO', \" +\r\n                \" 'ReincidÃªncia', \" +\r\n                \" 'RECLAMAÃÃO FFO', \" +\r\n                \" 'RECLAMAÃÃO ABUSO DE PRODUTO', \" +\r\n                \" 'RECLAMAÃÃO VOSSKO', \" +\r\n                \" 'ReclamaÃ§Ã£o Contas Globais' \" +\r\n                \" ) \"\r\n\r\n            api.getSearaBaseRacAberturaME([whereAberturaME + \" and data_rac = (select data from v_maiorData) \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaME(json)\r\n                setTimeout(arrumaTabela3niveis('clAberturaME'), 20000)\r\n            })\r\n\r\n\r\n\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac = 'YARA' AND Unidade NOT IN ('ServiÃ§os') \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEOrienteMedio(json)\r\n                setTimeout(arrumaTabela3niveis('clOrienteMedio'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \"  AND Especialista_rac IN ('Igor', 'Rejane') AND Unidade NOT IN ('ServiÃ§os')   \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEEuropa(json)\r\n                setTimeout(arrumaTabela3niveis('clEuropa'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Marcela') AND Unidade NOT IN ('ServiÃ§os')  \"]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEJapao(json)\r\n                setTimeout(arrumaTabela3niveis('clJapao'), 20000)\r\n                          \r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Amanda') AND Unidade NOT IN ('ServiÃ§os')  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEAsia(json)\r\n                setTimeout(arrumaTabela3niveis('clAsia'), 20000)\r\n            })\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('Regina') AND Unidade NOT IN ('ServiÃ§os')  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEAmericasAfrica(json)\r\n                setTimeout(arrumaTabela3niveis('clAmericasAfrica'), 20000)\r\n            })\r\n\r\n            \r\n            var sqlTableRacRACDetalhesTerceiro = \"\"\r\n            + \" SELECT\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" *\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" INTO #RESULTADO \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" FROM [v_base_rac]\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" WHERE 1=1\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND [Origem_do_Problema_rac] IN ('ProduÃ§Ã£o em Terceiro')\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND  [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRÃTICA','REINCIDÃNCIA','NEGOCIAÃÃO COMERCIAL','RECOLHIMENTO','OBRIGAÃÃO','RECOLHIMENTO VOLUNTÃRIO','RAC COMPLEMENTAR','CONCESSÃO','RAC CAIXA','ELOGIO')\t\"\t\t \r\n            + \" AND Filial_rac NOT IN ('FORNECEDOR - IND COM MASSAS ALI MASSATAK TANAK LT EPP')\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND UNIDADE NOT IN ('VIGOR','DAN VIGOR','AVANTI')\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" AND Tipo_rac = 'Real'\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" SELECT\t\t\"\r\n            + \" GROUPING(Unidade) grupo,\t\"\r\n            + \" isnull(Unidade, 'Total') as Unidade\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" , SUM(Quant_rac) RAC\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" INTO #UNIDADE\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" FROM #RESULTADO\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" GROUP BY Unidade\t\t\"\r\n            + \" WITH ROLLUP\t\"\r\n            + \" SELECT * FROM #UNIDADE order by 1 asc, 3 desc\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" DROP TABLE #UNIDADE\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n            + \" DROP TABLE #RESULTADO\t\t\"\t\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesTerceiro ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['grupo'];\r\n                }\r\n\r\n                setTableRacRACDetalhesTerceiro(json)\r\n                setTimeout(arrumaTabela1nivel('clAberturaTerceiro'), 20000)\r\n            })\r\n\r\n            var sqlTableRacRACDetalhesPDV = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" Nm_Classe_rac CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , Tipo_Problema_rac CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , NULL CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , count(Rac_rac) as NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #RESULTADO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData)) AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] IN ('ABUSO DE PRODUTO PDV')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR')\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Nm_Classe_rac, Tipo_Problema_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\t\t\t\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #R3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2, CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUPING(B.CAMPO1) C1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , GROUPING(B.CAMPO2) C2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , GROUPING(B.CAMPO3) C3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO1 AS VARCHAR) AS CAMPO1_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO2 AS VARCHAR) AS CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CAST(B.CAMPO3 AS VARCHAR) AS CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , SUM(NUM) NUM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #RESULTADO B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY CAMPO1, CAMPO2, CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WITH ROLLUP\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT DISTINCT B.*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R1.NUM AS NUM1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R2.NUM AS NUM2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , R3.NUM AS NUM3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" , CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \tWHEN B.CAMPO3 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\tWHEN B.CAMPO2 IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"                 CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\tWHEN B.CAMPO1_ IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t'<b>Total</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\tELSE '<b>'+B.CAMPO1_+'</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\tELSE '@@.....'+B.CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \tELSE '..........'+B.CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     END CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM #BASE B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R1 R1 ON B.CAMPO1_ = R1.CAMPO1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R2 R2 ON B.CAMPO1_ = R2.CAMPO1 AND B.CAMPO2 = R2.CAMPO2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" LEFT JOIN #R3 R3 ON B.CAMPO1_ = R3.CAMPO1 AND B.CAMPO2 = R3.CAMPO2 AND B.CAMPO3 = R3.CAMPO3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE B.C3 = 1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #R3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesPDV ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)                \r\n                setTableRacRACDetalhesPDV(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesPDV'), 20000)\r\n\r\n            })\r\n\r\n\r\n            \r\n            \r\n            var sqlTableRacRACDetalhesCritica = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÃSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÃTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Unidade\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" 'Total' as [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÃSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÃTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Unidade\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÃSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÃTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME','LOGÃSTICA MI','SERVICO') \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR')  \t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] IN ('CRÃTICA')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr ='SELECT pt.[Unidade],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , T.Quant_rac as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT [Unidade], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND [Origem_do_Problema_rac] NOT IN (''ABUSO DE PRODUTO HOME'',''LOGÃSTICA MI'',''SERVICO'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') \t\t' +\t\t\t\"\r\n            + \" \t\t' AND [TIPO_ATENDIMENTO_RAC] IN (''CRÃTICA'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [Unidade], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' INNER JOIN #TOTAL T ON T.UNIDADE = PT.UNIDADE ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' SELECT pt.[Unidade],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT ''Total'' as [Unidade], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND [Origem_do_Problema_rac] NOT IN (''ABUSO DE PRODUTO HOME'',''LOGÃSTICA MI'',''SERVICO'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') \t\t' +\t\t\t\"\r\n            + \" \t\t' AND [TIPO_ATENDIMENTO_RAC] IN (''CRÃTICA'')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' ORDER BY  ' + CAST(@LINHAS + 3 AS VARCHAR) + ' ASC, ' + CAST(@LINHAS + 2 AS VARCHAR) + ' DESC ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesCritica ]).then((response) => {\r\n                //\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesCritica(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesCritica'), 20000)\r\n         \r\n            })\r\n\r\n            var sqlTableRacRACDetalhesEvolucaoTotal = \"\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" Origem Origem,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','ServiÃ§os', 'Shipping', 'ITAJAÃ ÃLEO COMESTÃVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME') \"\r\n            + \" AND Tipo_rac = 'Real' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Origem\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" 'Total' as Origem,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','ServiÃ§os', 'Shipping', 'ITAJAÃ ÃLEO COMESTÃVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY Origem\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','ServiÃ§os', 'Shipping', 'ITAJAÃ ÃLEO COMESTÃVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHERE 1=1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','MASSATAKE','MARBA','NORONHA','VIGOR','AVANTI','Santa Cruz do Sul','ServiÃ§os', 'Shipping', 'ITAJAÃ ÃLEO COMESTÃVEIS')             \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO')            \"\r\n            + \" AND Origem_do_Problema_rac NOT IN ('Abuso de Produto HOME')  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"     @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" SET @SQLStr ='SELECT pt.[Origem],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , T.Quant_rac as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT Origem Origem, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') AND [TIPO_ATENDIMENTO_RAC] NOT IN (''ALERTA'',''CONCESSÃO'', ''CRITICA'',''CRÃTICA'',''ELOGIO'',''NEGOCIAÃÃO COMERCIAL'',''OBRIGAÃÃO'',''RAC CAIXA'',''RAC COMPLEMENTAR'',''RECOLHIMENTO'',''RECOLHIMENTO VOLUNTÃRIO'',''NOTIFICAÃÃO'') AND Origem_do_Problema_rac NOT IN (''Abuso de Produto HOME'')\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY Origem, [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' INNER JOIN #TOTAL T ON T.origem = PT.origem ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' SELECT pt.[Origem],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' , (SELECT SUM(Quant_rac) from #TOTALF) as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + ' FROM (SELECT ''Total'' as Origem, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t' WHERE 1=1 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' AND month(Data_rac) = month((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND year(Data_rac) = year((select * from v_maiorData))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t'  AND UNIDADE NOT IN (''DAN VIGOR'',''MASSATAKE'',''MARBA'',''NORONHA'',''VIGOR'') AND [TIPO_ATENDIMENTO_RAC] NOT IN (''ALERTA'',''CONCESSÃO'', ''CRITICA'',''CRÃTICA'',''ELOGIO'',''NEGOCIAÃÃO COMERCIAL'',''OBRIGAÃÃO'',''RAC CAIXA'',''RAC COMPLEMENTAR'',''RECOLHIMENTO'',''RECOLHIMENTO VOLUNTÃRIO'',''NOTIFICAÃÃO'') AND Origem_do_Problema_rac NOT IN (''Abuso de Produto HOME'')\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t' AND Tipo_rac = ''Real'' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t' +\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \"         ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" ' ORDER BY  ' + CAST(@LINHAS + 3 AS VARCHAR) + ' ASC, ' + CAST(@LINHAS + 2 AS VARCHAR) + ' DESC ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n            + \" DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n\r\n\r\n            api.getSearaBaseSQLNINJA([ sqlTableRacRACDetalhesEvolucaoTotal ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoTotal(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoTotal'), 20000)\r\n\r\n                \r\n            })\r\n\r\n\t\t\t\r\n            \r\n\r\n            var wherePivotdataTableRacLarva = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Grupo_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND [Regional Qual] NOT IN ('FATIADOS','PESCADOS','AVES PR','AVES RS/SC/SP','AVES SP/CO/NE') \"\r\n            + \"AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÃFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÃNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO â CD','SALVADOR â CD','SAO PAULO â CD','SEARA MEATS','SOMAVE','VARZEA GRANDE â CD') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO') \"\r\n            + \"AND [PROBLEMA] IN ('INSETO','INSETO VIVO') \"\r\n            + \"AND [Tipo_Problema] IN ('INSETO','LARVA', 'INSETO VIVO','LARVA VIVA')\t \"\r\n            + \"AND [SUB TIPO PROBLEMA] IN ('LARVA','LARVA VIVA') \"\r\n            + \" AND ([Origem] IN ('FABRICAÃÃO')) \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacLarva, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacLarva(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacLarva'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacIntoxicacao = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n\r\n            + \"AND [REGIONAL QUAL] IN ('PREPARADOS 1','PREPARADOS 2','QUALIDADE','REGULATÃRIO','SUÃNOS','OUTROS','MARKETING E P&D','ITAJAÃ','EXCELSIOR','AVES LEVES') \"\r\n            + \"AND UNIDADE NOT IN ('JBS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO','NOTIFICAÃÃO') \"\r\n            + \"AND [PROBLEMA] IN ('INTOXICAÃÃO ALIMENTAR') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacIntoxicacao, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacIntoxicacao(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacIntoxicacao'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacInseto = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n\r\n            + \"AND [ORIGEM] IN ('FABRICAÃÃO') \"\r\n            + \"AND [GRUPO_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') \"\r\n            + \"AND Tipo_Problema IN ('INSETO') \"\r\n            + \"AND [SUB TIPO PROBLEMA] NOT IN ('LARVA') \"\r\n            + \" AND ([Origem] IN ('FABRICAÃÃO')) \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacInseto, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacInseto(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacInseto'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacCabelo = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Origem_do_problema_rac] IN ('FÃBRICA PRODUÃÃO') \"\r\n            + \"AND [GRUPO_rac] IN ('CORPO ESTRANHO') \"\r\n            + \"AND UNIDADE NOT IN ('AMAI','DAN VIGOR','MARBA','GRANO','GRIFFOOD','JBS','MASSATAKE','SANTA CRIZ DO SUL','SERYA','VIGOR','ITAJAI AVES PESADAS') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n            + \"AND Tipo_Problema IN ('FIO DE CABELO / PÃLO HUMANO','FIO DE CABELO/PÃLO HUMANO', 'PÃLO/ CABELO') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacCabelo, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacCabelo(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacCabelo'), 20000)\r\n            })\r\n\r\n            \r\n            var wherePivotdataTableRacPlastico = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \" AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') \"\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA', 'CRITICA','CRÃTICA','NEGOCIAÃÃO COMERCIAL','RAC COMPLEMENTAR') \"\r\n            + \" AND [Tipo_Problema_rac] IN ('LUVA','LUVA NITRÃLICA','PLÃSTICO','PLÃSTICO DURO','PLÃSTICO MOLE') \"\r\n            + \" AND ([Origem] IN ('FABRICAÃÃO')) \"\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacPlastico, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacPlastico(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacPlastico'), 20000)\r\n            })\r\n\r\n            \r\n            var wherePivotdataTableNNCEvolucaoMes = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" and Tipo = 'REAL' \"\r\n            + \" and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \" and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \" \r\n            + \" and [Regional (Qualidade)] not in ('LogÃ­stica','Outros','Terceiro') and ([Ãrea ResponsÃ¡vel] not in ('RASTREABILIDADE HUB') OR [Ãrea ResponsÃ¡vel] IS NULL)\"\r\n \r\n            api.getSearaBaseNNCLog1nivelPIVOTDIA([ wherePivotdataTableNNCEvolucaoMes, \"Fornecedor as Coluna1, NULL as Coluna2, null as Coluna3\", \"Fornecedor\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCEvolucaoMes(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCEvolucaoMes'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableNNCEvolucaoMesTotais = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND [Origem_do_problema_rac] IN ('FÃBRICA PRODUÃÃO') \"\r\n            + \"AND UNIDADE NOT IN ('MARBA','SANTA CRUZ DO SUL') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n            + \"AND Tipo_Problema IN ('LUVA','LUVA NITRÃLICA','PLÃSTICO','PLÃSTICO DURO','PLÃSTICO MOLE') \"\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataTableNNCEvolucaoMesTotais, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCEvolucaoMesTotais(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCEvolucaoMesTotais'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCEPlastico = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] in ('Borracha','Luva Latex','Luva Nitrilica','PlÃ¡stico duro','PlÃ¡stico mole - ResÃ­duo') \"\r\n         \r\n\r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEPlastico, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \" , \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEPlastico(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEPlastico'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCEMetal = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' and ( [Grupo Problema.] = 'Corpo Estranho_ Metalico' or [Tipo Problema] in ('Luva anti corte') ) \"\r\n\r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEMetal, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEMetal(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEMetal'), 20000)\r\n            })\r\n\r\n\r\n            var whereTableNNCCEOssos = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" AND [Grupo Problema] = 'Corpo Estranho' and [Reg. Qual] NOT IN ('ItajaÃ­','Outros') and [Entra para a Meta] = 'Sim' AND [Tipo Problema] = 'Ossos'  \"\r\n\r\n            \r\n            api.getSearaBaseNNC1nivelPIVOTDIA([ whereTableNNCCEOssos, \" Filial  as Coluna1, null as Coluna2, null as Coluna3 \", \"Filial\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {    \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEOssos(json)\r\n                setTimeout(arrumaTabela1nivel('clTableNNCCEOssos'), 20000)\r\n            })\r\n\r\n            var whereTableNNCCE = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \"and [Grupo Problema] in ('Corpo Estranho') and [Reg. Qual] NOT IN ('OUTROS', 'ITAJAÃ') and [Entra para a Meta] = 'Sim' \"\r\n\r\n            api.getSearaBaseNNC2niveisPIVOTDIA([ whereTableNNCCE, \"[Reg. Prod.] as Coluna1, fornecedor as Coluna2, null as Coluna3\", \"[Reg. Prod.], fornecedor\", \" [MES-DIA] \", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCE(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCCE'), 20000)\r\n            })\r\n\r\n\r\n            var whereTableHabilitadorCorposEstranhosNaoInerentes = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and ANO = (select year(data) as data from v_maiorData) \"\r\n            \r\n           \r\n\r\n            api.getSearaBaseCE2niveisPIVOTmesDesvio([ whereTableHabilitadorCorposEstranhosNaoInerentes, \"[NegÃ³cio] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[NegÃ³cio], Unidade\", \" '|' + MES + '|' \", \"Mes\" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableHabilitadorCorposEstranhosNaoInerentes(json)\r\n                setTimeout(arrumaTabela2niveis('clTableHabilitadorCorposEstranhosNaoInerentes'), 20000)\r\n            })\r\n\r\n\r\n            var whereTableNNCCEInerenteNaoInerente = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" and year([Dt Abertura]) = (select year(data) as data from v_maiorData) \"\r\n            + \" and month([Dt Abertura]) = (select month(data) as data from v_maiorData) \"\r\n            + \" and [Grupo Problema] in ('Corpo Estranho') and [Reg. Qual] NOT IN ('OUTROS', 'ITAJAÃ') and [Entra para a Meta] = 'Sim' \"\r\n\r\n            api.getSearaBaseNNC2niveisPIVOTDIA([ whereTableNNCCEInerenteNaoInerente, \"[Reg. Prod.]  as Coluna1, Fornecedor as Coluna2, null as Coluna3 \", \"[Reg. Prod.], Fornecedor\", \" [TIPO CE] \", \" [TIPO CE] \"]).then((response) => {\r\n                \r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableNNCCEInerenteNaoInerente(json)\r\n                setTimeout(arrumaTabela2niveis('clTableNNCCEInerenteNaoInerente'), 20000)\r\n            })\r\n\r\n            var wherePivotdataTableRacMetal = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            \r\n            + \"AND UNIDADE NOT IN ('AGRO ALFA','AMAI','ATI-GEL','CLAREBOUT','GRANO','GRIFFOOD','MASSATAKE','SANTA CRUZ DO SUL','VIGOR','ARTES GRÃFICAS','CAMPINAS-CD','CAMPO VERDE','CD RIBEIRÃO DAS NEVES','CPO','DOC INDUSTRIA','EIRELI EPP','EIRELI ME','EXCELSIOR','GENESEAS AQUACULTURA','GERÃNCIA NACIONA FS','GRANO ALIMENTOS S.A.','GRIFFOOD','ICOFORT','ITAJAI','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','ITAJAI PESCADOS','LABREZZA','M P FOODS','MARBA','MASSAS SANTA ENERSTINA LTDA','NORONHA', 'OUTROS','PINHAIS - CD','QUALIDADE SUPPLY CHAIN','RIBEIRÃO PRETO â CD','SALVADOR â CD','SAO PAULO â CD','SEARA MEATS','SOMAVE','VARZEA GRANDE â CD') \"\r\n            + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n            + \"AND [PROBLEMA] IN ('METAL','METÃLICO') \"\r\n\r\n\r\n            api.getSearaBaseRAC1niveisPIVOTDIA([ wherePivotdataTableRacMetal, \" Unidade as Coluna1, null as Coluna2, null as Coluna3\", \"Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacMetal(json)\r\n                setTimeout(arrumaTabela1nivel('clTableRacMetal'), 20000)\r\n            })\r\n\r\n            var wherePivotdataEvolucaoAves = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%AVES%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','DocumentaÃ§Ã£o Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoAves, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoAves(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoAves'), 20000)\r\n            })\r\n\r\n            var wherePivotdataEvolucaoPreparados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real' \"\r\n            \r\n            + \"AND Origem IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"\r\n            + \"AND (([Regional Qual] LIKE '%Prepar%' or [Regional Qual] IN ('Outros', 'ItajaÃ­')) AND ([Regional Prod] IN ('Outros','Preparados', 'Fatiados') ) OR UNIDADE = 'ITAJAI INDUSTRIALIZADOS') \"\r\n            + \"AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) \"\r\n\r\n\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoPreparados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoPreparados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoPreparados'), 20000)\r\n            })\r\n                \r\n                \r\n            \r\n\r\n\r\n            var wherePivotdataEvolucaoFatiados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Fatiados%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','DocumentaÃ§Ã£o Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoFatiados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoFatiados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoFatiados'), 20000)\r\n            })\r\n\r\n\r\n\r\n\r\n            var wherePivotdataEvolucaoPescados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Pescado%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            \r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoPescados, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoPescados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoPescados'), 20000)\r\n            })\r\n\r\n\r\n            var wherePivotdataEvolucaoSuinos = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n            + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n            + \"AND Tipo_rac = 'Real'\tAND  [Regional Qual] LIKE '%Su%no%'  \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','DocumentaÃ§Ã£o Unidade') ) \"\r\n\r\n\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ wherePivotdataEvolucaoSuinos, \"[Regional Qual] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[Regional Qual], Unidade\", \" [MES-DIA] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n                \r\n                setTableRacRACDetalhesEvolucaoSuinos(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesEvolucaoSuinos'), 20000)\r\n            })\r\n\r\n\r\n            api.getSearaBaseRacAberturaME2([whereAberturaME + \" AND Especialista_rac IN ('JÃ©ssica') AND Unidade NOT IN ('ServiÃ§os') \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaMEContasGlobais(json)\r\n                setTimeout(arrumaTabela3niveis('clContasGlobais'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialFamilia = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND Nm_Marca_rac in ('SEARA GOURMET','SEARA INCRIVEL','SEARA NATURE','SEARA ROTISSERIE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \"  and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS','AVANTI','ServiÃ§os','Shipping') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n            api.getSearaBaseRAC2niveis([whereTableRACAberturaLinhaEspecialFamilia,\" Nm_Marca_rac CAMPO1, Nm_Classe_rac CAMPO2, NULL CAMPO3 \",\" Nm_Marca_rac, Nm_Classe_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialFamilia(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRACAberturaLinhaEspecialFamilia'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealAves = \"\"\r\n            + \" AND Origem IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"\r\n            + \" AND ([Regional Qual] LIKE '%AVES%' or [Regional Qual] IN ('Outros','ItajaÃ­')) AND ([Regional Prod] LIKE '%AVES%' or [Regional Prod] IN ('ItajaÃ­ - Aves')) \"\r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealAves,\" [NegÃ³cio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [NegÃ³cio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealAves(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealAves'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealPreparados = \"\"\r\n            + \" AND Origem IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"\r\n            \r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" AND (([Regional Qual] LIKE '%Prepar%' or [Regional Qual] IN ('Outros', 'ItajaÃ­')) AND ([Regional Prod] IN ('Outros','Preparados', 'Fatiados') ) OR UNIDADE = 'ITAJAI INDUSTRIALIZADOS') \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealPreparados,\" [NegÃ³cio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [NegÃ³cio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealPreparados(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealPreparados'), 20000)\r\n            })\r\n\r\n            var whereTableRacRACDetalhesMetaRealSuinos = \"\"\r\n            + \" AND Origem IN ('DocumentaÃ§Ã£o Unidade','EXPEDIÃÃO FÃBRICA','EXPEDIÃÃO FÃBRICA FFO','FÃBRICA PRODUÃÃO FFO','FABRICAÃÃO') \"\r\n            \r\n            + \" AND (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" AND (([Regional Qual] LIKE '%Su%no%' or [Regional Qual] IN ('Outros')) AND ([Regional Prod] LIKE '%Su%no%' ) OR UNIDADE = 'ITAJAI SUINOS') \"\r\n\r\n            api.getSearaBaseRAC3niveisDesvio([whereTableRacRACDetalhesMetaRealSuinos,\" [NegÃ³cio Qualidade] CAMPO1, [Unidade] CAMPO2, null CAMPO3 \",\" [NegÃ³cio Qualidade], [Unidade] \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['CAMPO1_'];\r\n                    delete json[i]['CAMPO2_'];\r\n                    delete json[i]['CAMPO3_'];\r\n                    delete json[i]['NUM'];\r\n                    delete json[i]['CAMPO1_2'];\r\n                    delete json[i]['CAMPO2'];\r\n                    delete json[i]['CAMPO3'];\r\n                }\r\n\r\n                setTableRacRACDetalhesMetaRealSuinos(json)\r\n                setTimeout(arrumaTabela2niveis('clTableRacRACDetalhesMetaRealSuinos'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoGourmet = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA GOURMET') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoGourmet,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoGourmet(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoGourmet'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoIncrivel = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA INCRIVEL') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoIncrivel,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoIncrivel(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoIncrivel'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoNature = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA NATURE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoNature,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoNature(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoNature'), 20000)\r\n            })\r\n\r\n            var whereTableRACAberturaLinhaEspecialAcumuladoRotisserie = \"\"\r\n            + \" WHERE 1=1\tAND month(Data_rac) = month((select * from v_maiorData)) \"\r\n            + \" AND year(Data_rac) = year((select * from v_maiorData)) \"\r\n            + \" AND [Origem_do_Problema_rac] NOT IN ('ABUSO DE PRODUTO HOME', 'Marketing') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND UNIDADE NOT IN ('DAN VIGOR','EIRELI ME','GERÃNCIA NACIONAL FS','ITAJAÃ','ITAJAI ÃLEO COMESTÃVEIS','MARBA','MASSATAKE','MARBA','SANTA CRUZ DO SUL','VIGOR') \"\t\r\n            + \" AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CRÃTICA') \"\r\n            + \" AND Nm_Marca_rac in ('SEARA ROTISSERIE') \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real' \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRACAberturaLinhaEspecialAcumuladoRotisserie,\" Tipo_Problema_rac CAMPO1, Unidade CAMPO2, Nm_item_rac CAMPO3 \",\" Tipo_Problema_rac, Unidade, Nm_item_rac  \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacAberturaLinhaEspecialAcumuladoRotisserie(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRACAberturaLinhaEspecialAcumuladoRotisserie'), 20000)\r\n            })\r\n\r\n            //////\r\n            var whereTableRacRACD3InNatura = \"\"\r\n            + \" WHERE 1=1\tAND Data_rac =  \"  \r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end \" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'  \"\r\n            + \" AND ([Regional Qual] like '%Ave%' or [Regional Qual] like '%suÃ­n%') \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRacRACD3InNatura,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacRACD3InNatura(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRacRACD3InNatura'), 20000)\r\n            })\r\n\r\n             var whereTableRacRACD0InNatura = \"\"\r\n             + \" WHERE 1=1\tAND Data_rac =  \"   \t\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'   \"\r\n            + \" AND ([Regional Qual] like '%Ave%' or [Regional Qual] like '%suÃ­n%') \"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem NOT IN ('ABUSO DE PRODUTO HOME') OR Origem IS NULL) \"\r\n\r\n \r\n             api.getSearaBaseRAC3niveis([whereTableRacRACD0InNatura,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableRacRACD0InNatura(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableRacRACD0InNatura'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableRacRACD3Preparados = \"\"\r\n            + \" WHERE 1=1\tAND Data_rac =  \"  \r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\" \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n            + \" AND Tipo_rac = 'Real'   \"\r\n            + \" AND Negocio = 'preparados'\"\r\n            + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n\t\t\t+ \" OR Tipo_Atendimento_rac IS NULL) \"\r\n            + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n            + \" AND (Origem  IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','DocumentaÃ§Ã£o Unidade') ) \"\r\n\r\n            api.getSearaBaseRAC3niveis([whereTableRacRACD3Preparados,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableRacRACD3Preparados(json)\r\n                setTimeout(arrumaTabela3niveis('clTableRacRACD3Preparados'), 20000)\r\n            })\r\n\r\n             var whereTableRacRACD0Preparados = \"\"\r\n             + \" WHERE 1=1\tAND Data_rac = \"   \t\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n             + \" AND Tipo_rac = 'Real'   \"\r\n             + \" AND Negocio = 'preparados'\"\r\n             + \" and (Tipo_Atendimento_rac NOT IN ('ALERTA', 'ConcessÃ£o', 'CrÃ­tica','Elogio','NegociaÃ§Ã£o Comercial','ObrigaÃ§Ã£o', 'RAC CAIXA', 'RAC Complementar','Recolhimento','Recolhimento VoluntÃ¡rio') \"\r\n             + \" OR Tipo_Atendimento_rac IS NULL) \"\r\n             + \" and (Unidade NOT IN ('Fatiados','Dan Vigor','Marba','Massatake','Santa Cruz do Sul','Vigor','ITAJAI ÃLEO COMESTÃVEIS') OR Unidade IS NULL) \"\r\n             + \" AND (Origem  IN ('EXPEDIÃÃO FÃBRICA','FABRICAÃÃO','DocumentaÃ§Ã£o Unidade') ) \"\r\n \r\n \r\n             api.getSearaBaseRAC3niveis([whereTableRacRACD0Preparados,\" Unidade CAMPO1, Nm_Item_RAC CAMPO2, Tipo_Problema_rac CAMPO3 \",\" Unidade, Nm_Item_RAC, Tipo_Problema_rac \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableRacRACD0Preparados(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableRacRACD0Preparados'), 20000)\r\n             })\r\n\r\n\r\n             var whereTableNNCLogD3 = \"\"\r\n             + \" WHERE 1=1 \"\r\n             \r\n             + \" AND [DT ABERTURA] = case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\" \r\n             + \" and [Regional (Qualidade)] not in ('LogÃ­stica', 'Terceiro', 'Outros') and [Ãrea ResponsÃ¡vel] not in ('WRAP PIZZA', 'RASTREABILIDADE HUB', 'NNC OCORRÃNCIA PRODUTO; PROCESSO NAS FILIAIS') \"\r\n \r\n             api.getSearaBaseNNCLog3niveis([whereTableNNCLogD3,\" Fornecedor CAMPO1, [Grupo Problema] CAMPO2, [Tipo Problema] CAMPO3  \",\" Fornecedor, [Tipo Problema], [Grupo Problema] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCLogD3(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCLogD3'), 20000)\r\n             })\r\n\r\n             var whereTableNNCLogD0 = \"\"\r\n        \r\n             + \" WHERE 1=1 \"\r\n             + \" AND [DT ABERTURA] =  \"\r\n             + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n             + \" and [Regional (Qualidade)] not in ('LogÃ­stica', 'Terceiro', 'Outros') and [Ãrea ResponsÃ¡vel] not in ('WRAP PIZZA', 'RASTREABILIDADE HUB', 'NNC OCORRÃNCIA PRODUTO; PROCESSO NAS FILIAIS') \"\r\n \r\n \r\n             api.getSearaBaseNNCLog3niveis([whereTableNNCLogD0,\"  Fornecedor CAMPO1, [Grupo Problema] CAMPO2, [Tipo Problema] CAMPO3  \",\" Fornecedor, [Tipo Problema], [Grupo Problema] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCLogD0(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCLogD0'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableNNCMPD3InNatura = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n            + \" AND ([Reg. Qual] LIKE '%AVES%' OR [Reg. Qual] like '%suÃ­%') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] = \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\"\r\n\r\n            api.getSearaBaseNNCMP3niveis([whereTableNNCMPD3InNatura,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableNNCMPD3InNatura(json)\r\n                setTimeout(arrumaTabela3niveis('clTableNNCMPD3InNatura'), 20000)\r\n            })\r\n\r\n             var whereTableNNCMPD0InNatura = \"\"\r\n             + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n            + \" AND ([Reg. Qual] LIKE '%AVES%' OR [Reg. Qual] like '%suÃ­%') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPD0InNatura,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPD0InNatura(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPD0InNatura'), 20000)\r\n             })\r\n\r\n             //////\r\n            var whereTableNNCMPD3Preparados = \"\"\r\n            + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n            + \" AND [Reg. Prod.] IN ('PREPARADOS') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 1 then DATEADD(DD,-4,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-2,(select * from v_maiorData))) = 7 then DATEADD(DD,-3,(select * from v_maiorData)) else DATEADD(DD,-2,(select * from v_maiorData)) end\"\r\n\r\n            api.getSearaBaseNNCMP3niveis([whereTableNNCMPD3Preparados,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n\r\n                let json = JSON.parse(response.data)\r\n                setTableNNCMPD3Preparados(json)\r\n                setTimeout(arrumaTabela3niveis('clTableNNCMPD3Preparados'), 20000)\r\n            })\r\n\r\n             var whereTableNNCMPD0Preparados = \"\"\r\n             + \" WHERE 1=1 \"\r\n            + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n            + \" AND [Reg. Prod.] IN ('PREPARADOS') \"\r\n            + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n            + \" AND [Entra para a Meta] IN ('SIM') \"\r\n            + \" AND [DT ABERTURA] =  \"\r\n            + \" case when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 1 then DATEADD(DD,-2,(select * from v_maiorData)) when DATEPART(WEEKDAY,DATEADD(DD,-0,(select * from v_maiorData))) = 7 then DATEADD(DD,-1,(select * from v_maiorData)) else DATEADD(DD,-0,(select * from v_maiorData)) end\"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPD0Preparados,\" Fornecedor CAMPO1, [Tipo Problema] CAMPO2, Produto CAMPO3 \",\" Fornecedor, [Tipo Problema], Produto \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPD0Preparados(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPD0Preparados'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssos = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNC3niveisPIVOTDIA([whereTableNNCMPCEOssos,\" Cliente Coluna1, Fornecedor Coluna2, Produto Coluna3 \",\" Cliente, Fornecedor, Produto \", \" [MES-DIA] \", \" [MES-DIA] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 \r\n                 for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n                 setTableNNCMPCEOssos(json)\r\n                 setTimeout(arrumaTabela3niveis('clTableNNCMPCEOssos'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssosFornecedor = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNCMP3niveis([whereTableNNCMPCEOssosFornecedor,\" [NegÃ³cio] CAMPO1, Fornecedor CAMPO2, null CAMPO3 \",\" [NegÃ³cio], Fornecedor \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPCEOssosFornecedor(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCMPCEOssosFornecedor'), 20000)\r\n             })\r\n\r\n             var whereTableNNCMPCEOssosUnidadesReclamantes = \"\"\r\n             + \" WHERE 1=1\t \"\r\n             + \" AND [Reg. Qual] NOT IN ('ITAJAÃ','OUTROS') \"\r\n             + \" AND [GRUPO PROBLEMA] NOT IN ('EMBALAGEM SECUNDÃRIA','DISTR / LOG') \"\r\n             + \" AND [Entra para a Meta] IN ('SIM') \"\r\n             + \" AND [Tipo Problema] IN ('OSSOS') \"\r\n             + \" AND month([DT ABERTURA]) = month((select * from v_maiorData)) \"\r\n             + \" AND year([DT ABERTURA]) = year((select * from v_maiorData)) \"\r\n \r\n             api.getSearaBaseNNCMP2niveis([whereTableNNCMPCEOssosUnidadesReclamantes,\" [NegÃ³cio] CAMPO1, [Filial] CAMPO2, null CAMPO3 \",\" [NegÃ³cio], [Filial] \"]).then((response) => {\r\n \r\n                 let json = JSON.parse(response.data)\r\n                 setTableNNCMPCEOssosUnidadesReclamantes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableNNCMPCEOssosUnidadesReclamantes'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhos = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND [Origem] IN ('FABRICAÃÃO','EXPEDIÃÃO FÃBRICA','P&D','PRODUÃÃO EM TERCEIRO') \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n             + \"and [Tipo CE] in ('Inerente', 'NÃ£o Inerente') \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhos, \"[NegÃ³cio Qualidade] as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[NegÃ³cio Qualidade], Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhos(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhos'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhosInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [Origem] IN ('FABRICAÃÃO','EXPEDIÃÃO FÃBRICA','P&D','PRODUÃÃO EM TERCEIRO') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n             + \"and [Tipo CE] = 'Inerente' \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosInerente, \"[NegÃ³cio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[NegÃ³cio Qualidade] , Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosInerentes'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhosNaoInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND [Origem] IN ('FABRICAÃÃO','EXPEDIÃÃO FÃBRICA','P&D','PRODUÃÃO EM TERCEIRO') \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n             + \"and [Tipo CE] = 'NÃ£o Inerente' \"\r\n\r\n            api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosNaoInerente, \"[NegÃ³cio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \"[NegÃ³cio Qualidade] , Unidade\", \" [Tipo_Problema_rac] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosNaoInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosNaoInerentes'), 20000)\r\n             })\r\n\r\n             var whereTableRacCorposEstranhosInerenteNaoInerente = \"\"\r\n             + \" WHERE 1=1 \"\r\n             + \"and year(data_rac) = (select year(data) as data from v_maiorData) \"\r\n             + \"and month(data_rac) = (select month(data) as data from v_maiorData) \"\r\n             + \"AND UNIDADE NOT IN ('ITAJAI','MARBA','SANTA CRUZ DO SUL','VERÃSSIMO', 'Santa Cruz do Sul', 'Noronha', 'Amai', 'Grano', 'GRANO ALIMENTOS S.A.') \"\r\n             \r\n             + \"AND [Origem] IN ('FABRICAÃÃO','EXPEDIÃÃO FÃBRICA','P&D','PRODUÃÃO EM TERCEIRO') \"\r\n             + \"AND [TIPO_ATENDIMENTO_RAC] NOT IN ('ALERTA','CONCESSÃO', 'CRITICA','CRÃTICA','ELOGIO','NEGOCIAÃÃO COMERCIAL','OBRIGAÃÃO','RAC CAIXA','RAC COMPLEMENTAR','RECOLHIMENTO','RECOLHIMENTO VOLUNTÃRIO') \"\r\n             + \"and [Tipo CE] in ('Inerente', 'NÃ£o Inerente') \"\r\n            \r\n            \r\n\r\n             api.getSearaBaseRAC3niveisPIVOTDIA([ whereTableRacCorposEstranhosInerenteNaoInerente, \"[NegÃ³cio Qualidade]  as Coluna1, Unidade as Coluna2, null as Coluna3\", \" [NegÃ³cio Qualidade] , Unidade\", \" [Tipo CE] \" ]).then((response) => {\r\n                \r\n                let json = JSON.parse(response.data)\r\n\r\n                for (var i=0; i<json.length; i++){\r\n                    delete json[i]['C1'];\r\n                    delete json[i]['C2'];\r\n                    delete json[i]['C3'];\r\n                    delete json[i]['Coluna1'];\r\n                    delete json[i]['Coluna2'];\r\n                    delete json[i]['Coluna3'];\r\n                    delete json[i]['NÂº RAC'];\r\n                    delete json[i]['C1__'];\r\n                    delete json[i]['C2__'];\r\n                    delete json[i]['C3__'];\r\n                    delete json[i]['Coluna_'];\r\n                    delete json[i]['Total'];\r\n                    delete json[i]['Total2'];\r\n                }\r\n\r\n             \r\n                 setTableRacCorposEstranhosInerentesNaoInerentes(json)\r\n                 setTimeout(arrumaTabela2niveis('clTableRacCorposEstranhosInerentesNaoInerentes'), 20000)\r\n             })\r\n\r\n            flagTable = true;\r\n\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    const buscarDados = (response, funcao, graficoRetorno, funcaoRetorno) => {\r\n\r\n        setIsUpdatingData(true)\r\n\r\n        let parm = \" \";\r\n\r\n        let json = JSON.parse(response.data)\r\n\r\n        if (json.length == 0) return\r\n\r\n        let datasets = [];\r\n        let indicators = Object.keys(json[0]).map(key => key);\r\n\r\n        if (typeof (funcao) == \"function\") {\r\n            funcao(json);\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    const showSuccess = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'success', summary: errorMessage, detail: detailMessage });\r\n    }\r\n\r\n    const showError = (errorMessage, detailMessage) => {\r\n        toast.current.show({ severity: 'error', summary: errorMessage, detail: detailMessage, life: 6000 });\r\n    }\r\n\r\n    const UpdatingDatabase = () => {\r\n        return (\r\n            <div>\r\n                <h1 className={'h2'}>\r\n                    Atualizando a base\r\n                    <br />\r\n                    <small>Carregando dados</small>\r\n                    <br />\r\n                </h1>\r\n                <ProgressBar mode=\"indeterminate\" style={{ height: '16px' }}></ProgressBar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Se esta logado exibe tela do dashboard:\r\n    return (\r\n        // <div style=\"width: 1220px !important;\">\r\n        <div>\r\n            <canvas style={{ display: 'none' }} ref={canvasRef} />\r\n           \r\n            <Row>\r\n                <Col lg={12} className=\"cssSeara2021\">\r\n                    {isUpdatingData ? (<UpdatingDatabase />) : (\r\n                        <div>\r\n                            <h1 className={'h2'}>\r\n                                RelatÃ³rio KPI Seara\r\n                                    <br />\r\n                                <small>por GRX SoluÃ§Ãµes</small>\r\n                            </h1>\r\n                            <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                                {/* <div className=\"btn-group mr-2\">\r\n                                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={buscarDados}>Atualizar</button>\r\n                                </div>   */}\r\n\r\n                                <Pdf targetRef={ref} filename=\"KPI.pdf\" options={options} x={1} scale={0.8}>\r\n                                    {({ toPdf }) => (\r\n                                        <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={toPdf} id=\"btnPDF\">Gerar PDF</button>\r\n                                    )}\r\n                                </Pdf>\r\n\r\n                         \r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n\r\n            <hr></hr>\r\n\r\n            {/* BotÃ£o aplicar */}\r\n            {/* {isUpdatingData ? (<div> </div>) : ( */}\r\n                <Row style={{ paddingRight: '15px', paddingLeft: '15px', display: \"none\" }}>\r\n                    <button className=\"btn btn-sm btn-secondary\" style={{ width: '100%' }} onClick={aplicar} id=\"btnAplicar\">Aplicar</button>\r\n                </Row>\r\n            {/* )} */}\r\n\r\n\r\n\r\n            {/* Graficos */}\r\n            <div className=\"pad10\" ref={ref}  >\r\n                <Row>\r\n                    <Col className=\"mt-1 col-12 cssSeara2021\">\r\n                        <h1></h1>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <reg id=\"region RAC - Totais\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            Totais\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotal} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCE} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCE} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRAC} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMP} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - Aves Pesadas\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Aves Pesadas\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalAvesPesadas} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEAvesPesadas} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico divMenor\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEAvesPesadas} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadas} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadas} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - Aves Pesadas RS/SC/SP\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Aves Pesadas RS/SC/SP\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalAvesPesadasRS} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEAvesPesadasRS} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEAvesPesadasRS} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasRS} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasRS} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                \r\n\r\n                <reg id=\"region RAC - Aves Pesadas SP/CO/NE\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Aves Pesadas SP/CO/NE\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalAvesPesadasSP} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEAvesPesadasSP} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEAvesPesadasSP} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasSP} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasSP} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                \r\n\r\n                <reg id=\"region RAC - Aves Pesadas PR\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Aves Pesadas PR\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalAvesPesadasPR} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEAvesPesadasPR} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEAvesPesadasPR} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasPR} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasPR} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - Aves Leves\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Aves Leves\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalAvesLeves} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEAvesLeves} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEAvesLeves} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesLeves} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesLeves} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - SuÃ­nos\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            SuÃ­nos\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalSuinos} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCESuinos} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCESuinos} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACSuinos} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPSuinos} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - Preparados\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Preparados\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"Habilitador\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoCETotalPreparados} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACTotalCEPreparados} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCMPTotalCEPreparados} options={lightOptions} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_subTitulo\">\r\n                            ReclamaÃ§Ãµes\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"RAC\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACPreparados} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col>\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC MP\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPPreparados} options={lightOptions} className=\"divMedia\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Aves Pesadas\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Aves Pesadas\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadas} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesAvesPesadas} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasAvesPesadas} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Aves Pesadas PR\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Aves Pesadas PR\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasPR} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesAvesPesadasPR} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasAvesPesadasPR} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Aves Pesadas SP/CO/NE\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Aves Pesadas SP/CO/NE\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasSP} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesAvesPesadasSP} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasAvesPesadasSP} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Aves Pesadas RS/SC/SP\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Aves Pesadas RS/SC/SP\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesPesadasRS} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesAvesPesadasRS} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasAvesPesadasRS} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Aves Leves\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Aves Leves\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACAvesLeves} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesAvesLeves} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasAvesLeves} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - SuÃ­nos\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - SuÃ­nos\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACSuinos} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesSuinos} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasSuinos} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - ReclamaÃ§Ãµes - Preparados\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            ReclamaÃ§Ãµes - Preparados\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACPreparados} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACUnidadesPreparados} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"mt-1 cssSeara2021_tituloGrafico\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACProblemasPreparados} options={optionsComparativo} className=\"divMenor2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - Abertura ME e MI\">\r\n\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Mercado Interno\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACMI} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            Mercado Externo\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoRACME} options={lightOptions} className=\"divMaior2\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACAberturaME()\r\n\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    Oriente MÃ©dio\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEOrienteMedio()\r\n\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    Europa\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEEuropa()\r\n\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    JapÃ£o\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {\r\n                                    isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEJapao()\r\n                                    \r\n                                    )\r\n                                    }                                   \r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    Ãsia\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEAsia()\r\n\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    AmÃ©ricas / Ãfrica\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEAmericasAfrica()\r\n\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col className=\"col-lg-2 col-md-2 col-sm-1\">\r\n                            <Row>\r\n                                <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                    Contas globais\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"col-lg-12 col-md-12 col-sm-1\">\r\n                                    {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                        DataTableRACAberturaMEContasGlobais()\r\n\r\n                                    )}\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n\r\n                <reg id=\"region RAC - +1\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                FFO\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesFFO} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Atendimento Comercial\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesAC} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +2\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                LogÃ­stica ExportaÃ§Ã£o\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesLogME} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                LogÃ­stica ImportaÃ§Ã£o\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesLogMI} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +3\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                DocumentaÃ§Ã£o\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesDoc} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Transporte Terrestre\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesTT} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +3\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                ProduÃ§Ã£o em Terceiro (ex. Massatake)\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesTerceiro} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura Terceiro\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesTerceiro()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +4\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Massatake\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesMassatake} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                PDV\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesPDV} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +5\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura PDV\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesAberturaPDV} options={optionsComparativo} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                \r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesPDV()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +6\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Tipo CrÃ­tica\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCritica} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n\r\n                    <Row>\r\n                        \r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                \r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesCritica()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +7\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - Totais\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoTotal()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +8\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - Aves\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoAves()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +9\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Meta x Real - Aves\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesMetaRealAves()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +10\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - Preparados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoPreparados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +11\">\r\n                <Row>\r\n                <Col className=\"col-6\">\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - Fatiados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoFatiados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </Col>\r\n                    \r\n                <Col className=\"col-6\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - Pescados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoPescados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </Col> \r\n                </Row>   \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +13\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Meta x Real - Preparados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesMetaRealPreparados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +14\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's EvoluÃ§Ã£o - SuÃ­nos\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesEvolucaoSuinos()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +15\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Meta x Real - SuÃ­nos\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacRACDetalhesMetaRealSuinos()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +16\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Linhas Especiais (Seara Nature, Gourmet, IncrÃ­vel)\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesEspeciais} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura Linhas Especiais - FamÃ­lia\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACAberturaLinhaEspecialFamilia()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +16\">\r\n\r\n                    <Row>\r\n                        \r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura Gourmet\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACAberturaLinhaEspecialAcumuladoGourmet()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura IncrÃ­vel\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACAberturaLinhaEspecialAcumuladoIncrivel()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura Nature \r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACAberturaLinhaEspecialAcumuladoNature()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Abertura Rotisserie\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACAberturaLinhaEspecialAcumuladoRotisserie()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                \r\n\r\n                <reg id=\"region RAC - +18\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Totais\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCE} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - Inerente\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCEInerente} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +19\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - NÃ£o inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCENaoInerente} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpo Estranho - PlÃ¡stico\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCEPlastico} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +20\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Inseto\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesInseto} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacInseto()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +21\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Cabelo\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesCabelo} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCabelo()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +22\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's PlÃ¡stico\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesPlastico} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacPlastico()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +23\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Metal\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesMetal} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacMetal()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +24\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's IntoxicaÃ§Ã£o\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesIntoxicacao} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacIntoxicacao()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +25\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC's Larva\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoRACDetalhesLarva} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                &nbsp;\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacLarva()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +26\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhos()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +27\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosInerentes()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +28\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos NÃ£o Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosNaoInerentes()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +29\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Corpos Estranhos Inerentes e NÃ£o Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-6 col-md-6 col-sm-6 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRacCorposEstranhosInerentesNaoInerentes()\r\n\r\n                                )} \r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +30\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                Habilitador Corpos Estranhos NÃ£o Inerentes\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableHabilitadorCorposEstranhosNaoInerentes()\r\n                                    //inexistente\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +31\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC D3 - In Natura\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACD3INNATURA()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC D3 - Preparados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACD3Preparados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC D0 - In Natura\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACD0INNATURA()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                RAC D0 - Preparados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableRACD0Preparados()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                \r\n\r\n\r\n\r\n                \r\n\r\n                <reg id=\"region RAC - +34\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log - Total\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCLogDetalhesTotal} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log - Aves\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCLogDetalhesAves} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +35\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log - Preparados\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCLogDetalhesPreparados} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        <Col className=\"col-6\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log - SuÃ­nos\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCLogDetalhesSuinos} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +36\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                EvoluÃ§Ã£o MÃªs - NNC Log\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableNNCEvolucaoMes()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +37\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log D3\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableNNCLogD3()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col className=\"col-3\">\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Log D0\r\n                                <hr></hr>\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                    DataTableNNCLogD0()\r\n\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n\r\n                \r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region RAC - +38\">\r\n\r\n                    <Row>\r\n                        <Col className=\"col-12\">\r\n                            <Row>\r\n                            <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                                NNC Totais\r\n                                <hr></hr>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row>\r\n                            <Col className=\"col-lg-3 col-md-3 col-sm-12\">&nbsp;</Col>\r\n                            <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\"\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                        <Chart type=\"bar\" data={responseGraficoNCCMP} options={lightOptions} className=\"divMaior2\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-3 col-md-3 col-sm-12 \">&nbsp;</Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        \r\n                    </Row>\r\n\r\n                \r\n                    \r\n                </reg>\r\n\r\n                <reg id=\"region NNC +39\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Aves Pesadas\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Aves Pesadas\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadas} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesPesadasUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesPesadasProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +40\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Aves RS/SC/SP\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Aves RS/SC/SP\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasRS} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesRSUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesRSProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +41\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Aves SP/CO/NE\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Aves SP/CO/NE\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasSP} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesSPUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesSPProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +42\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Aves PR\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Aves PR\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesPesadasPR} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesPRUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesPRProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +42\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Aves Leves\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Aves Leves\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPAvesLeves} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesLevesUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCAvesLevesProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +43\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - SuÃ­nos\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - SuÃ­nos\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPSuinos} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCSuinosUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCSuinosProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +44\">\r\n\r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC - Preparados\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Preparados\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNCCMPPreparados} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCPreparadosUnidades} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    <Card title=\" \" subTitle=\"\" className=\"cssSeara2021_tituloGrafico \">\r\n                                        <Chart type=\"bar\" data={responseGraficoNNCPreparadosProblemas} options={optionsComparativo} className=\"divMenor\" />\r\n                                    </Card>\r\n                                )}\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +45\">\r\n\r\n                    \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos Totais\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCETotal} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos Inerente\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCEInerente} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos NÃ£o Inerente\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCENaoInerente} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos Ossos\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCEOssos} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    \r\n\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +46\">                \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos PlÃ¡stico\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCEPlastico} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCCEPlastico()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +47\">                \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos Metal\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCEMetal} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCCEMetal()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +48\">                \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                <Card title=\"NNC - Corpos Estranhos Ossos\" subTitle=\"\" className=\"cssSeara2021_tituloGrafico  align-self-center\">\r\n                                    <Chart type=\"bar\" data={responseGraficoNNCCEOssos} options={lightOptions} className=\"divMaior\" />\r\n                                </Card>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCCEOssos()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +49\">    \r\n                    <Row>\r\n                        <Col className=\" col-12 cssSeara2021_titulo\">\r\n                            NNC MP Corpos Estranhos\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCCE()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +50\">\r\n                <Row>   \r\n                    <Col className=\"col-6\"> \r\n                        <Row>\r\n                            <Col className=\" col-12 cssSeara2021_titulo\">\r\n                                NNC MP Corpos Estranhos Inerentes e NÃ£o Inerentes\r\n                            <hr></hr>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    DataTableNNCCEInerenteNaoInerente()\r\n                                    \r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"col-12\">   \r\n                        <Row>\r\n                            <Col className=\" col-12 cssSeara2021_titulo\">\r\n                                NNC MP Corpos Estranhos - Ossos - Unidade Reclamante / Fornecedor / Produto\r\n                            <hr></hr>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    DataTableNNCMPCEOssos()\r\n                                    \r\n                                )}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"col-3\">    \r\n                        <Row>\r\n                            <Col className=\" col-12 cssSeara2021_titulo\">\r\n                                NNC MP Corpos Estranhos - Ossos - Fornecedor\r\n                            <hr></hr>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    DataTableNNCMPCEOssosFornecedor()\r\n                                    \r\n                                )}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"col-3\">    \r\n                        <Row>\r\n                            <Col className=\" col-12 cssSeara2021_titulo\">\r\n                                NNC MP Corpos Estranhos - Unidades reclamantes\r\n                            <hr></hr>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                            <Col className=\"col-lg-12 col-md-12 col-sm-12 align-self-center\">\r\n                                {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                    DataTableNNCMPCEOssosUnidadesReclamantes()\r\n                                    \r\n                                )}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                </reg>\r\n\r\n                <reg id=\"region NNC +48\"> \r\n                <Row>\r\n                <Col className=\"col-6\"> \r\n                    <Row>\r\n                        <Col className=\" col-6 cssSeara2021_titulo\">\r\n                            NNC MP D-3 - In natura\r\n                        <hr></hr>\r\n                        </Col>\r\n                        <Col className=\" col-6 cssSeara2021_titulo\">\r\n                            NNC MP D-3 - Preparados\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>             \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCMPD3INNATURA()\r\n                                \r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCMPD3Preparados()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Col className=\"col-6\">   \r\n                    <Row>\r\n                        <Col className=\" col-6 cssSeara2021_titulo\">\r\n                            NNC MP D-0 - In natura\r\n                        <hr></hr>\r\n                        </Col>\r\n                        <Col className=\" col-6 cssSeara2021_titulo\">\r\n                            NNC MP D-0 - Preparados\r\n                        <hr></hr>\r\n                        </Col>\r\n                    </Row>              \r\n                    <Row>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCMPD0INNATURA()\r\n                                \r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n                                 DataTableNNCMPD0Preparados()\r\n                                \r\n                            )}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                </Row>\r\n                </reg>\r\n\r\n                {/* ///////////////////////////////////////////////////////// */}\r\n\r\n                <reg id=\"region RAC - Total +33\">\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs Abertura ME\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalME()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs Abertura MI\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalMI()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs Abertura MI Especiais\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalRECL()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs PDV Abertura\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalPDV()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs terceiros Abertura\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalTE()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"mt-1 col-12 cssSeara2021_titulo\">\r\n                            RACs CrÃ­tica Abertura\r\n                            <hr></hr>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <Col className=\"mb-5\">\r\n\r\n                            {isUpdatingData ? (<LoadingSkeletonCard />) : (\r\n\r\n                                DataTableRACFinalCRIT()\r\n\r\n                            )}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </reg>\r\n                \r\n               \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\funcoes.js",[],["395","396"],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\loginApi.js",["397"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n   //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n   baseURL: \"http://localhost/SearaDashboard\"\r\n   //baseURL: \"http://localhost/KPISeara/APISeara/PainelKPIAdm\"\r\n   //    baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/login`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\editUser.js",["398","399","400"],"import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    SelectRole: \"Select a role\",\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    EditPassword: \"Edit password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    EditAccount: \"Edit Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Edit Account\"\r\n}\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass EditUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: false,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        const user = this.fetchData(id);\r\n    }\r\n\r\n    fetchData = id => {\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        Api.getOne(id).then(r => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n\r\n            if (r.data === \"null\")\r\n                window.location.href = `${window.location.origin}/404`;\r\n\r\n            return JSON.parse(r.data);\r\n        }).then(user => {\r\n            this.setState({\r\n                id: user.Id,\r\n                username: user.Username,\r\n                email: user.Email,\r\n                arr: [ //claims\r\n                    { id: 1, value: \"Read\", isChecked: true },\r\n                    { id: 2, value: \"Write\", isChecked: false },\r\n                ],\r\n                enableSubmit: true,\r\n                showProgressbar: false\r\n            })\r\n\r\n            const userRoles = JSON.parse(user.Roles)\r\n\r\n            if (userRoles.length)\r\n                this.setState({ Role: userRoles[0].Role })\r\n\r\n            userRoles.forEach(role => {\r\n                role.Claims.forEach(claim => {\r\n\r\n                    let arrCopy = this.state.arr\r\n                    arrCopy.forEach(item => {\r\n                        if (item.value.toLowerCase() === claim.toLowerCase())\r\n                            item.isChecked = true\r\n                    })\r\n                    this.setState({ arr: arrCopy })\r\n\r\n                });\r\n            });\r\n\r\n        }).catch(e => {\r\n            if (e?.response?.status === 401 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, e.response.Message)\r\n\r\n            } if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message, \"\")\r\n            } else {\r\n\r\n            }\r\n        }).finally(() => {\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n    };\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"Id\"] = this.state.id\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.put(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.EditAccount}\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(EditUserJxs);\r\n","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\createUser.js",["401"],"import React from 'react';\r\nimport 'primeicons/primeicons.css'\r\nimport Api from '../api/userApi'\r\nimport { Toast } from 'primereact/toast';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Password } from 'primereact/password';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst registerTexts = {\r\n    FullName: \"Full name\",\r\n    EmailAddress: \"Email address\",\r\n    CreatePassword: \"Create password\",\r\n    RepeatPassword: \"Repeat password\",\r\n    HaveAnAaccount: \"Have an account?\",\r\n    CreateAccount: \"Create Account\",\r\n    LogIn: \"Log In\",\r\n    SelectRole: \"Select a role\",\r\n    UnableSaveUserData: \"unable to save user data.\",\r\n    UserDataSaved: \"User data successfully saved!\",\r\n    PageTitle: \"Create Account\"\r\n}\r\n\r\nconst toastStatus = {\r\n    success: 'success',\r\n    error: 'error',\r\n}\r\n\r\nclass CreateUserJxs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            email: '',\r\n            arr: [ //claims\r\n                { id: 1, value: \"Read\", isChecked: true },\r\n                { id: 2, value: \"Write\", isChecked: false },\r\n            ],\r\n            Role: 'user',\r\n            enableSubmit: true,\r\n            showProgressbar: false\r\n        };\r\n        this.toast = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckChieldElement = this.handleCheckChieldElement.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.refs.loader.style.display = \"block\";\r\n\r\n        let user = {}\r\n        user[\"username\"] = this.state.username\r\n        user[\"email\"] = this.state.email\r\n        user[\"password\"] = this.state.password\r\n        user[\"Roles\"] = [{\r\n            Role: this.state.Role,\r\n            Claims: this.state.arr.filter(r => r.isChecked).map(r => r.value)\r\n        }]\r\n\r\n        Api.post(user).then(r => {\r\n            if (r.status === 201) {\r\n                this.showToast(toastStatus.success, registerTexts.UserDataSaved)\r\n            }\r\n        }).catch(e => {\r\n            if (e?.response?.status === 400 && e?.response?.data) {\r\n                const response = JSON.parse(e.response.data)\r\n                this.showToast(toastStatus.error, response.Message)\r\n            } else {\r\n                this.showToast(toastStatus.error, registerTexts.UnableSaveUserData)\r\n            }\r\n        }).finally(() => {\r\n            this.refs.btn.removeAttribute(\"disabled\");\r\n            this.refs.loader.style.display = \"none\";\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleCheckChieldElement(event) {\r\n        let arrCopy = this.state.arr\r\n        arrCopy.forEach(item => {\r\n            if (item.value === event.target.value)\r\n                item.isChecked = event.target.checked\r\n        })\r\n        this.setState({ arr: arrCopy })\r\n    }\r\n\r\n    showToast(severity, message, details) {\r\n        this.toast.current.show({ severity: severity, summary: message, detail: details });\r\n    }\r\n\r\n    render() {\r\n        const usernameOk = this.state.username.length > 0;\r\n        const passwordOk = this.state.password.length > 0;\r\n        const passwordConfirmOk = this.state.passwordConfirm.length > 0 && (this.state.password === this.state.passwordConfirm);\r\n        const emailOk = this.state.email.length > 0;\r\n        const enabledSubmit =\r\n            usernameOk\r\n            && passwordOk\r\n            && passwordConfirmOk\r\n            && emailOk;\r\n\r\n        return (\r\n            <Card title={registerTexts.PageTitle} style={{ marginBottom: '2em' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <Toast ref={this.toast} position=\"bottom-right\"></Toast>\r\n                    {/* NOME COMPELTO */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\" >\r\n                            <span className=\"input-group-text\"> <i style={{ color: usernameOk ? 'green' : 'red' }} className=\"pi pi-user\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.FullName}\r\n                            type=\"text\" />\r\n                    </div>\r\n\r\n                    {/* EMAIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: emailOk ? 'green' : 'red' }} className=\"pi pi-envelope\"></i> </span>\r\n                        </div>\r\n                        <input\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputChange}\r\n                            className=\"form-control\"\r\n                            placeholder={registerTexts.EmailAddress}\r\n                            type=\"email\" />\r\n                    </div>\r\n\r\n                    {/* PERFIL */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i className=\"pi pi-flag\"></i> </span>\r\n                        </div>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={this.state.Role}\r\n                            name=\"Role\"\r\n                            onChange={this.handleInputChange}>\r\n                            <option value=\"user\">{registerTexts.SelectRole}</option>\r\n                            <option value=\"manager\">Manager</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* UNIDADES */}\r\n                    <div className=\"form-group\">\r\n                        {\r\n                            this.state.arr.map((item) => {\r\n                                return (\r\n                                    <div key={item.value} className=\"custom-control custom-checkbox\" >\r\n                                        <input name=\"isGoing\" type=\"checkbox\" id={item.value} value={item.value} checked={item.isChecked} onChange={this.handleCheckChieldElement} className=\"custom-control-input\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={item.value}>{item.value}</label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {/* SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"password\"\r\n                            placeholder={registerTexts.CreatePassword}\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    {/* CONFIRMAR SENHA */}\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\"> <i style={{ color: passwordConfirmOk ? 'green' : 'red' }} className=\"pi pi-lock\"></i> </span>\r\n                        </div>\r\n                        <Password\r\n                            name=\"passwordConfirm\"\r\n                            placeholder={registerTexts.RepeatPassword}\r\n                            value={this.state.passwordConfirm}\r\n                            onChange={this.handleInputChange}\r\n                            feedback={false}\r\n                            toggleMask />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\"\r\n                            ref=\"btn\"\r\n                            disabled={!enabledSubmit}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            {registerTexts.CreateAccount}\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"text-center\">{registerTexts.HaveAnAccount} <a href=\"\">{registerTexts.LogIn}</a> </p>\r\n                    <br />\r\n                    <div ref=\"loader\" style={{ display: 'none' }}>\r\n                        <ProgressBar mode=\"indeterminate\" style={{ height: '6px' }}></ProgressBar>\r\n                    </div>\r\n\r\n                </form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst CreateUser = () => {\r\n    return <CreateUserJxs />\r\n};\r\n\r\nexport default CreateUser;","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\views\\listUsers.js",[],"C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\api\\userApi.js",["402"],"import axios from 'axios'\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"http://179.184.236.89\" //\"http://179.184.236.89\"\r\n// })\r\nconst instance = axios.create({\r\n    //baseURL: \"http://192.168.25.200/Seara\" //\"http://179.184.236.89/Seara\" \"http://localhost\"\r\n    baseURL: \"http://localhost/SearaDashboard\"\r\n    //baseURL: \"http://localhost/KPISeara/APISeara/PainelKPIAdm\"\r\n    //baseURL: \"http://intranet.grxsolucoes.com.br/KPISeara/APISeara/PainelKPIAdm\"\r\n})\r\n\r\nexport default {\r\n    getOne: (id) =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users?userId=${id}`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    get: () =>\r\n        instance({\r\n            method: \"GET\",\r\n            url: `/get-users`,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    post: (user) =>\r\n        instance({\r\n            method: \"POST\",\r\n            url: `/create-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n\r\n    put: (user) =>\r\n        instance({\r\n            method: \"PUT\",\r\n            url: `/edit-user`,\r\n            data: user,\r\n            transformResponse: [\r\n                function (data) {\r\n                    return data;\r\n                }\r\n            ]\r\n        }),\r\n}","C:\\Users\\gcnun\\PainelKPI\\react-primereact-charts-demo\\src\\domain\\sql.js",["403"],"const testeSQLPivotRollup = [\"\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"[Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", count(Rac_rac) as [NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #RESULTADO \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    AND [Tipo_Atendimento_rac] in (  'RECLAMAÃÃO',  'RECLAMAÃÃO ABUSO PROD.',  'RECLAMAÃÃO FAB. NÃO IDENTIF.',  'RECLAMAÃÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÃÃO',  'ReincidÃªncia',  'RECLAMAÃÃO FFO',  'RECLAMAÃÃO ABUSO DE PRODUTO',  'RECLAMAÃÃO VOSSKO',  'ReclamaÃ§Ã£o Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([NÂº RAC]) [NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([NÂº RAC]) [NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([NÂº RAC]) [NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUPING(B.Mercado) U\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Tipo do Problema]) T\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", GROUPING(B.[Manifestante]) M\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.Mercado as Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", SUM([NÂº RAC]) [NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"INTO #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #RESULTADO B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"GROUP BY Mercado, [Tipo do Problema], [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"WITH ROLLUP\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"SELECT DISTINCT B.U, B.T, B.M, ISNULL(B.Mercado1,'Total') as Mercado1, ISNULL(B.[Tipo do Problema],'Total') as [Tipo do Problema], ISNULL(B.Manifestante,'Total') as Manifestante,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"b.[NÂº RAC]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", U.[NÂº RAC] Mercado_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", T.[NÂº RAC] TipoProblema_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", M.[NÂº RAC] Manifestante_\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'<b>Total</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE '<b>'+B.Mercado1+'</b>'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE '@@.....'+B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE '..........'+B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \", CASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tWHEN B.[Manifestante] IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tCASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tWHEN B.[Tipo do Problema] IS NULL THEN \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                CASE \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tWHEN B.Mercado1 IS NULL THEN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t'Total'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\tELSE B.Mercado1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tELSE B.[Tipo do Problema] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tELSE B.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"    END Mercado2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\tINTO #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"FROM #BASE B\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #Mercado U ON B.Mercado1 = U.Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #TIPOPROBLEMA T ON B.Mercado1 = T.Mercado AND B.[Tipo do Problema] = T.[Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"LEFT JOIN #MANIFESTANTE M ON B.Mercado1 = M.Mercado AND B.[Tipo do Problema] = M.[Tipo do Problema] AND B.[Manifestante] = M.[Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [Mercado._rac] as Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Tipo_Problema_rac as [Tipo do Problema]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , Nm_Manifestante_rac as [Manifestante]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             , sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÃÃO',  'RECLAMAÃÃO ABUSO PROD.',  'RECLAMAÃÃO FAB. NÃO IDENTIF.',  'RECLAMAÃÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÃÃO',  'ReincidÃªncia',  'RECLAMAÃÃO FFO',  'RECLAMAÃÃO ABUSO DE PRODUTO',  'RECLAMAÃÃO VOSSKO',  'ReclamaÃ§Ã£o Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             'Total' as [Unidade],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÃÃO',  'RECLAMAÃÃO ABUSO PROD.',  'RECLAMAÃÃO FAB. NÃO IDENTIF.',  'RECLAMAÃÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÃÃO',  'ReincidÃªncia',  'RECLAMAÃÃO FFO',  'RECLAMAÃÃO ABUSO DE PRODUTO',  'RECLAMAÃÃO VOSSKO',  'ReclamaÃ§Ã£o Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            GROUP BY [Mercado._rac], Tipo_Problema_rac, Nm_Manifestante_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             sum(Quant_rac) Quant_rac\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and year(data_rac) = (select year(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            AND [Tipo_Atendimento_rac] in (  'RECLAMAÃÃO',  'RECLAMAÃÃO ABUSO PROD.',  'RECLAMAÃÃO FAB. NÃO IDENTIF.',  'RECLAMAÃÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÃÃO',  'ReincidÃªncia',  'RECLAMAÃÃO FFO',  'RECLAMAÃÃO ABUSO DE PRODUTO',  'RECLAMAÃÃO VOSSKO',  'ReclamaÃ§Ã£o Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @SQLStr VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             [MES-DIA] Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM [v_base_rac]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHERE Mercado_rac = 'ME'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND Tipo_rac = 'Real'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t AND [Tipo_Atendimento_rac] in (  'RECLAMAÃÃO',  'RECLAMAÃÃO ABUSO PROD.',  'RECLAMAÃÃO FAB. NÃO IDENTIF.',  'RECLAMAÃÃO HANS',  'CONTATO EXCELSIOR_RAC',  'CONTATO MERCADO DA CARNE',  'CONTATO JBS CARNES',  'NOTIFICAÃÃO',  'ReincidÃªncia',  'RECLAMAÃÃO FFO',  'RECLAMAÃÃO ABUSO DE PRODUTO',  'RECLAMAÃÃO VOSSKO',  'ReclamaÃ§Ã£o Contas Globais'  )   AND Especialista_rac IN ('Igor', 'Rejane')   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             GROUP BY [MES-DIA]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @LINHAS INT \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @LINHAS = (SELECT COUNT(1) FROM #TAB)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Tabela TABLE (\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INSERT @Tabela ( \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 VALOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 '||' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             GROUP BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE @Descricao VARCHAR(MAX)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DECLARE c CURSOR LOCAL FAST_FORWARD\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FOR\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 ORDER BY \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     Descricao ASC\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             OPEN c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             WHILE @@FETCH_STATUS = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             BEGIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 UPDATE  @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 SET     VALOR += ', [' + @Descricao + ']'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 FETCH c INTO @Descricao\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             END\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             CLOSE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DEALLOCATE c\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"              \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 TOP 1 Descricoes = REPLACE(STUFF(VALOR, 1, 0, ''),'||,','')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             INTO #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             FROM\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                 @Tabela\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SELECT @SQLStr = @SQLStr + (SELECT TOP 1 Descricoes FROM #TAB2)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TAB2\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr = LEFT(@SQLStr,len(@SQLStr))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr1 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr1 ='select * into #gabriel1 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], Nm_Manifestante_rac as [Manifestante], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [Nm_Manifestante_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] AND T.[Manifestante] = PT.[Manifestante] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], pt.[Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema], ''Total''as [Manifestante],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr2 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr2 ='select * into #gabriel2 from ( SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], ''total'' as [Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado,  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DECLARE @SQLStr3 VARCHAR(max)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3=''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             SET @SQLStr3 ='select * into #gabriel3 from ( SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT [Mercado._rac] as Mercado, Tipo_Problema_rac as [Tipo do Problema], [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+ \"             \t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [Mercado._rac], [Tipo_Problema_rac], [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' INNER JOIN #TOTAL T ON T.[Mercado] = PT.[Mercado] AND T.[Tipo do Problema] = PT.[Tipo do Problema] ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' UNION ALL ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' SELECT pt.[Mercado], pt.[Tipo do Problema], ''total'' as [Manifestante],   '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' , 0 as Total2 ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + ' FROM (SELECT ''Total'' as Mercado, ''Total'' as [Tipo do Problema],  [MES-DIA] as [MES-DIA], sum(Quant_rac) Quant_rac  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         from [v_base_rac] base with (nolock)  ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t' WHERE Mercado_rac = ''ME'' ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                    ' AND [Tipo_Atendimento_rac] in (  ''RECLAMAÃÃO'',  ''RECLAMAÃÃO ABUSO PROD.'',  ''RECLAMAÃÃO FAB. NÃO IDENTIF.'',  ''RECLAMAÃÃO HANS'',  ''CONTATO EXCELSIOR_RAC'',  ''CONTATO MERCADO DA CARNE'',  ''CONTATO JBS CARNES'',  ''NOTIFICAÃÃO'',  ''ReincidÃªncia'',  ''RECLAMAÃÃO FFO'',  ''RECLAMAÃÃO ABUSO DE PRODUTO'',  ''RECLAMAÃÃO VOSSKO'',  ''ReclamaÃ§Ã£o Contas Globais''  )   AND Especialista_rac IN (''Igor'', ''Rejane'')   '\t\t+\t\t\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t\r\n+ \"\t\t\t\t\t' and year(data_rac) = (select year(data) as data from v_maiorData) and month(data_rac) = (select month(data) as data from v_maiorData) AND Tipo_rac = ''Real'' \t\t'  +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"                     ' GROUP BY [MES-DIA] '+      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             '         ) sq PIVOT (sum(Quant_rac) FOR [MES-DIA] IN ('\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             + @SQLStr+')) AS pt ' +\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             ' ) TT '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t SET @SQLStr = @SQLStr1 + ' ' + @SQLStr2 + ' ' + @SQLStr3 + ' ' + \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT * INTO #TTTT FROM  ((select * from #gabriel1) union all (select * from #gabriel2) union all (select * from #gabriel3)) FF  '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' SELECT distinct * FROM #NIVEIS N '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' LEFT JOIN #TTTT T1 ON T1.Mercado = N.Mercado1 AND T1.[Tipo do Problema] = N.[Tipo do Problema] AND T1.Manifestante = N.Manifestante ' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t + ' ORDER BY 1, 8 DESC, 4, 2 DESC, 9 DESC, 5, 3 DESC, 10 DESC, 6 '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             PRINT @SQLStr\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             EXEC(@SQLStr)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALFINAL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"             DROP TABLE #TOTALF\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t DROP TABLE #RESULTADO\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #Mercado\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #TIPOPROBLEMA\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #MANIFESTANTE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"            DROP TABLE #BASE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n+ \"\t\t\tDROP TABLE #NIVEIS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\r\n];",{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","severity":1,"message":"409","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":17},{"ruleId":"408","severity":1,"message":"412","line":40,"column":11,"nodeType":"410","messageId":"411","endLine":40,"endColumn":29},{"ruleId":"408","severity":1,"message":"413","line":44,"column":12,"nodeType":"410","messageId":"411","endLine":44,"endColumn":27},{"ruleId":"408","severity":1,"message":"414","line":80,"column":11,"nodeType":"410","messageId":"411","endLine":80,"endColumn":20},{"ruleId":"408","severity":1,"message":"415","line":134,"column":11,"nodeType":"410","messageId":"411","endLine":134,"endColumn":22},{"ruleId":"408","severity":1,"message":"416","line":3,"column":5,"nodeType":"410","messageId":"411","endLine":3,"endColumn":41},{"ruleId":"408","severity":1,"message":"417","line":4,"column":5,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"418","line":5,"column":5,"nodeType":"410","messageId":"411","endLine":5,"endColumn":20},{"ruleId":"408","severity":1,"message":"419","line":6,"column":5,"nodeType":"410","messageId":"411","endLine":6,"endColumn":21},{"ruleId":"408","severity":1,"message":"420","line":7,"column":5,"nodeType":"410","messageId":"411","endLine":7,"endColumn":18},{"ruleId":"408","severity":1,"message":"421","line":8,"column":5,"nodeType":"410","messageId":"411","endLine":8,"endColumn":24},{"ruleId":"408","severity":1,"message":"422","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":16},{"ruleId":"423","severity":1,"message":"424","line":21,"column":1,"nodeType":"425","endLine":527,"endColumn":2},{"ruleId":"426","severity":1,"message":"427","line":25,"column":32,"nodeType":"428","endLine":25,"endColumn":79},{"ruleId":"426","severity":1,"message":"427","line":30,"column":21,"nodeType":"428","endLine":30,"endColumn":107},{"ruleId":"408","severity":1,"message":"429","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"430","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"431","line":1,"column":38,"nodeType":"410","messageId":"411","endLine":1,"endColumn":44},{"ruleId":"408","severity":1,"message":"432","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":23},{"ruleId":"408","severity":1,"message":"433","line":5,"column":10,"nodeType":"410","messageId":"411","endLine":5,"endColumn":16},{"ruleId":"408","severity":1,"message":"434","line":7,"column":10,"nodeType":"410","messageId":"411","endLine":7,"endColumn":19},{"ruleId":"408","severity":1,"message":"435","line":8,"column":10,"nodeType":"410","messageId":"411","endLine":8,"endColumn":18},{"ruleId":"408","severity":1,"message":"436","line":10,"column":8,"nodeType":"410","messageId":"411","endLine":10,"endColumn":13},{"ruleId":"408","severity":1,"message":"409","line":11,"column":8,"nodeType":"410","messageId":"411","endLine":11,"endColumn":17},{"ruleId":"408","severity":1,"message":"437","line":17,"column":10,"nodeType":"410","messageId":"411","endLine":17,"endColumn":21},{"ruleId":"408","severity":1,"message":"438","line":19,"column":10,"nodeType":"410","messageId":"411","endLine":19,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":20,"column":10,"nodeType":"410","messageId":"411","endLine":20,"endColumn":18},{"ruleId":"408","severity":1,"message":"440","line":22,"column":8,"nodeType":"410","messageId":"411","endLine":22,"endColumn":18},{"ruleId":"408","severity":1,"message":"441","line":35,"column":18,"nodeType":"410","messageId":"411","endLine":35,"endColumn":28},{"ruleId":"408","severity":1,"message":"442","line":45,"column":10,"nodeType":"410","messageId":"411","endLine":45,"endColumn":31},{"ruleId":"408","severity":1,"message":"443","line":55,"column":5,"nodeType":"410","messageId":"411","endLine":55,"endColumn":9},{"ruleId":"444","severity":1,"message":"445","line":95,"column":8,"nodeType":"446","endLine":95,"endColumn":10,"suggestions":"447"},{"ruleId":"448","severity":1,"message":"449","line":131,"column":28,"nodeType":"450","messageId":"451","endLine":131,"endColumn":30},{"ruleId":"448","severity":1,"message":"449","line":133,"column":34,"nodeType":"450","messageId":"451","endLine":133,"endColumn":36},{"ruleId":"448","severity":1,"message":"449","line":135,"column":33,"nodeType":"450","messageId":"451","endLine":135,"endColumn":35},{"ruleId":"448","severity":1,"message":"449","line":137,"column":33,"nodeType":"450","messageId":"451","endLine":137,"endColumn":35},{"ruleId":"408","severity":1,"message":"452","line":296,"column":11,"nodeType":"410","messageId":"411","endLine":296,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":381,"column":23,"nodeType":"450","messageId":"451","endLine":381,"endColumn":25},{"ruleId":"448","severity":1,"message":"449","line":422,"column":30,"nodeType":"450","messageId":"451","endLine":422,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":464,"column":30,"nodeType":"450","messageId":"451","endLine":464,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":506,"column":30,"nodeType":"450","messageId":"451","endLine":506,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":548,"column":30,"nodeType":"450","messageId":"451","endLine":548,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":590,"column":30,"nodeType":"450","messageId":"451","endLine":590,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":632,"column":30,"nodeType":"450","messageId":"451","endLine":632,"endColumn":32},{"ruleId":"448","severity":1,"message":"449","line":674,"column":30,"nodeType":"450","messageId":"451","endLine":674,"endColumn":32},{"ruleId":"408","severity":1,"message":"453","line":721,"column":11,"nodeType":"410","messageId":"411","endLine":721,"endColumn":22},{"ruleId":"408","severity":1,"message":"414","line":725,"column":11,"nodeType":"410","messageId":"411","endLine":725,"endColumn":20},{"ruleId":"408","severity":1,"message":"429","line":2,"column":17,"nodeType":"410","messageId":"411","endLine":2,"endColumn":25},{"ruleId":"408","severity":1,"message":"430","line":2,"column":27,"nodeType":"410","messageId":"411","endLine":2,"endColumn":36},{"ruleId":"408","severity":1,"message":"431","line":2,"column":38,"nodeType":"410","messageId":"411","endLine":2,"endColumn":44},{"ruleId":"408","severity":1,"message":"454","line":3,"column":8,"nodeType":"410","messageId":"411","endLine":3,"endColumn":23},{"ruleId":"408","severity":1,"message":"455","line":3,"column":27,"nodeType":"410","messageId":"411","endLine":3,"endColumn":39},{"ruleId":"408","severity":1,"message":"456","line":3,"column":41,"nodeType":"410","messageId":"411","endLine":3,"endColumn":61},{"ruleId":"408","severity":1,"message":"457","line":3,"column":63,"nodeType":"410","messageId":"411","endLine":3,"endColumn":74},{"ruleId":"408","severity":1,"message":"458","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":16},{"ruleId":"408","severity":1,"message":"432","line":7,"column":8,"nodeType":"410","messageId":"411","endLine":7,"endColumn":23},{"ruleId":"408","severity":1,"message":"433","line":8,"column":10,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"434","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":19},{"ruleId":"408","severity":1,"message":"435","line":11,"column":10,"nodeType":"410","messageId":"411","endLine":11,"endColumn":18},{"ruleId":"408","severity":1,"message":"436","line":13,"column":8,"nodeType":"410","messageId":"411","endLine":13,"endColumn":13},{"ruleId":"408","severity":1,"message":"409","line":14,"column":8,"nodeType":"410","messageId":"411","endLine":14,"endColumn":17},{"ruleId":"408","severity":1,"message":"438","line":22,"column":10,"nodeType":"410","messageId":"411","endLine":22,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":23,"column":10,"nodeType":"410","messageId":"411","endLine":23,"endColumn":18},{"ruleId":"408","severity":1,"message":"440","line":25,"column":8,"nodeType":"410","messageId":"411","endLine":25,"endColumn":18},{"ruleId":"408","severity":1,"message":"422","line":38,"column":10,"nodeType":"410","messageId":"411","endLine":38,"endColumn":16},{"ruleId":"408","severity":1,"message":"441","line":38,"column":18,"nodeType":"410","messageId":"411","endLine":38,"endColumn":28},{"ruleId":"408","severity":1,"message":"459","line":40,"column":9,"nodeType":"410","messageId":"411","endLine":40,"endColumn":28},{"ruleId":"408","severity":1,"message":"416","line":43,"column":5,"nodeType":"410","messageId":"411","endLine":43,"endColumn":41},{"ruleId":"408","severity":1,"message":"417","line":44,"column":5,"nodeType":"410","messageId":"411","endLine":44,"endColumn":21},{"ruleId":"408","severity":1,"message":"418","line":45,"column":5,"nodeType":"410","messageId":"411","endLine":45,"endColumn":20},{"ruleId":"408","severity":1,"message":"419","line":46,"column":5,"nodeType":"410","messageId":"411","endLine":46,"endColumn":21},{"ruleId":"408","severity":1,"message":"420","line":47,"column":5,"nodeType":"410","messageId":"411","endLine":47,"endColumn":18},{"ruleId":"408","severity":1,"message":"442","line":51,"column":10,"nodeType":"410","messageId":"411","endLine":51,"endColumn":31},{"ruleId":"408","severity":1,"message":"460","line":54,"column":10,"nodeType":"410","messageId":"411","endLine":54,"endColumn":20},{"ruleId":"408","severity":1,"message":"461","line":56,"column":8,"nodeType":"410","messageId":"411","endLine":56,"endColumn":14},{"ruleId":"408","severity":1,"message":"443","line":65,"column":5,"nodeType":"410","messageId":"411","endLine":65,"endColumn":9},{"ruleId":"448","severity":1,"message":"449","line":96,"column":35,"nodeType":"450","messageId":"451","endLine":96,"endColumn":37},{"ruleId":"408","severity":1,"message":"462","line":293,"column":10,"nodeType":"410","messageId":"411","endLine":293,"endColumn":23},{"ruleId":"408","severity":1,"message":"463","line":293,"column":25,"nodeType":"410","messageId":"411","endLine":293,"endColumn":41},{"ruleId":"408","severity":1,"message":"464","line":390,"column":10,"nodeType":"410","messageId":"411","endLine":390,"endColumn":45},{"ruleId":"408","severity":1,"message":"465","line":390,"column":47,"nodeType":"410","messageId":"411","endLine":390,"endColumn":85},{"ruleId":"408","severity":1,"message":"466","line":391,"column":10,"nodeType":"410","messageId":"411","endLine":391,"endColumn":47},{"ruleId":"408","severity":1,"message":"467","line":391,"column":49,"nodeType":"410","messageId":"411","endLine":391,"endColumn":89},{"ruleId":"408","severity":1,"message":"468","line":413,"column":10,"nodeType":"410","messageId":"411","endLine":413,"endColumn":35},{"ruleId":"408","severity":1,"message":"469","line":413,"column":37,"nodeType":"410","messageId":"411","endLine":413,"endColumn":65},{"ruleId":"408","severity":1,"message":"470","line":419,"column":10,"nodeType":"410","messageId":"411","endLine":419,"endColumn":35},{"ruleId":"408","severity":1,"message":"471","line":419,"column":37,"nodeType":"410","messageId":"411","endLine":419,"endColumn":65},{"ruleId":"408","severity":1,"message":"472","line":425,"column":10,"nodeType":"410","messageId":"411","endLine":425,"endColumn":37},{"ruleId":"408","severity":1,"message":"473","line":425,"column":39,"nodeType":"410","messageId":"411","endLine":425,"endColumn":69},{"ruleId":"408","severity":1,"message":"474","line":431,"column":10,"nodeType":"410","messageId":"411","endLine":431,"endColumn":34},{"ruleId":"408","severity":1,"message":"475","line":431,"column":36,"nodeType":"410","messageId":"411","endLine":431,"endColumn":63},{"ruleId":"408","severity":1,"message":"476","line":437,"column":10,"nodeType":"410","messageId":"411","endLine":437,"endColumn":40},{"ruleId":"408","severity":1,"message":"477","line":437,"column":42,"nodeType":"410","messageId":"411","endLine":437,"endColumn":75},{"ruleId":"408","severity":1,"message":"478","line":443,"column":10,"nodeType":"410","messageId":"411","endLine":443,"endColumn":34},{"ruleId":"408","severity":1,"message":"479","line":443,"column":36,"nodeType":"410","messageId":"411","endLine":443,"endColumn":63},{"ruleId":"408","severity":1,"message":"480","line":446,"column":10,"nodeType":"410","messageId":"411","endLine":446,"endColumn":31},{"ruleId":"408","severity":1,"message":"481","line":446,"column":33,"nodeType":"410","messageId":"411","endLine":446,"endColumn":57},{"ruleId":"408","severity":1,"message":"482","line":449,"column":10,"nodeType":"410","messageId":"411","endLine":449,"endColumn":39},{"ruleId":"408","severity":1,"message":"483","line":449,"column":41,"nodeType":"410","messageId":"411","endLine":449,"endColumn":73},{"ruleId":"408","severity":1,"message":"484","line":452,"column":10,"nodeType":"410","messageId":"411","endLine":452,"endColumn":42},{"ruleId":"408","severity":1,"message":"485","line":452,"column":44,"nodeType":"410","messageId":"411","endLine":452,"endColumn":79},{"ruleId":"408","severity":1,"message":"486","line":455,"column":10,"nodeType":"410","messageId":"411","endLine":455,"endColumn":50},{"ruleId":"408","severity":1,"message":"487","line":455,"column":52,"nodeType":"410","messageId":"411","endLine":455,"endColumn":95},{"ruleId":"408","severity":1,"message":"488","line":458,"column":10,"nodeType":"410","messageId":"411","endLine":458,"endColumn":44},{"ruleId":"408","severity":1,"message":"489","line":458,"column":46,"nodeType":"410","messageId":"411","endLine":458,"endColumn":83},{"ruleId":"408","severity":1,"message":"490","line":489,"column":10,"nodeType":"410","messageId":"411","endLine":489,"endColumn":29},{"ruleId":"408","severity":1,"message":"491","line":489,"column":31,"nodeType":"410","messageId":"411","endLine":489,"endColumn":53},{"ruleId":"408","severity":1,"message":"492","line":497,"column":10,"nodeType":"410","messageId":"411","endLine":497,"endColumn":24},{"ruleId":"408","severity":1,"message":"493","line":497,"column":26,"nodeType":"410","messageId":"411","endLine":497,"endColumn":43},{"ruleId":"408","severity":1,"message":"494","line":500,"column":10,"nodeType":"410","messageId":"411","endLine":500,"endColumn":29},{"ruleId":"408","severity":1,"message":"495","line":500,"column":31,"nodeType":"410","messageId":"411","endLine":500,"endColumn":53},{"ruleId":"408","severity":1,"message":"496","line":507,"column":10,"nodeType":"410","messageId":"411","endLine":507,"endColumn":39},{"ruleId":"408","severity":1,"message":"497","line":514,"column":10,"nodeType":"410","messageId":"411","endLine":514,"endColumn":34},{"ruleId":"408","severity":1,"message":"498","line":521,"column":10,"nodeType":"410","messageId":"411","endLine":521,"endColumn":34},{"ruleId":"408","severity":1,"message":"499","line":528,"column":10,"nodeType":"410","messageId":"411","endLine":528,"endColumn":34},{"ruleId":"408","severity":1,"message":"500","line":535,"column":10,"nodeType":"410","messageId":"411","endLine":535,"endColumn":37},{"ruleId":"408","severity":1,"message":"501","line":542,"column":10,"nodeType":"410","messageId":"411","endLine":542,"endColumn":34},{"ruleId":"408","severity":1,"message":"502","line":549,"column":10,"nodeType":"410","messageId":"411","endLine":549,"endColumn":38},{"ruleId":"408","severity":1,"message":"503","line":655,"column":5,"nodeType":"410","messageId":"411","endLine":655,"endColumn":15},{"ruleId":"448","severity":1,"message":"449","line":669,"column":53,"nodeType":"450","messageId":"451","endLine":669,"endColumn":55},{"ruleId":"448","severity":1,"message":"449","line":671,"column":59,"nodeType":"450","messageId":"451","endLine":671,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":673,"column":59,"nodeType":"450","messageId":"451","endLine":673,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":675,"column":59,"nodeType":"450","messageId":"451","endLine":675,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":677,"column":59,"nodeType":"450","messageId":"451","endLine":677,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":691,"column":21,"nodeType":"410","messageId":"506","endLine":691,"endColumn":22},{"ruleId":"504","severity":1,"message":"507","line":692,"column":25,"nodeType":"410","messageId":"506","endLine":692,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":693,"column":57,"nodeType":"450","messageId":"451","endLine":693,"endColumn":59},{"ruleId":"448","severity":1,"message":"449","line":695,"column":63,"nodeType":"450","messageId":"451","endLine":695,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":697,"column":63,"nodeType":"450","messageId":"451","endLine":697,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":703,"column":70,"nodeType":"450","messageId":"451","endLine":703,"endColumn":72},{"ruleId":"448","severity":1,"message":"449","line":703,"column":137,"nodeType":"450","messageId":"451","endLine":703,"endColumn":139},{"ruleId":"448","severity":1,"message":"449","line":726,"column":53,"nodeType":"450","messageId":"451","endLine":726,"endColumn":55},{"ruleId":"448","severity":1,"message":"449","line":728,"column":59,"nodeType":"450","messageId":"451","endLine":728,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":730,"column":59,"nodeType":"450","messageId":"451","endLine":730,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":732,"column":59,"nodeType":"450","messageId":"451","endLine":732,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":734,"column":59,"nodeType":"450","messageId":"451","endLine":734,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":748,"column":21,"nodeType":"410","messageId":"506","endLine":748,"endColumn":22},{"ruleId":"504","severity":1,"message":"507","line":749,"column":25,"nodeType":"410","messageId":"506","endLine":749,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":750,"column":57,"nodeType":"450","messageId":"451","endLine":750,"endColumn":59},{"ruleId":"448","severity":1,"message":"449","line":752,"column":63,"nodeType":"450","messageId":"451","endLine":752,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":754,"column":63,"nodeType":"450","messageId":"451","endLine":754,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":763,"column":70,"nodeType":"450","messageId":"451","endLine":763,"endColumn":72},{"ruleId":"448","severity":1,"message":"449","line":763,"column":137,"nodeType":"450","messageId":"451","endLine":763,"endColumn":139},{"ruleId":"448","severity":1,"message":"449","line":788,"column":53,"nodeType":"450","messageId":"451","endLine":788,"endColumn":55},{"ruleId":"448","severity":1,"message":"449","line":790,"column":59,"nodeType":"450","messageId":"451","endLine":790,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":792,"column":59,"nodeType":"450","messageId":"451","endLine":792,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":794,"column":59,"nodeType":"450","messageId":"451","endLine":794,"endColumn":61},{"ruleId":"448","severity":1,"message":"449","line":796,"column":59,"nodeType":"450","messageId":"451","endLine":796,"endColumn":61},{"ruleId":"504","severity":1,"message":"505","line":809,"column":21,"nodeType":"410","messageId":"506","endLine":809,"endColumn":22},{"ruleId":"504","severity":1,"message":"507","line":810,"column":25,"nodeType":"410","messageId":"506","endLine":810,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":811,"column":57,"nodeType":"450","messageId":"451","endLine":811,"endColumn":59},{"ruleId":"448","severity":1,"message":"449","line":813,"column":63,"nodeType":"450","messageId":"451","endLine":813,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":815,"column":63,"nodeType":"450","messageId":"451","endLine":815,"endColumn":65},{"ruleId":"448","severity":1,"message":"449","line":821,"column":70,"nodeType":"450","messageId":"451","endLine":821,"endColumn":72},{"ruleId":"448","severity":1,"message":"449","line":821,"column":137,"nodeType":"450","messageId":"451","endLine":821,"endColumn":139},{"ruleId":"508","severity":1,"message":"509","line":876,"column":144,"nodeType":"510","messageId":"511","endLine":876,"endColumn":145,"suggestions":"512"},{"ruleId":"508","severity":1,"message":"509","line":876,"column":156,"nodeType":"510","messageId":"511","endLine":876,"endColumn":157,"suggestions":"513"},{"ruleId":"508","severity":1,"message":"509","line":877,"column":138,"nodeType":"510","messageId":"511","endLine":877,"endColumn":139,"suggestions":"514"},{"ruleId":"508","severity":1,"message":"509","line":877,"column":150,"nodeType":"510","messageId":"511","endLine":877,"endColumn":151,"suggestions":"515"},{"ruleId":"508","severity":1,"message":"509","line":882,"column":138,"nodeType":"510","messageId":"511","endLine":882,"endColumn":139,"suggestions":"516"},{"ruleId":"508","severity":1,"message":"509","line":882,"column":146,"nodeType":"510","messageId":"511","endLine":882,"endColumn":147,"suggestions":"517"},{"ruleId":"508","severity":1,"message":"509","line":883,"column":132,"nodeType":"510","messageId":"511","endLine":883,"endColumn":133,"suggestions":"518"},{"ruleId":"508","severity":1,"message":"509","line":883,"column":140,"nodeType":"510","messageId":"511","endLine":883,"endColumn":141,"suggestions":"519"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":149,"nodeType":"510","messageId":"511","endLine":890,"endColumn":150,"suggestions":"520"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":163,"nodeType":"510","messageId":"511","endLine":890,"endColumn":164,"suggestions":"521"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":166,"nodeType":"510","messageId":"511","endLine":890,"endColumn":167,"suggestions":"522"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":180,"nodeType":"510","messageId":"511","endLine":890,"endColumn":181,"suggestions":"523"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":183,"nodeType":"510","messageId":"511","endLine":890,"endColumn":184,"suggestions":"524"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":197,"nodeType":"510","messageId":"511","endLine":890,"endColumn":198,"suggestions":"525"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":201,"nodeType":"510","messageId":"511","endLine":890,"endColumn":202,"suggestions":"526"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":209,"nodeType":"510","messageId":"511","endLine":890,"endColumn":210,"suggestions":"527"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":212,"nodeType":"510","messageId":"511","endLine":890,"endColumn":213,"suggestions":"528"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":220,"nodeType":"510","messageId":"511","endLine":890,"endColumn":221,"suggestions":"529"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":240,"nodeType":"510","messageId":"511","endLine":890,"endColumn":241,"suggestions":"530"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":252,"nodeType":"510","messageId":"511","endLine":890,"endColumn":253,"suggestions":"531"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":255,"nodeType":"510","messageId":"511","endLine":890,"endColumn":256,"suggestions":"532"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":263,"nodeType":"510","messageId":"511","endLine":890,"endColumn":264,"suggestions":"533"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":267,"nodeType":"510","messageId":"511","endLine":890,"endColumn":268,"suggestions":"534"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":285,"nodeType":"510","messageId":"511","endLine":890,"endColumn":286,"suggestions":"535"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":289,"nodeType":"510","messageId":"511","endLine":890,"endColumn":290,"suggestions":"536"},{"ruleId":"508","severity":1,"message":"509","line":890,"column":299,"nodeType":"510","messageId":"511","endLine":890,"endColumn":300,"suggestions":"537"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":143,"nodeType":"510","messageId":"511","endLine":891,"endColumn":144,"suggestions":"538"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":157,"nodeType":"510","messageId":"511","endLine":891,"endColumn":158,"suggestions":"539"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":160,"nodeType":"510","messageId":"511","endLine":891,"endColumn":161,"suggestions":"540"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":174,"nodeType":"510","messageId":"511","endLine":891,"endColumn":175,"suggestions":"541"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":177,"nodeType":"510","messageId":"511","endLine":891,"endColumn":178,"suggestions":"542"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":191,"nodeType":"510","messageId":"511","endLine":891,"endColumn":192,"suggestions":"543"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":195,"nodeType":"510","messageId":"511","endLine":891,"endColumn":196,"suggestions":"544"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":203,"nodeType":"510","messageId":"511","endLine":891,"endColumn":204,"suggestions":"545"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":206,"nodeType":"510","messageId":"511","endLine":891,"endColumn":207,"suggestions":"546"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":214,"nodeType":"510","messageId":"511","endLine":891,"endColumn":215,"suggestions":"547"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":234,"nodeType":"510","messageId":"511","endLine":891,"endColumn":235,"suggestions":"548"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":246,"nodeType":"510","messageId":"511","endLine":891,"endColumn":247,"suggestions":"549"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":249,"nodeType":"510","messageId":"511","endLine":891,"endColumn":250,"suggestions":"550"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":257,"nodeType":"510","messageId":"511","endLine":891,"endColumn":258,"suggestions":"551"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":261,"nodeType":"510","messageId":"511","endLine":891,"endColumn":262,"suggestions":"552"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":279,"nodeType":"510","messageId":"511","endLine":891,"endColumn":280,"suggestions":"553"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":283,"nodeType":"510","messageId":"511","endLine":891,"endColumn":284,"suggestions":"554"},{"ruleId":"508","severity":1,"message":"509","line":891,"column":293,"nodeType":"510","messageId":"511","endLine":891,"endColumn":294,"suggestions":"555"},{"ruleId":"508","severity":1,"message":"509","line":913,"column":135,"nodeType":"510","messageId":"511","endLine":913,"endColumn":136,"suggestions":"556"},{"ruleId":"508","severity":1,"message":"509","line":913,"column":141,"nodeType":"510","messageId":"511","endLine":913,"endColumn":142,"suggestions":"557"},{"ruleId":"508","severity":1,"message":"509","line":914,"column":138,"nodeType":"510","messageId":"511","endLine":914,"endColumn":139,"suggestions":"558"},{"ruleId":"508","severity":1,"message":"509","line":914,"column":144,"nodeType":"510","messageId":"511","endLine":914,"endColumn":145,"suggestions":"559"},{"ruleId":"444","severity":1,"message":"560","line":1053,"column":8,"nodeType":"446","endLine":1053,"endColumn":10,"suggestions":"561"},{"ruleId":"448","severity":1,"message":"449","line":1236,"column":32,"nodeType":"450","messageId":"451","endLine":1236,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":1456,"column":24,"nodeType":"450","messageId":"451","endLine":1456,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":1457,"column":71,"nodeType":"450","messageId":"451","endLine":1457,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1458,"column":31,"nodeType":"450","messageId":"451","endLine":1458,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1459,"column":71,"nodeType":"450","messageId":"451","endLine":1459,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1460,"column":31,"nodeType":"450","messageId":"451","endLine":1460,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1461,"column":71,"nodeType":"450","messageId":"451","endLine":1461,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1462,"column":31,"nodeType":"450","messageId":"451","endLine":1462,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1463,"column":71,"nodeType":"450","messageId":"451","endLine":1463,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1565,"column":32,"nodeType":"450","messageId":"451","endLine":1565,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":1566,"column":69,"nodeType":"450","messageId":"451","endLine":1566,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":1567,"column":69,"nodeType":"450","messageId":"451","endLine":1567,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":1702,"column":24,"nodeType":"450","messageId":"451","endLine":1702,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":1703,"column":71,"nodeType":"450","messageId":"451","endLine":1703,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1704,"column":31,"nodeType":"450","messageId":"451","endLine":1704,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1705,"column":71,"nodeType":"450","messageId":"451","endLine":1705,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1706,"column":31,"nodeType":"450","messageId":"451","endLine":1706,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1707,"column":71,"nodeType":"450","messageId":"451","endLine":1707,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1708,"column":31,"nodeType":"450","messageId":"451","endLine":1708,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1709,"column":71,"nodeType":"450","messageId":"451","endLine":1709,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1811,"column":32,"nodeType":"450","messageId":"451","endLine":1811,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":1812,"column":69,"nodeType":"450","messageId":"451","endLine":1812,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":1813,"column":69,"nodeType":"450","messageId":"451","endLine":1813,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":1847,"column":24,"nodeType":"450","messageId":"451","endLine":1847,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":1955,"column":24,"nodeType":"450","messageId":"451","endLine":1955,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":1956,"column":71,"nodeType":"450","messageId":"451","endLine":1956,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1957,"column":31,"nodeType":"450","messageId":"451","endLine":1957,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1958,"column":71,"nodeType":"450","messageId":"451","endLine":1958,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1959,"column":31,"nodeType":"450","messageId":"451","endLine":1959,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1960,"column":71,"nodeType":"450","messageId":"451","endLine":1960,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":1961,"column":31,"nodeType":"450","messageId":"451","endLine":1961,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":1962,"column":71,"nodeType":"450","messageId":"451","endLine":1962,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":2064,"column":32,"nodeType":"450","messageId":"451","endLine":2064,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":2065,"column":69,"nodeType":"450","messageId":"451","endLine":2065,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":2066,"column":69,"nodeType":"450","messageId":"451","endLine":2066,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":2100,"column":24,"nodeType":"450","messageId":"451","endLine":2100,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":2100,"column":44,"nodeType":"450","messageId":"451","endLine":2100,"endColumn":46},{"ruleId":"448","severity":1,"message":"449","line":2100,"column":74,"nodeType":"450","messageId":"451","endLine":2100,"endColumn":76},{"ruleId":"448","severity":1,"message":"449","line":2205,"column":24,"nodeType":"450","messageId":"451","endLine":2205,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":2206,"column":71,"nodeType":"450","messageId":"451","endLine":2206,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":2207,"column":31,"nodeType":"450","messageId":"451","endLine":2207,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":2208,"column":71,"nodeType":"450","messageId":"451","endLine":2208,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":2209,"column":31,"nodeType":"450","messageId":"451","endLine":2209,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":2210,"column":71,"nodeType":"450","messageId":"451","endLine":2210,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":2211,"column":31,"nodeType":"450","messageId":"451","endLine":2211,"endColumn":33},{"ruleId":"448","severity":1,"message":"449","line":2212,"column":71,"nodeType":"450","messageId":"451","endLine":2212,"endColumn":73},{"ruleId":"448","severity":1,"message":"449","line":2310,"column":32,"nodeType":"450","messageId":"451","endLine":2310,"endColumn":34},{"ruleId":"448","severity":1,"message":"449","line":2311,"column":69,"nodeType":"450","messageId":"451","endLine":2311,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":2312,"column":69,"nodeType":"450","messageId":"451","endLine":2312,"endColumn":71},{"ruleId":"448","severity":1,"message":"449","line":2345,"column":24,"nodeType":"450","messageId":"451","endLine":2345,"endColumn":26},{"ruleId":"448","severity":1,"message":"449","line":2345,"column":44,"nodeType":"450","messageId":"451","endLine":2345,"endColumn":46},{"ruleId":"408","severity":1,"message":"562","line":2431,"column":13,"nodeType":"410","messageId":"411","endLine":2431,"endColumn":20},{"ruleId":"563","severity":1,"message":"564","line":2455,"column":55,"nodeType":"450","messageId":"565","endLine":2455,"endColumn":62},{"ruleId":"408","severity":1,"message":"566","line":2521,"column":11,"nodeType":"410","messageId":"411","endLine":2521,"endColumn":25},{"ruleId":"448","severity":1,"message":"449","line":3162,"column":23,"nodeType":"450","messageId":"451","endLine":3162,"endColumn":25},{"ruleId":"448","severity":1,"message":"449","line":3176,"column":27,"nodeType":"450","messageId":"451","endLine":3176,"endColumn":29},{"ruleId":"448","severity":1,"message":"449","line":3197,"column":23,"nodeType":"450","messageId":"451","endLine":3197,"endColumn":25},{"ruleId":"448","severity":1,"message":"449","line":3211,"column":27,"nodeType":"450","messageId":"451","endLine":3211,"endColumn":29},{"ruleId":"408","severity":1,"message":"567","line":3239,"column":13,"nodeType":"410","messageId":"411","endLine":3239,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3523,"column":13,"nodeType":"410","messageId":"411","endLine":3523,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3551,"column":13,"nodeType":"410","messageId":"411","endLine":3551,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3577,"column":13,"nodeType":"410","messageId":"411","endLine":3577,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3603,"column":13,"nodeType":"410","messageId":"411","endLine":3603,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3629,"column":13,"nodeType":"410","messageId":"411","endLine":3629,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3655,"column":13,"nodeType":"410","messageId":"411","endLine":3655,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3681,"column":13,"nodeType":"410","messageId":"411","endLine":3681,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3709,"column":13,"nodeType":"410","messageId":"411","endLine":3709,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3735,"column":13,"nodeType":"410","messageId":"411","endLine":3735,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3761,"column":13,"nodeType":"410","messageId":"411","endLine":3761,"endColumn":20},{"ruleId":"408","severity":1,"message":"567","line":3787,"column":13,"nodeType":"410","messageId":"411","endLine":3787,"endColumn":20},{"ruleId":"408","severity":1,"message":"568","line":3830,"column":11,"nodeType":"410","messageId":"411","endLine":3830,"endColumn":40},{"ruleId":"408","severity":1,"message":"569","line":4340,"column":11,"nodeType":"410","messageId":"411","endLine":4340,"endColumn":39},{"ruleId":"408","severity":1,"message":"570","line":6264,"column":13,"nodeType":"410","messageId":"411","endLine":6264,"endColumn":17},{"ruleId":"448","severity":1,"message":"449","line":6268,"column":25,"nodeType":"450","messageId":"451","endLine":6268,"endColumn":27},{"ruleId":"408","severity":1,"message":"571","line":6270,"column":13,"nodeType":"410","messageId":"411","endLine":6270,"endColumn":21},{"ruleId":"408","severity":1,"message":"572","line":6271,"column":13,"nodeType":"410","messageId":"411","endLine":6271,"endColumn":23},{"ruleId":"408","severity":1,"message":"453","line":6281,"column":11,"nodeType":"410","messageId":"411","endLine":6281,"endColumn":22},{"ruleId":"408","severity":1,"message":"414","line":6285,"column":11,"nodeType":"410","messageId":"411","endLine":6285,"endColumn":20},{"ruleId":"573","severity":1,"message":"574","line":6352,"column":25,"nodeType":"428","endLine":6352,"endColumn":29},{"ruleId":"404","replacedBy":"575"},{"ruleId":"406","replacedBy":"576"},{"ruleId":"423","severity":1,"message":"424","line":13,"column":1,"nodeType":"425","endLine":25,"endColumn":2},{"ruleId":"577","severity":1,"message":"578","line":18,"column":5,"nodeType":"579","messageId":"451","endLine":18,"endColumn":15},{"ruleId":"408","severity":1,"message":"580","line":53,"column":15,"nodeType":"410","messageId":"411","endLine":53,"endColumn":19},{"ruleId":"408","severity":1,"message":"581","line":99,"column":23,"nodeType":"410","messageId":"411","endLine":99,"endColumn":31},{"ruleId":"426","severity":1,"message":"427","line":216,"column":78,"nodeType":"428","endLine":216,"endColumn":89},{"ruleId":"423","severity":1,"message":"424","line":13,"column":1,"nodeType":"425","endLine":59,"endColumn":2},{"ruleId":"408","severity":1,"message":"582","line":1,"column":7,"nodeType":"410","messageId":"411","endLine":1,"endColumn":26},"no-native-reassign",["583"],"no-negated-in-lhs",["584"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'userKpiDigitalTemp' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'showError' is assigned a value but never used.","'loginfooter' is assigned a value but never used.","'SetDateInJsonArrayToQueryOverObjects' is defined but never used.","'SetParamsToQuery' is defined but never used.","'AddLineMockData' is defined but never used.","'AddDataByFilters' is defined but never used.","'GetIndicators' is defined but never used.","'AddItensToJsonArray' is defined but never used.","'months' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ChartDataLabels' is defined but never used.","'Button' is defined but never used.","'InputText' is defined but never used.","'Password' is defined but never used.","'axios' is defined but never used.","'ColumnGroup' is defined but never used.","'Ripple' is defined but never used.","'Dropdown' is defined but never used.","'classNames' is defined but never used.","'colorsBars' is defined but never used.","'LoadingSkeletonSquare' is defined but never used.","'cors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'GraficoCE_Total', 'GraficoNNCLog_Total', 'GraficoNNCMP_Total', 'GraficoRAC_Aves', 'GraficoRAC_Outros', 'GraficoRAC_Preparados', 'GraficoRAC_Suinos', and 'GraficoRAC_Total'. Either include them or remove the dependency array.","ArrayExpression",["585"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DataTableColGroupDemo' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'ReactDOM' is defined but never used.","'testeSQLPivotRollup' is defined but never used.","'LineWeight' is defined but never used.","'Funcao' is defined but never used.","'responseTable' is assigned a value but never used.","'setresponseTable' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisFamilia' is assigned a value but never used.","'TableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'setTableRacRACDetalhesEspeciaisAcumulado' is assigned a value but never used.","'TableRacRACDetalhesInseto' is assigned a value but never used.","'setTableRacRACDetalhesInseto' is assigned a value but never used.","'TableRacRACDetalhesCabelo' is assigned a value but never used.","'setTableRacRACDetalhesCabelo' is assigned a value but never used.","'TableRacRACDetalhesPlastico' is assigned a value but never used.","'setTableRacRACDetalhesPlastico' is assigned a value but never used.","'TableRacRACDetalhesMetal' is assigned a value but never used.","'setTableRacRACDetalhesMetal' is assigned a value but never used.","'TableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'setTableRacRACDetalhesIntoxicacao' is assigned a value but never used.","'TableRacRACDetalhesLarva' is assigned a value but never used.","'setTableRacRACDetalhesLarva' is assigned a value but never used.","'TableRacRACDetalhesCE' is assigned a value but never used.","'setTableRacRACDetalhesCE' is assigned a value but never used.","'TableRacRACDetalhesCEInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerente' is assigned a value but never used.","'TableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCENaoInerente' is assigned a value but never used.","'TableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesCEInerenteNaoInerente' is assigned a value but never used.","'TableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'setTableRacRACDetalhesHBCENaoInerente' is assigned a value but never used.","'TableNNCLogEvolucao' is assigned a value but never used.","'setTableNNCLogEvolucao' is assigned a value but never used.","'TableNNCTotais' is assigned a value but never used.","'setTableNNCTotais' is assigned a value but never used.","'TableNNCEvolucaoDia' is assigned a value but never used.","'setTableNNCEvolucaoDia' is assigned a value but never used.","'responseGraficoNNCAvesPesadas' is assigned a value but never used.","'responseGraficoNNCAvesRS' is assigned a value but never used.","'responseGraficoNNCAvesSP' is assigned a value but never used.","'responseGraficoNNCAvesPR' is assigned a value but never used.","'responseGraficoNNCAvesLeves' is assigned a value but never used.","'responseGraficoNNCSuinos' is assigned a value but never used.","'responseGraficoNNCPreparados' is assigned a value but never used.","'whereRACCE' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["586","587"],["588","589"],["590","591"],["592","593"],["594","595"],["596","597"],["598","599"],["600","601"],["602","603"],["604","605"],["606","607"],["608","609"],["610","611"],["612","613"],["614","615"],["616","617"],["618","619"],["620","621"],["622","623"],["624","625"],["626","627"],["628","629"],["630","631"],["632","633"],["634","635"],["636","637"],["638","639"],["640","641"],["642","643"],["644","645"],["646","647"],["648","649"],["650","651"],["652","653"],["654","655"],["656","657"],["658","659"],["660","661"],["662","663"],["664","665"],["666","667"],["668","669"],["670","671"],["672","673"],["674","675"],["676","677"],["678","679"],["680","681"],"React Hook React.useEffect has missing dependencies: 'GraficoCETotal', 'GraficoCETotalAvesLeves', 'GraficoCETotalAvesPesadas', 'GraficoCETotalAvesPesadasPR', 'GraficoCETotalAvesPesadasRS', 'GraficoCETotalAvesPesadasSP', 'GraficoCETotalPreparados', 'GraficoCETotalSuinos', 'GraficoNCCMP', 'GraficoNCCMPAvesLeves', 'GraficoNCCMPAvesPesadas', 'GraficoNCCMPAvesPesadasPR', 'GraficoNCCMPAvesPesadasRS', 'GraficoNCCMPAvesPesadasSP', 'GraficoNCCMPPreparados', 'GraficoNCCMPSuinos', 'GraficoNNCAvesLeves', 'GraficoNNCAvesLevesProblemas', 'GraficoNNCAvesLevesUnidades', 'GraficoNNCAvesPR', 'GraficoNNCAvesPRProblemas', 'GraficoNNCAvesPRUnidades', 'GraficoNNCAvesPesadas', 'GraficoNNCAvesPesadasProblemas', 'GraficoNNCAvesPesadasUnidades', 'GraficoNNCAvesRS', 'GraficoNNCAvesRSProblemas', 'GraficoNNCAvesRSUnidades', 'GraficoNNCAvesSP', 'GraficoNNCAvesSPProblemas', 'GraficoNNCAvesSPUnidades', 'GraficoNNCCEInerente', 'GraficoNNCCEMetal', 'GraficoNNCCENaoInerente', 'GraficoNNCCEOssos', 'GraficoNNCCEPlastico', 'GraficoNNCCETotal', 'GraficoNNCLogDetalhesAves', 'GraficoNNCLogDetalhesPreparados', 'GraficoNNCLogDetalhesSuinos', 'GraficoNNCLogDetalhesTotal', 'GraficoNNCMPTotalCE', 'GraficoNNCMPTotalCEAvesLeves', 'GraficoNNCMPTotalCEAvesPesadas', 'GraficoNNCMPTotalCEAvesPesadasPR', 'GraficoNNCMPTotalCEAvesPesadasRS', 'GraficoNNCMPTotalCEAvesPesadasSP', 'GraficoNNCMPTotalCEPreparados', 'GraficoNNCMPTotalCESuinos', 'GraficoNNCPreparados', 'GraficoNNCPreparadosProblemas', 'GraficoNNCPreparadosUnidades', 'GraficoNNCSuinos', 'GraficoNNCSuinosProblemas', 'GraficoNNCSuinosUnidades', 'GraficoRAC', 'GraficoRACAvesLeves', 'GraficoRACAvesPesadas', 'GraficoRACAvesPesadasPR', 'GraficoRACAvesPesadasRS', 'GraficoRACAvesPesadasSP', 'GraficoRACDetalhesAC', 'GraficoRACDetalhesAberturaPDV', 'GraficoRACDetalhesCE', 'GraficoRACDetalhesCEInerente', 'GraficoRACDetalhesCENaoInerente', 'GraficoRACDetalhesCEPlastico', 'GraficoRACDetalhesCabelo', 'GraficoRACDetalhesCritica', 'GraficoRACDetalhesDoc', 'GraficoRACDetalhesEspeciais', 'GraficoRACDetalhesFFO', 'GraficoRACDetalhesInseto', 'GraficoRACDetalhesIntoxicacao', 'GraficoRACDetalhesLarva', 'GraficoRACDetalhesLogME', 'GraficoRACDetalhesLogMI', 'GraficoRACDetalhesMassatake', 'GraficoRACDetalhesMetal', 'GraficoRACDetalhesPDV', 'GraficoRACDetalhesPlastico', 'GraficoRACDetalhesTT', 'GraficoRACDetalhesTerceiro', 'GraficoRACME', 'GraficoRACMI', 'GraficoRACPreparados', 'GraficoRACProblemasAvesLeves', 'GraficoRACProblemasAvesPesadas', 'GraficoRACProblemasAvesPesadasPR', 'GraficoRACProblemasAvesPesadasRS', 'GraficoRACProblemasAvesPesadasSP', 'GraficoRACProblemasPreparados', 'GraficoRACProblemasSuinos', 'GraficoRACSuinos', 'GraficoRACTotalCE', 'GraficoRACTotalCEAvesLeves', 'GraficoRACTotalCEAvesPesadas', 'GraficoRACTotalCEAvesPesadasPR', 'GraficoRACTotalCEAvesPesadasRS', 'GraficoRACTotalCEAvesPesadasSP', 'GraficoRACTotalCEPreparados', 'GraficoRACTotalCESuinos', 'GraficoRACUnidadesAvesLeves', 'GraficoRACUnidadesAvesPesadas', 'GraficoRACUnidadesAvesPesadasPR', 'GraficoRACUnidadesAvesPesadasRS', 'GraficoRACUnidadesAvesPesadasSP', 'GraficoRACUnidadesPreparados', 'GraficoRACUnidadesSuinos', 'buscarDadosTable', 'chamarAPI', 'whereNNCMP', and 'whereRACPreparados'. Either include them or remove the dependency array.",["682"],"'groupBy' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'DataTableRACME' is assigned a value but never used.","'retorno' is assigned a value but never used.","'DataTableNNCEvolucaoMesTotais' is assigned a value but never used.","'buscarTabelaRACUnicoProblema' is assigned a value but never used.","'parm' is assigned a value but never used.","'datasets' is assigned a value but never used.","'indicators' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["583"],["584"],"no-dupe-keys","Duplicate key 'SelectRole'.","ObjectExpression","'user' is assigned a value but never used.","'response' is assigned a value but never used.","'testeSQLPivotRollup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"683","fix":"684"},{"messageId":"685","fix":"686","desc":"687"},{"messageId":"688","fix":"689","desc":"690"},{"messageId":"685","fix":"691","desc":"687"},{"messageId":"688","fix":"692","desc":"690"},{"messageId":"685","fix":"693","desc":"687"},{"messageId":"688","fix":"694","desc":"690"},{"messageId":"685","fix":"695","desc":"687"},{"messageId":"688","fix":"696","desc":"690"},{"messageId":"685","fix":"697","desc":"687"},{"messageId":"688","fix":"698","desc":"690"},{"messageId":"685","fix":"699","desc":"687"},{"messageId":"688","fix":"700","desc":"690"},{"messageId":"685","fix":"701","desc":"687"},{"messageId":"688","fix":"702","desc":"690"},{"messageId":"685","fix":"703","desc":"687"},{"messageId":"688","fix":"704","desc":"690"},{"messageId":"685","fix":"705","desc":"687"},{"messageId":"688","fix":"706","desc":"690"},{"messageId":"685","fix":"707","desc":"687"},{"messageId":"688","fix":"708","desc":"690"},{"messageId":"685","fix":"709","desc":"687"},{"messageId":"688","fix":"710","desc":"690"},{"messageId":"685","fix":"711","desc":"687"},{"messageId":"688","fix":"712","desc":"690"},{"messageId":"685","fix":"713","desc":"687"},{"messageId":"688","fix":"714","desc":"690"},{"messageId":"685","fix":"715","desc":"687"},{"messageId":"688","fix":"716","desc":"690"},{"messageId":"685","fix":"717","desc":"687"},{"messageId":"688","fix":"718","desc":"690"},{"messageId":"685","fix":"719","desc":"687"},{"messageId":"688","fix":"720","desc":"690"},{"messageId":"685","fix":"721","desc":"687"},{"messageId":"688","fix":"722","desc":"690"},{"messageId":"685","fix":"723","desc":"687"},{"messageId":"688","fix":"724","desc":"690"},{"messageId":"685","fix":"725","desc":"687"},{"messageId":"688","fix":"726","desc":"690"},{"messageId":"685","fix":"727","desc":"687"},{"messageId":"688","fix":"728","desc":"690"},{"messageId":"685","fix":"729","desc":"687"},{"messageId":"688","fix":"730","desc":"690"},{"messageId":"685","fix":"731","desc":"687"},{"messageId":"688","fix":"732","desc":"690"},{"messageId":"685","fix":"733","desc":"687"},{"messageId":"688","fix":"734","desc":"690"},{"messageId":"685","fix":"735","desc":"687"},{"messageId":"688","fix":"736","desc":"690"},{"messageId":"685","fix":"737","desc":"687"},{"messageId":"688","fix":"738","desc":"690"},{"messageId":"685","fix":"739","desc":"687"},{"messageId":"688","fix":"740","desc":"690"},{"messageId":"685","fix":"741","desc":"687"},{"messageId":"688","fix":"742","desc":"690"},{"messageId":"685","fix":"743","desc":"687"},{"messageId":"688","fix":"744","desc":"690"},{"messageId":"685","fix":"745","desc":"687"},{"messageId":"688","fix":"746","desc":"690"},{"messageId":"685","fix":"747","desc":"687"},{"messageId":"688","fix":"748","desc":"690"},{"messageId":"685","fix":"749","desc":"687"},{"messageId":"688","fix":"750","desc":"690"},{"messageId":"685","fix":"751","desc":"687"},{"messageId":"688","fix":"752","desc":"690"},{"messageId":"685","fix":"753","desc":"687"},{"messageId":"688","fix":"754","desc":"690"},{"messageId":"685","fix":"755","desc":"687"},{"messageId":"688","fix":"756","desc":"690"},{"messageId":"685","fix":"757","desc":"687"},{"messageId":"688","fix":"758","desc":"690"},{"messageId":"685","fix":"759","desc":"687"},{"messageId":"688","fix":"760","desc":"690"},{"messageId":"685","fix":"761","desc":"687"},{"messageId":"688","fix":"762","desc":"690"},{"messageId":"685","fix":"763","desc":"687"},{"messageId":"688","fix":"764","desc":"690"},{"messageId":"685","fix":"765","desc":"687"},{"messageId":"688","fix":"766","desc":"690"},{"messageId":"685","fix":"767","desc":"687"},{"messageId":"688","fix":"768","desc":"690"},{"messageId":"685","fix":"769","desc":"687"},{"messageId":"688","fix":"770","desc":"690"},{"messageId":"685","fix":"771","desc":"687"},{"messageId":"688","fix":"772","desc":"690"},{"messageId":"685","fix":"773","desc":"687"},{"messageId":"688","fix":"774","desc":"690"},{"messageId":"685","fix":"775","desc":"687"},{"messageId":"688","fix":"776","desc":"690"},{"messageId":"685","fix":"777","desc":"687"},{"messageId":"688","fix":"778","desc":"690"},{"messageId":"685","fix":"779","desc":"687"},{"messageId":"688","fix":"780","desc":"690"},{"messageId":"685","fix":"781","desc":"687"},{"messageId":"688","fix":"782","desc":"690"},{"messageId":"685","fix":"783","desc":"687"},{"messageId":"688","fix":"784","desc":"690"},{"desc":"785","fix":"786"},"Update the dependencies array to be: [GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",{"range":"787","text":"788"},"removeEscape",{"range":"789","text":"790"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"791","text":"792"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"793","text":"790"},{"range":"794","text":"792"},{"range":"795","text":"790"},{"range":"796","text":"792"},{"range":"797","text":"790"},{"range":"798","text":"792"},{"range":"799","text":"790"},{"range":"800","text":"792"},{"range":"801","text":"790"},{"range":"802","text":"792"},{"range":"803","text":"790"},{"range":"804","text":"792"},{"range":"805","text":"790"},{"range":"806","text":"792"},{"range":"807","text":"790"},{"range":"808","text":"792"},{"range":"809","text":"790"},{"range":"810","text":"792"},{"range":"811","text":"790"},{"range":"812","text":"792"},{"range":"813","text":"790"},{"range":"814","text":"792"},{"range":"815","text":"790"},{"range":"816","text":"792"},{"range":"817","text":"790"},{"range":"818","text":"792"},{"range":"819","text":"790"},{"range":"820","text":"792"},{"range":"821","text":"790"},{"range":"822","text":"792"},{"range":"823","text":"790"},{"range":"824","text":"792"},{"range":"825","text":"790"},{"range":"826","text":"792"},{"range":"827","text":"790"},{"range":"828","text":"792"},{"range":"829","text":"790"},{"range":"830","text":"792"},{"range":"831","text":"790"},{"range":"832","text":"792"},{"range":"833","text":"790"},{"range":"834","text":"792"},{"range":"835","text":"790"},{"range":"836","text":"792"},{"range":"837","text":"790"},{"range":"838","text":"792"},{"range":"839","text":"790"},{"range":"840","text":"792"},{"range":"841","text":"790"},{"range":"842","text":"792"},{"range":"843","text":"790"},{"range":"844","text":"792"},{"range":"845","text":"790"},{"range":"846","text":"792"},{"range":"847","text":"790"},{"range":"848","text":"792"},{"range":"849","text":"790"},{"range":"850","text":"792"},{"range":"851","text":"790"},{"range":"852","text":"792"},{"range":"853","text":"790"},{"range":"854","text":"792"},{"range":"855","text":"790"},{"range":"856","text":"792"},{"range":"857","text":"790"},{"range":"858","text":"792"},{"range":"859","text":"790"},{"range":"860","text":"792"},{"range":"861","text":"790"},{"range":"862","text":"792"},{"range":"863","text":"790"},{"range":"864","text":"792"},{"range":"865","text":"790"},{"range":"866","text":"792"},{"range":"867","text":"790"},{"range":"868","text":"792"},{"range":"869","text":"790"},{"range":"870","text":"792"},{"range":"871","text":"790"},{"range":"872","text":"792"},{"range":"873","text":"790"},{"range":"874","text":"792"},{"range":"875","text":"790"},{"range":"876","text":"792"},{"range":"877","text":"790"},{"range":"878","text":"792"},{"range":"879","text":"790"},{"range":"880","text":"792"},{"range":"881","text":"790"},{"range":"882","text":"792"},{"range":"883","text":"790"},{"range":"884","text":"792"},{"range":"885","text":"790"},{"range":"886","text":"792"},"Update the dependencies array to be: [GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]",{"range":"887","text":"888"},[3850,3852],"[GraficoCE_Total, GraficoNNCLog_Total, GraficoNNCMP_Total, GraficoRAC_Aves, GraficoRAC_Outros, GraficoRAC_Preparados, GraficoRAC_Suinos, GraficoRAC_Total]",[51437,51438],"",[51437,51437],"\\",[51449,51450],[51449,51449],[51684,51685],[51684,51684],[51696,51697],[51696,51696],[52673,52674],[52673,52673],[52681,52682],[52681,52681],[52904,52905],[52904,52904],[52912,52913],[52912,52912],[54100,54101],[54100,54100],[54114,54115],[54114,54114],[54117,54118],[54117,54117],[54131,54132],[54131,54131],[54134,54135],[54134,54134],[54148,54149],[54148,54148],[54152,54153],[54152,54152],[54160,54161],[54160,54160],[54163,54164],[54163,54163],[54171,54172],[54171,54171],[54191,54192],[54191,54191],[54203,54204],[54203,54203],[54206,54207],[54206,54206],[54214,54215],[54214,54214],[54218,54219],[54218,54218],[54236,54237],[54236,54236],[54240,54241],[54240,54240],[54250,54251],[54250,54250],[54494,54495],[54494,54494],[54508,54509],[54508,54508],[54511,54512],[54511,54511],[54525,54526],[54525,54525],[54528,54529],[54528,54528],[54542,54543],[54542,54542],[54546,54547],[54546,54546],[54554,54555],[54554,54554],[54557,54558],[54557,54557],[54565,54566],[54565,54565],[54585,54586],[54585,54585],[54597,54598],[54597,54597],[54600,54601],[54600,54600],[54608,54609],[54608,54608],[54612,54613],[54612,54612],[54630,54631],[54630,54630],[54634,54635],[54634,54634],[54644,54645],[54644,54644],[61941,61942],[61941,61941],[61947,61948],[61947,61947],[62331,62332],[62331,62331],[62337,62338],[62337,62337],[87308,87310],"[GraficoCETotal, GraficoCETotalAvesLeves, GraficoCETotalAvesPesadas, GraficoCETotalAvesPesadasPR, GraficoCETotalAvesPesadasRS, GraficoCETotalAvesPesadasSP, GraficoCETotalPreparados, GraficoCETotalSuinos, GraficoNCCMP, GraficoNCCMPAvesLeves, GraficoNCCMPAvesPesadas, GraficoNCCMPAvesPesadasPR, GraficoNCCMPAvesPesadasRS, GraficoNCCMPAvesPesadasSP, GraficoNCCMPPreparados, GraficoNCCMPSuinos, GraficoNNCAvesLeves, GraficoNNCAvesLevesProblemas, GraficoNNCAvesLevesUnidades, GraficoNNCAvesPR, GraficoNNCAvesPRProblemas, GraficoNNCAvesPRUnidades, GraficoNNCAvesPesadas, GraficoNNCAvesPesadasProblemas, GraficoNNCAvesPesadasUnidades, GraficoNNCAvesRS, GraficoNNCAvesRSProblemas, GraficoNNCAvesRSUnidades, GraficoNNCAvesSP, GraficoNNCAvesSPProblemas, GraficoNNCAvesSPUnidades, GraficoNNCCEInerente, GraficoNNCCEMetal, GraficoNNCCENaoInerente, GraficoNNCCEOssos, GraficoNNCCEPlastico, GraficoNNCCETotal, GraficoNNCLogDetalhesAves, GraficoNNCLogDetalhesPreparados, GraficoNNCLogDetalhesSuinos, GraficoNNCLogDetalhesTotal, GraficoNNCMPTotalCE, GraficoNNCMPTotalCEAvesLeves, GraficoNNCMPTotalCEAvesPesadas, GraficoNNCMPTotalCEAvesPesadasPR, GraficoNNCMPTotalCEAvesPesadasRS, GraficoNNCMPTotalCEAvesPesadasSP, GraficoNNCMPTotalCEPreparados, GraficoNNCMPTotalCESuinos, GraficoNNCPreparados, GraficoNNCPreparadosProblemas, GraficoNNCPreparadosUnidades, GraficoNNCSuinos, GraficoNNCSuinosProblemas, GraficoNNCSuinosUnidades, GraficoRAC, GraficoRACAvesLeves, GraficoRACAvesPesadas, GraficoRACAvesPesadasPR, GraficoRACAvesPesadasRS, GraficoRACAvesPesadasSP, GraficoRACDetalhesAC, GraficoRACDetalhesAberturaPDV, GraficoRACDetalhesCE, GraficoRACDetalhesCEInerente, GraficoRACDetalhesCENaoInerente, GraficoRACDetalhesCEPlastico, GraficoRACDetalhesCabelo, GraficoRACDetalhesCritica, GraficoRACDetalhesDoc, GraficoRACDetalhesEspeciais, GraficoRACDetalhesFFO, GraficoRACDetalhesInseto, GraficoRACDetalhesIntoxicacao, GraficoRACDetalhesLarva, GraficoRACDetalhesLogME, GraficoRACDetalhesLogMI, GraficoRACDetalhesMassatake, GraficoRACDetalhesMetal, GraficoRACDetalhesPDV, GraficoRACDetalhesPlastico, GraficoRACDetalhesTT, GraficoRACDetalhesTerceiro, GraficoRACME, GraficoRACMI, GraficoRACPreparados, GraficoRACProblemasAvesLeves, GraficoRACProblemasAvesPesadas, GraficoRACProblemasAvesPesadasPR, GraficoRACProblemasAvesPesadasRS, GraficoRACProblemasAvesPesadasSP, GraficoRACProblemasPreparados, GraficoRACProblemasSuinos, GraficoRACSuinos, GraficoRACTotalCE, GraficoRACTotalCEAvesLeves, GraficoRACTotalCEAvesPesadas, GraficoRACTotalCEAvesPesadasPR, GraficoRACTotalCEAvesPesadasRS, GraficoRACTotalCEAvesPesadasSP, GraficoRACTotalCEPreparados, GraficoRACTotalCESuinos, GraficoRACUnidadesAvesLeves, GraficoRACUnidadesAvesPesadas, GraficoRACUnidadesAvesPesadasPR, GraficoRACUnidadesAvesPesadasRS, GraficoRACUnidadesAvesPesadasSP, GraficoRACUnidadesPreparados, GraficoRACUnidadesSuinos, buscarDadosTable, chamarAPI, whereNNCMP, whereRACPreparados]"]